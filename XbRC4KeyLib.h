///
/// This is a Library of different XBOX Bios RC4 Keys, do with as you please.
/// 
/// These were pulled with the "MCPX 1.1 Toolkit v2.0" so there may be some incorrect Keys etc
/// (https://legacy.downloads.diomtec.com/homebrew/xbins/PC%20Based%20Applications/bios%20tools/mcpx1.1%20Toolkit/)
/// 
/// Some Bioses will be duplicate as there are so many different bioses that have modifications,
/// These are also what I have in my archives, Others may be different
/// I plan to add MD5s of each rom over time 
/// 
/// 
/// List of examined ROM Makers:
/// Offical
/// Complex
/// EvolutionX
/// Xecuter
/// iND-BIOS


// ######################################################### //
// Official Microshaft Bioses


// 3944_256k_BFM.bin
// MD5:3cfc2ac12b7d8ac87d91d501e1a38d17
unsigned char RC4_Retail3944BFM[0x14] =
 { 
	0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 } 

 
 // 4034_256k_BFM.bin
 // MD5:314126a8c3039af83d1dda22832a2b62
 unsigned char RC4_Retail4034BFM[0x14] =
 { 
	0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 } 
 

 // 4134_1024k.bin
 // MD5:c0a543ce695201aca87c51b3a5cdf8c8
 unsigned char RC4_Retail4134[0x14] =
 { 
	0xa6, 0xe4, 0x3c, 0xb1, 0xa0, 0x9d, 0xac, 0x58, 0xcb, 0x65, 
	0xcd, 0xac, 0xc9, 0x27, 0xa7, 0x36, 0xbd, 0x3c, 0x97, 0x39, 
 } 
 
 
 // Unofficial build 4400 MCPX 1.0?
 // MD5: ???
 unsigned char RC4_Unofficial4400[0x14] =
 { 
	 
 } 
 
 
 // 4817_1024k.bin
 // MD5:430b3edf0f1ea5c77f47845ed3cbd22b
 unsigned char RC4_Retail4817[0x14] =
 { 
	0x5d, 0x4e, 0x62, 0xe7, 0x3e, 0xba, 0x20, 0xc3, 0x22, 0x12,
	0x5e, 0x91, 0xa1, 0xc7, 0x9f, 0xe0, 0xfa, 0x05, 0x40, 0xfb, 
 } 

 
 // 4817_256k_BFM.bin
 // MD5:e99a37193f8d8ce4f020c616e3861c36
 unsigned char RC4_Retail4817BFM[0x14] =
 { 
	0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 } 

 
 // 5101_256k.bin
 // MD5:769898e9682e1f5d065b5961460d03e6
 unsigned char RC4_Retail5101[0x14] =
 { 
	0x25, 0xc0, 0x65, 0x82, 0xf9, 0xe9, 0x67, 0x56, 0x40, 0x7b, 
	0xe8, 0xf5, 0xc2, 0x1f, 0x0a, 0xd9, 0xb0, 0xa7, 0x83, 0x28, 
 }


 // 5101_256k_BFM.bin
 // MD5:d999658167ef1596eeeef951da1bc037
 unsigned char RC4_Retail5101BFM[0x14] = 
 { 
	0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 } 
 
 
 // 5530_1024k.bin
 // MD5:2c1a087f5b46b7184720b13c33635057
 unsigned char RC4_Retail5530[0x14] =
 { 
	0xef, 0xd2, 0x04, 0x39, 0x2d, 0x54, 0xe2, 0xfe, 0x5c, 0xd4, 
	0xa0, 0xc5, 0x0f, 0xa1, 0x08, 0x5b, 0x61, 0x0c, 0x17, 0xdb, 
 } 
 
 
 // 5558_256k_BFM_debug.bin
 // MD5:70935d2cd5714a5f2bfbb2af8c44cfdc
 unsigned char RC4_Debug5558BFM[0x14] =
 { 
	0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 } 
 
 
 // 5713_1024k.bin
 // MD5:4cbf35e8be4d05a645eb5f8c9c4bd7a6
 unsigned char RC4_Retail5713[0x14] =
  { 
	0x72, 0x45, 0x72, 0x5d, 0x23, 0x00, 0xe7, 0x56, 0xe7, 0x1c, 
	0xf5, 0x85, 0x57, 0x4e, 0xde, 0x59, 0xf1, 0x34, 0xb9, 0xff, 
 } 
 
 
 // 5838_256k.bin
 // MD5:c5907d241de37c22b083b6e30fa934b0
 unsigned char RC4_Retail5838[0x14] =
 { 
	0x85, 0x78, 0xea, 0xfb, 0x40, 0xe4, 0xad, 0x61, 0xb3, 0x31, 
	0xec, 0xe2, 0xd2, 0x77, 0xb7, 0xff, 0xc5, 0xa2, 0x42, 0xc8, 
 } 
 
 
 
 // ######################################################### //
 // Complex Bioses
  

// Complex 4627 Debug (BFM)(1024Kb).bin
// MD5:49adacad7c72c6389c02aa3260ef066e
unsigned char RC4_CPXDebug4627BFM[0x14] =
 { 
	0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 } 
 
 
 // complex_4627debug.bin
 // MD5:e8dd61cc6abdbd06aac185e371312dc1
 unsigned char RC4_CPXDebug4627[0x14] =
 { 
	0xba, 0x53, 0xac, 0x32, 0xda, 0x0e, 0x88, 0xcf, 0x64, 0x04, 
	0xf0, 0x33, 0xa7, 0xf7, 0x84, 0xca, 0x06, 0x61, 0x2d, 0xe9, 
 } 
 
 
 // Complex 4627 Debug v1.02 (1024Kb).bin
 // MD5:19b5c6d3d42a707bba620634fe6d4baf
 unsigned char RC4_CPXDebug4627_102[0x14] = 
 { 
	0xba, 0x53, 0xac, 0x32, 0xda, 0x0e, 0x88, 0xcf, 0x64, 0x04, 
	0xf0, 0x33, 0xa7, 0xf7, 0x84, 0xca, 0x06, 0x61, 0x2d, 0xe9, 
 } 
 
 
 // Complex 4627 Debug v1.03 (1024Kb).bin
 // MD5:b701b33bd1281e9541970ad9112161c6
 unsigned char RC4_CPXDebug4627_103[0x14] =
 { 
	0xc3, 0x8f, 0x18, 0x8f, 0x10, 0x16, 0x45, 0xe9, 0xe9, 0x88, 
	0x3d, 0xa8, 0x08, 0xec, 0x71, 0x58, 0xae, 0x14, 0xb8, 0xe3, 
 } 
 
 
 // Complex 4627 Retail v1.0 (1024Kb).bin
 // MD5:ec00e31e746de2473acfe7903c5a4cb7
 unsigned char RC4_CPXRetail4627[0x14] =
 { 
	0x66, 0xf7, 0x74, 0xe3, 0x21, 0x2b, 0xa9, 0xdc, 0x3b, 0x8b, 
	0xb1, 0xea, 0xc4, 0xac, 0xb0, 0x75, 0x49, 0x70, 0x6b, 0xa6, 
 } 
 
 
  // Complex 4627 Retail v1.02 (1024Kb).bin
  // MD5:ec00e31e746de2473acfe7903c5a4cb7
 unsigned char RC4_CPXRetail4627_102[0x14] =
 { 
	0x66, 0xf7, 0x74, 0xe3, 0x21, 0x2b, 0xa9, 0xdc, 0x3b, 0x8b, 
	0xb1, 0xea, 0xc4, 0xac, 0xb0, 0x75, 0x49, 0x70, 0x6b, 0xa6, 
 } 
 
  
  // Complex 4627 Retail v1.03 (1024Kb).bin
  // MD5:21445c6f28fca7285b0f167ea770d1e5
 unsigned char RC4_CPXRetail4627_103[0x14] =
 { 
	0x0d, 0x84, 0x9d, 0xec, 0x65, 0x25, 0xc3, 0xd5, 0x3f, 0xe4, 
	0x8d, 0x7e, 0xf4, 0xeb, 0x22, 0x1f, 0x21, 0xf6, 0x4a, 0x9a, 
 } 
 
 
 // ######################################################### //
 // EvoX ROMs
 

 //## EvoX 2.0-3.6 ##//
 
 // EvoX v2.0 (1024kb).bin
 // MD5:8d32492e54d372ee50f2d8a056746343
 unsigned char RC4_EvoX20[0x14] =
 {
	
	0xa6, 0xe4, 0x3c, 0xb1, 0xa0, 0x9d, 0xac, 0x58, 0xcb, 0x65, 
	0xcd, 0xac, 0xc9, 0x27, 0xa7, 0x36, 0xbd, 0x3c, 0x97, 0x39, 
 } 
 
  
 // EvoX v2.1 (1024kb).bin
 // MD5:22122dd961146ab7a24d7ef82786f904
 unsigned char RC4_EvoX21[0x14] =
 {
	 0xa6, 0xe4, 0x3c, 0xb1, 0xa0, 0x9d, 0xac, 0x58, 0xcb, 0x65, 
	 0xcd, 0xac, 0xc9, 0x27, 0xa7, 0x36, 0xbd, 0x3c, 0x97, 0x39, 
 }
 
 // EvoX v2.2 (1024kb).bin
 // MD5:5c8078113196d0186c06910a8f6f0201
 unsigned char RC4_EvoX22[0x14] =
 {
	 0xa6, 0xe4, 0x3c, 0xb1, 0xa0, 0x9d, 0xac, 0x58, 0xcb, 0x65, 
	 0xcd, 0xac, 0xc9, 0x27, 0xa7, 0x36, 0xbd, 0x3c, 0x97, 0x39, 
 }
 
 // EvoX v2.3 (1024kb).bin
 // MD5:af5ddbd2aed33d494c9b87270cb51431
 unsigned char RC4_EvoX23[0x14] =
 {
	 0xa6, 0xe4, 0x3c, 0xb1, 0xa0, 0x9d, 0xac, 0x58, 0xcb, 0x65, 
	 0xcd, 0xac, 0xc9, 0x27, 0xa7, 0x36, 0xbd, 0x3c, 0x97, 0x39, 
 }
 
 // EvoX v2.4 (1024kb).bin
 // MD5:d6908721df3f3d46f94754d341c2cf26
 unsigned char RC4_EvoX24[0x14] =
 {
	 0xc0, 0xad, 0x34, 0x67, 0xde, 0x78, 0x1f, 0xa0, 0x7b, 0xae, 
	 0x50, 0xe4, 0x60, 0x89, 0xf6, 0x71, 0x40, 0xc6, 0xb3, 0xa1, 
 }
 
 // EvoX v2.5 (256kb).bin
 // MD5:a306077f8358287dde13c014c908294a
 unsigned char RC4_EvoX25[0x14] =
 {
	 0x75, 0xf4, 0x60, 0x87, 0xf3, 0xde, 0xb5, 0xd7, 0xa8, 0x93, 
	 0xd4, 0xdf, 0xd6, 0x11, 0x4e, 0x4c, 0x33, 0xe1, 0xec, 0x77, 
 }
 
 // EvoX v2.6 (Xbox 1.0)(256kb).bin
 // MD5:dd3de3542bff7b36cdb0dbe078c27fbe
 unsigned char RC4_EvoX26[0x14] =
 {
	 0xe4, 0x05, 0x0b, 0xd4, 0xa6, 0x99, 0xed, 0xe6, 0x9c, 0xa2, 
	 0x09, 0x00, 0x33, 0x8f, 0x4e, 0xa1, 0x64, 0xf0, 0xa8, 0x6c, 
 }
 
 
 // EvoX v3.6 (Xbox 1.1)(256kb).bin
 // MD5:cb73b4914bb6c70b66e21377989726a0
 unsigned char RC4_EvoX[0x14] =
 {
	 0x29, 0x95, 0xd9, 0x50, 0xff, 0x62, 0x22, 0x42, 0x27, 0x62, 
	 0x3d, 0xfe, 0x9e, 0x52, 0x89, 0xbc, 0x2c, 0x93, 0x09, 0xb2, 
 }
 



 //## EvoX D6 Bioses ##//
 
 // EvoX D6 (256kb).bin
 // MD5:c349c2b047a3d6c2de2e1c10185ecf86
 unsigned char RC4_EvoXD6[0x14] =
  { 
	0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 } 
 
 
 // EvoX D6 (BFM)(1024kb).bin
 // MD5:fb5911fcfa2bddb9c8ce001f10781219
 unsigned char RC4_EvoXD6BFM[0x14] =
  { 
	0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 } 

 
 // EvoX D6 MP (256kb).bin
 // MD5:738e892e7cb1bf90d836eb205b61a667
 unsigned char RC4_EvoXD6MP[0x14] =
 {
	 0x93, 0xc1, 0x02, 0x45, 0xe4, 0xac, 0x0d, 0xb5, 0x21, 0x21, 
	 0x7f, 0x5b, 0x29, 0x5a, 0x58, 0x90, 0xe0, 0xc4, 0x5e, 0x5d, 
 }
 
 
 //## EvoX M7 ##/
 
 // EvoX M7 (256k).bin
 // MD5:93db270779f5b964f50be075a5d5d2d2
 unsigned char RC4_M7[0x14] =
 {
	 0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	 0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }
 
 // ExoX M7 BFM.bin
 // MD5:6b3aa4d0d74f53b0690d9724666373f1
 unsigned char RC4_M7BFM[0x14] =
 {
	 0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	 0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 }
 
 
 //## EvoX M8 ##//
 
 // EvoX M8 (Xbox 1.0-1.5)(256kb).bin
 // MD5:aa4d0820b932009090f780f0ee1d1b1c
 unsigned char RC4_EvoXM8[0x14] =
 {
	0xdb, 0xd9, 0x84, 0xcf, 0xc6, 0x36, 0x8a, 0x68, 0x15, 0x87, 
	0x29, 0xed, 0x84, 0x80, 0x52, 0x5e, 0x1f, 0x1f, 0x44, 0x10, 
 } 
 
 
 // EvoX M8 (Xbox 1.6)(256kb).bin
 // MD5:b6fe3d5cf9df635cbc4e48fbe2b469f1
 unsigned char RC4_EvoXM8Xcal[0x14] =
 {
	0xdb, 0xd9, 0x84, 0xcf, 0xc6, 0x36, 0x8a, 0x68, 0x15, 0x87, 
	0x29, 0xed, 0x84, 0x80, 0x52, 0x5e, 0x1f, 0x1f, 0x44, 0x10, 
 }
 
 // EvoX M8+ (Xbox v1.0-v1.5)(256kb).bin
 // MD5:dfc6288f6b67fd021e1970491c64c0a0
 unsigned char RC4_EvoXM8Plus[0x14] =
 {
	0xcb, 0xb8, 0xdb, 0x0f, 0x90, 0xb9, 0x60, 0x49, 0x0f, 0x7b, 
	0xac, 0xb9, 0x56, 0x20, 0xeb, 0xf2, 0xa2, 0xa5, 0x74, 0x3b, 
 }
 
 
 // EvoX M8+ (Xbox v1.6)(256kb).bin
 // MD5:58b8782501983725f984499620ca342b
  unsigned char RC4_EvoXM8PlusXcal[0x14] =
  {
	0xcb, 0xb8, 0xdb, 0x0f, 0x90, 0xb9, 0x60, 0x49, 0x0f, 0x7b, 
	0xac, 0xb9, 0x56, 0x20, 0xeb, 0xf2, 0xa2, 0xa5, 0x74, 0x3b, 
  }
  
  
 // EvoX M8+ bfm.bin
 // MD5:d7fad9cf3a4f36b11e0cfb22509d287b
 unsigned char RC4_EvoXM8PlusBFM[0x14] =
 {
	0xcb, 0xb8, 0xdb, 0x0f, 0x90, 0xb9, 0x60, 0x49, 0x0f, 0x7b, 
	0xac, 0xb9, 0x56, 0x20, 0xeb, 0xf2, 0xa2, 0xa5, 0x74, 0x3b, 
 }
  
  
  
  // ######################################################### //
  // Xecuter Bioses  -- There's a lot of reused keys
  
 // Xecuter (256kb).bin
 // MD5:5d540dfba44b8c7ee3826cbadfa04491
 unsigned char RC4_Xecuter[0x14] =
 {
	0xa6, 0xe4, 0x3c, 0xb1, 0xa0, 0x9d, 0xac, 0x58, 0xcb, 0x65, 
	0xcd, 0xac, 0xc9, 0x27, 0xa7, 0x36, 0xbd, 0x3c, 0x97, 0x39, 
 }
 
 
 // Xecuter_flashbios.bin
 // MD5:f18d9bcc2eb3b7129bd892c0428b2249
  unsigned char RC4_XecuterFlashBios[0x14] =
 {
	0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 } 
 
 
 // xecuter_flashbios26.bin
 // MD5:69daaf1d6897e814566c043033a166f8
  unsigned char RC4_XecuterFlashBios26[0x14] = 
 { 
	0x51, 0xd9, 0x4a, 0xd7, 0xac, 0x63, 0xb5, 0x79, 0x44, 0x51, 
	0xe4, 0x60, 0x6d, 0xf1, 0x73, 0x16, 0x3a, 0x45, 0xe8, 0xa8, 
 } 
 
 
 
 // xecuter_flashbios227.bin
 // MD5:7eb22e652ffbcc905c596bd2596c07bf
  unsigned char RC4_XecuterFlashBios227[0x14] = 
 { 
	0x51, 0xd9, 0x4a, 0xd7, 0xac, 0x63, 0xb5, 0x79, 0x44, 0x51, 
	0xe4, 0x60, 0x6d, 0xf1, 0x73, 0x16, 0x3a, 0x45, 0xe8, 0xa8, 
 } 
 
 
 // xecuter_flashbios228.bin
 // MD5:3b7b9d12eab11855e418725ed027ca56
  unsigned char RC4_XecuterFlashBios228[0x14] = 
 { 
	0x51, 0xd9, 0x4a, 0xd7, 0xac, 0x63, 0xb5, 0x79, 0x44, 0x51, 
	0xe4, 0x60, 0x6d, 0xf1, 0x73, 0x16, 0x3a, 0x45, 0xe8, 0xa8, 
 } 
 
 
 // xecuter_flashbios_v301.bin
 // MD5:1b91d1c79004b7c542c340a1cb296095
  unsigned char RC4_XecuterFlashBios301[0x14] = 
 { 
	0x51, 0xd9, 0x4a, 0xd7, 0xac, 0x63, 0xb5, 0x79, 0x44, 0x51, 
	0xe4, 0x60, 0x6d, 0xf1, 0x73, 0x16, 0x3a, 0x45, 0xe8, 0xa8, 
 } 
 
 
 // xecuter_flashbios_v302.bin
 // MD5:9cd33240e23260323836e5ea4afbc713
  unsigned char RC4_XecuterFlashBios302[0x14] = 
 { 
	0x51, 0xd9, 0x4a, 0xd7, 0xac, 0x63, 0xb5, 0x79, 0x44, 0x51, 
	0xe4, 0x60, 0x6d, 0xf1, 0x73, 0x16, 0x3a, 0x45, 0xe8, 0xa8, 
 } 
 
 
 
 // xecuter_flashbios_v303.bin
 // MD5:a8c16825f2776d7e16dd4de25d99b318
  unsigned char RC4_XecuterFlashBios303[0x14] = 
 { 
	0x51, 0xd9, 0x4a, 0xd7, 0xac, 0x63, 0xb5, 0x79, 0x44, 0x51, 
	0xe4, 0x60, 0x6d, 0xf1, 0x73, 0x16, 0x3a, 0x45, 0xe8, 0xa8, 
 } 
 
 
 
 //## X2 ##//
 
  
 // xecuter2 4973 v1.0 (256Kb).bin
 // MD5:7137c693e67554b92873d3ec5cdbb1d8
 unsigned char RC4_X2497310[0x14] =
 {
	 0x77, 0x90, 0xb1, 0xa0, 0x36, 0x56, 0x01, 0xeb, 0x60, 0x56, 
	 0x94, 0x4c, 0xc2, 0xb4, 0x6a, 0x6b, 0xc8, 0x4e, 0xf5, 0x4b, 
 }
 
 
 // xecuter2 4973 v1.1 (256Kb).bin
 // MD5:b4f9a0c9f363c49751268ed0bd4126e4
 unsigned char RC4_X2497311[0x14] =
 {
	 0x5d, 0x4e, 0x62, 0xe7, 0x3e, 0xba, 0x20, 0xc3, 0x22, 0x12, 
	 0x5e, 0x91, 0xa1, 0xc7, 0x9f, 0xe0, 0xfa, 0x05, 0x40, 0xfb, 
 }
 
 
 // xecuter2 4976 MultiVer (256kb).bin
 // MD5:fa871654c7e7fd0432dd6a388580e201
 unsigned char RC4_X24976Multi[0x14] =
 {
	 0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	 0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }
 
 
 // xecuter2 4976.02 (BFM)(256kb).bin
 // MD5:a94715ee92b7a514cc005ae1f872d493
 unsigned char RC4_X2497602BFM[0x14] =
 {
	 0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	 0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77,  
 }
 
 
 // xecuter2 4977 (BFM)(256Kb)[h].bin
 // MD5:df52eb2da256a949f3380e8d89a8a0c3
 unsigned char RC4_X24977BFM[0x14] =
 {
	 0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	 0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 }
 
 
 // xecuter2 4978 (BFM)(1024kb).bin
 // MD5:dace114550589cff0cdccd4ad58e3c05
 unsigned char RC4_X24978BFM[0x14] =
 {
	 0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	 0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 }

 
 
 // xecuter2 4978.03 (BFM)(1024kb).bin
 // MD5:ec9fecdd0d2cb8882ecb342fec4f394f
 unsigned char RC4_X2497903BFM[0x14] =
 {
	 0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	 0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 }
 
 
 // xecuter2 4979.06 (BFM)(256Kb)[h].bin
 // MD5:b53e149b5f49f8f512f7faa5716b0d43
 unsigned char RC4_X2497906BFM[0x14] =
 {
	 0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	 0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 }
 
 
 // xecuter2 4981.06 (BFM)(256kb).bin
 // MD5:0fdc31ee6fb2bf3ceda26775d38bb442
 unsigned char RC4_X2498106BFM[0x14] =
 {
	 0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	 0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 }
 
 
 // xecuter2 4981.67 (BFM)(1024kb).bin
 // MD5:48c2fd94aab31199f5faaf533f91e0b9
 unsigned char RC4_X2498167BFM[0x14] =
 {
	0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77,  
 }
 
 
 // xecuter2 4981.67 (BFM)(256kb).bin
 // MD5:a30d0e3d8233122485f159e9780c0853
 unsigned char RC4_X2498167BFM[0x14] =
 {
	 0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	 0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 }
 
 
 // xecuter2 v1 (E)(1024kb).bin
 // MD5:fdd7fd961151cef16a4212dbd6cc96ec
 unsigned char RC4_X2v1E[0x14] =
 {
	 0xf5, 0x1d, 0x29, 0xaf, 0x7f, 0xb1, 0x7a, 0x6d, 0xa2, 0x6d, 
	 0xba, 0xba, 0x15, 0xc7, 0x21, 0x93, 0xc2, 0x7c, 0xb6, 0xe3, 
 }
 
 
 // xecuter2 v1 (F)(1024kb).bin
 // MD5:583ed7cd6b174423763bf8d145fa3818
 unsigned char RC4_X2v1F[0x14] =
 {
	 0xe5, 0x0d, 0xde, 0x8c, 0x49, 0xdd, 0x7d, 0x7d, 0x5d, 0xbf, 
	 0x2e, 0xfb, 0x73, 0x6d, 0x68, 0x84, 0xf2, 0xc5, 0x2c, 0xea, 
 }
 
 
 // xecuter2 v1.0 (1024Kb).bin
 // MD5:a61dfd2361487c059f81f272c9857396
 unsigned char RC4_X2v10[0x14] =
 {
	 0x27, 0xe7, 0x70, 0x64, 0xca, 0x0e, 0xcb, 0x6a, 0x62, 0x2a, 
	 0x15, 0xe9, 0xf6, 0xc3, 0xb8, 0x3f, 0x5c, 0xcc, 0xfd, 0xd1, 
 }
 
 
 // xecuter2 v1.1 (1024Kb).bin
 // MD5:604a2acaf16837c5b596995bd328b731
 unsigned char RC4_X2v11[0x14] =
 {
	 0x5d, 0x4e, 0x62, 0xe7, 0x3e, 0xba, 0x20, 0xc3, 0x22, 0x12, 
	 0x5e, 0x91, 0xa1, 0xc7, 0x9f, 0xe0, 0xfa, 0x05, 0x40, 0xfb, 
 }
 
 
 // xecuter2 v1.1 Final (1024Kb).bin
 // MD5:c92a29a5db0d7d43abe1ee750b35184b
 unsigned char RC4_X2v11Final[0x14] =
 {
	 0x5d, 0x4e, 0x62, 0xe7, 0x3e, 0xba, 0x20, 0xc3, 0x22, 0x12, 
	 0x5e, 0x91, 0xa1, 0xc7, 0x9f, 0xe0, 0xfa, 0x05, 0x40, 0xfb, 
 }
 

 //## X3 ##//
 

 // X3 1835 v16plus.bin
 // MD5:2eb9ad82085b4c2b4bcb21382cae97c2
 unsigned char RC4_X31835v16plus[0x14] =
 {
	 0xdb, 0xd9, 0x84, 0xcf, 0xc6, 0x36, 0x8a, 0x68, 0x15, 0x87, 
	 0x29, 0xed, 0x84, 0x80, 0x52, 0x5e, 0x1f, 0x1f, 0x44, 0x10, 
 }
 
 // X3 1835.bin
 // MD5:35831d75e0ddeff08a021a699455e63b
 unsigned char RC4_X31835[0x14] =
 {
	 0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	 0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }
 
 // X3 1879 v16.bin
 // MD5:b630554befb55e1296d7591f4ee9bcc8
 unsigned char RC4_X31879v16[0x14] =
 {
	 0xdb, 0xd9, 0x84, 0xcf, 0xc6, 0x36, 0x8a, 0x68, 0x15, 0x87, 
	 0x29, 0xed, 0x84, 0x80, 0x52, 0x5e, 0x1f, 0x1f, 0x44, 0x10, 
 }
 
 // X3 1879.bin
 // MD5:5309fde86b5de4137d82b7daca632a0d
 unsigned char RC4_X31879[0x14] =
 {
	 0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	 0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }
 
 // X3 1892 v16.bin
 // MD5:fb2ee361dfc0f30c5b067098a8d48f7d
 unsigned char RC4_X31892v16[0x14] =
 {
	 0xdb, 0xd9, 0x84, 0xcf, 0xc6, 0x36, 0x8a, 0x68, 0x15, 0x87, 
	 0x29, 0xed, 0x84, 0x80, 0x52, 0x5e, 0x1f, 0x1f, 0x44, 0x10, 
 }
 
 // X3 1892.bin
 // MD5:1197956765d8c47556fc1760c1a927cd
 unsigned char RC4_X31892[0x14] =
 {
	  0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	  0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }
 
 // X3 1916 v16.bin
 // MD5:0c4a374740000b465bdc01f8582767bd
 unsigned char RC4_X31916v16[0x14] =
 {
	 0xdb, 0xd9, 0x84, 0xcf, 0xc6, 0x36, 0x8a, 0x68, 0x15, 0x87, 
	 0x29, 0xed, 0x84, 0x80, 0x52, 0x5e, 0x1f, 0x1f, 0x44, 0x10, 
 }
 
 // X3 1916.bin
 // MD5:fb1034a43245d0852312bb77630b0d79
 unsigned char RC4_X31916[0x14] =
 {
	 0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	 0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }
 
 // X3 1943 GOLD.bin
 // MD5:448b683fc84aaf560e413ab81d89150a
 unsigned char RC4_X31943[0x14] =
 {
	 0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	 0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }
 
 // X3 1943 v1.6 GOLD.bin
 // MD5:2f189f440a054510eb46731d9ff4911f
 unsigned char RC4_X31943v16[0x14] =
 {
	 0xdb, 0xd9, 0x84, 0xcf, 0xc6, 0x36, 0x8a, 0x68, 0x15, 0x87, 
	 0x29, 0xed, 0x84, 0x80, 0x52, 0x5e, 0x1f, 0x1f, 0x44, 0x10, 
 }
 
 // X3_1959.bin
 // MD5:f99f51b650423c8bcfc161b467f27533
 unsigned char RC4_X31959[0x14] =
 {
	 0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	 0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }
 
 // X3_1959_v16plus.bin
 // MD5:102b4ec6331e9e7c42d52d78b53209c1
 unsigned char RC4_X31959v16[0x14] =
 {
	 0xcb, 0xb8, 0xdb, 0x0f, 0x90, 0xb9, 0x60, 0x49, 0x0f, 0x7b, 
	 0xac, 0xb9, 0x56, 0x20, 0xeb, 0xf2, 0xa2, 0xa5, 0x74, 0x3b, 
 }

 // X3 1957 v16.bin
// MD5:9f7a26e9d4c86ecf89396778616fc873
 unsigned char RC4_X31957v16[0x14] =
 {
	 0xdb, 0xd9, 0x84, 0xcf, 0xc6, 0x36, 0x8a, 0x68, 0x15, 0x87, 
	 0x29, 0xed, 0x84, 0x80, 0x52, 0x5e, 0x1f, 0x1f, 0x44, 0x10, 
 }
 
 // X3 1957.bin
 // MD5:cd775daebcd38c23d64fa98800b2e165
 unsigned char RC4_X31957[0x14] =
 {
	 0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	 0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }
 
 // X3 2913 v16plus.bin
 // MD5:06a2d7d62a4e0a7c9cd0d43e09a1fda9
 unsigned char RC4_X32913v16[0x14] =
 {
	 0xcb, 0xb8, 0xdb, 0x0f, 0x90, 0xb9, 0x60, 0x49, 0x0f, 0x7b, 
	 0xac, 0xb9, 0x56, 0x20, 0xeb, 0xf2, 0xa2, 0xa5, 0x74, 0x3b, 
 }
 
 // X3 2913.bin
 // MD5:1e35ea428e8ed2f8401caf472d7b2eab
 unsigned char RC4_X32913[0x14] =
 {
	 0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	 0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }
 // X3 2914 v16plus.bin
 unsigned char RC4_X32914v16[0x14] =
 {
	 0xcb, 0xb8, 0xdb, 0x0f, 0x90, 0xb9, 0x60, 0x49, 0x0f, 0x7b, 
	 0xac, 0xb9, 0x56, 0x20, 0xeb, 0xf2, 0xa2, 0xa5, 0x74, 0x3b, 
 }
 
 // X3 2914.bin
 // MD5:cf45c7e2fbf654460e81cf525a74e341
 unsigned char RC4_X32914[0x14] =
 {
	 0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	 0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }

 // X3 3029 v16plus.bin
 // MD5:3a37f6267ed70fdd9ed90433c3ad22d0
 unsigned char RC4_X33029v16[0x14] =
 {
	 0xcb, 0xb8, 0xdb, 0x0f, 0x90, 0xb9, 0x60, 0x49, 0x0f, 0x7b, 
	 0xac, 0xb9, 0x56, 0x20, 0xeb, 0xf2, 0xa2, 0xa5, 0x74, 0x3b, 
 }
 
 // X3 3029.bin
 // MD5:fa4ecd2a97029f18b88d7951d665ea24
 unsigned char RC4_X33019[0x14] =
 {
	 0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	 0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }
 
 // X3 3108 v16plus.bin
 // MD5:48442508d03ebdb507445159bf2d4765
 unsigned char RC4_X33108v16[0x14] =
 {
	 0xcb, 0xb8, 0xdb, 0x0f, 0x90, 0xb9, 0x60, 0x49, 0x0f, 0x7b, 
	 0xac, 0xb9, 0x56, 0x20, 0xeb, 0xf2, 0xa2, 0xa5, 0x74, 0x3b, 
 }
 
 // X3 3108.bin
 // MD5:6980ba26d8e7a6fd8453f80a7266ae3e
 unsigned char RC4_X33108[0x14] =
 {
	 0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	 0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }
 
 // X3 3238 v16plus.bin
 // MD5:0a071e1302dd31ecc52ef9804ab20ec3
 unsigned char RC4_X33238v16[0x14] =
 {
	 0xcb, 0xb8, 0xdb, 0x0f, 0x90, 0xb9, 0x60, 0x49, 0x0f, 0x7b, 
	 0xac, 0xb9, 0x56, 0x20, 0xeb, 0xf2, 0xa2, 0xa5, 0x74, 0x3b, 
 }
 
 // X3 3238.bin
 // MD5:b4a860ea7de643bf9dcf7d9db2d6778b
 unsigned char RC4_X33238[0x14] =
 {
	 0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	 0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }
 
 // X3 3284 v16plus.bin
 // MD5:e4774f8c6f48d1536d57ce32f4f747da
 unsigned char RC4_X33284v16[0x14] =
 {
	 0xcb, 0xb8, 0xdb, 0x0f, 0x90, 0xb9, 0x60, 0x49, 0x0f, 0x7b, 
	 0xac, 0xb9, 0x56, 0x20, 0xeb, 0xf2, 0xa2, 0xa5, 0x74, 0x3b, 
 }
 
 // X3 3284.bin
 // MD5:53cf62aa82018c4f7bfe96049b0b25f0
 unsigned char RC4_X33284[0x14] =
 {
	 0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	 0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }
 
 // X3 3288 v16plus.bin
 // MD5:b058ed6331b7a699c6cbf4ec9d43ec47
 unsigned char RC4_X33288v16[0x14] =
 {
	 0xcb, 0xb8, 0xdb, 0x0f, 0x90, 0xb9, 0x60, 0x49, 0x0f, 0x7b, 
	 0xac, 0xb9, 0x56, 0x20, 0xeb, 0xf2, 0xa2, 0xa5, 0x74, 0x3b, 
 }
 
 // X3 3288.bin
 // MD5:3bc15e1d899178c36c34e20c994de68e
 unsigned char RC4_X33288[0x14] =
 {
	 0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	 0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }
 
 // X3 3293 v16plus.bin
 // MD5:fdf21d3cd91618de2fb8ddcd16a211d6
 unsigned char RC4_X33293v16[0x14] =
 {
	 0xcb, 0xb8, 0xdb, 0x0f, 0x90, 0xb9, 0x60, 0x49, 0x0f, 0x7b, 
	 0xac, 0xb9, 0x56, 0x20, 0xeb, 0xf2, 0xa2, 0xa5, 0x74, 0x3b, 
 }

 // X3 3293.bin
 // MD5:38dcf918ecef28c63b8c87dd76fa8a1e
 unsigned char RC4_X33293[0x14] =
 {
	 0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	 0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }
 
 // X3 3294 v16plus.bin
 // MD5:bcb4681087626fc4aceec1d4e663525c
 unsigned char RC4_X33294v16[0x14] =
 {
	 0xcb, 0xb8, 0xdb, 0x0f, 0x90, 0xb9, 0x60, 0x49, 0x0f, 0x7b, 
	 0xac, 0xb9, 0x56, 0x20, 0xeb, 0xf2, 0xa2, 0xa5, 0x74, 0x3b, 
 }
 
 // X3 3294.bin
 // MD5:fa05ad25e4582e1a3abd4a658d6a09ef
 unsigned char RC4_X33294[0x14] =
 {
	 0x68, 0xa0, 0x23, 0xeb, 0xc5, 0x56, 0xd9, 0x4b, 0xc8, 0x19, 
	 0x72, 0x01, 0xa0, 0x96, 0x2a, 0xf8, 0x97, 0xa0, 0xe0, 0xcb, 
 }
 
 
 
 // ########################################################## // 
 // iND-BiOS
 

 // iND-BIOS 5003.06 bfm.bin
 // MD5:58e1ec2abdd1b6add2a174d8dceae22e
 unsigned char RC4_IND500306BFM[0x14] =
 {
	 0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	 0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 } 
 
 // iND-BIOS 5003.67 bfm.bin
 // MD5:47fd2605fbff2c6293daca0d6968d424
 unsigned char RC4_IND500367BFM[0x14] =
 {
	 0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	 0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 } 
 
 // iND-BiOS.5001.06.bin
 // MD5:0d7c02c44410dc570cd26598933a3dc9
 unsigned char RC4_IND500106[0x14] =
 {
	 0xef, 0xbd, 0xf5, 0x29, 0x27, 0x9e, 0x3d, 0x87, 0x88, 0x01, 
	 0xae, 0xde, 0x0d, 0x3d, 0x68, 0x81, 0xbb, 0x1e, 0xf7, 0x8b, 
 } 
 
 // iND-BiOS.5001.67.bin
 // MD5:f27de71b28f27b1f5fc9f4263c9b4b3e
 unsigned char RC4_IND500167[0x14] =
 {
	 0xda, 0xbf, 0x28, 0x4e, 0x5f, 0x3b, 0x12, 0x31, 0x34, 0xeb, 
	 0x8c, 0x57, 0xd6, 0x7f, 0xaa, 0xf3, 0x03, 0x67, 0x68, 0x62, 
 } 
 
 // iND-BiOS.5002.06.bfm.bin
 // MD5:879465496d23c0945870fed6839c91c6
 unsigned char RC4_IND500206BFM[0x14] =
 {
	 0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	 0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 } 
 
 // iND-BiOS.5002.06.bin
 // MD5:69f53c041778db35097d6153338b4f32
 unsigned char RC4_IND500206[0x14] =
 {
	 0xb7, 0x51, 0x54, 0x1f, 0xd7, 0x71, 0x31, 0xc0, 0x58, 0x55, 
	 0xc8, 0x47, 0xcf, 0xd2, 0x86, 0x81, 0x94, 0x06, 0x87, 0x0f, 
 } 
 
 // iND-BiOS.5002.67.bfm.bin
 // MD5:56d757cd0010724694d45f085e340416
 unsigned char RC4_IND500267BFM[0x14] =
 {
	 0xee, 0x0a, 0xcb, 0x56, 0x6d, 0xf1, 0xd9, 0x52, 0x8a, 0x40, 
	 0x6d, 0x2f, 0x3c, 0xfa, 0xa5, 0x1d, 0x8b, 0x20, 0xfe, 0x77, 
 } 
 
 // iND-BiOS.5002.67.bin
 // MD5:2b834cbc56c571633949362c628adafc
 unsigned char RC4_IND500267[0x14] =
 {
	 0xd3, 0xf8, 0x1d, 0x9b, 0xb4, 0x2f, 0xd6, 0xd2, 0x0b, 0x6b, 
	 0x6c, 0xe1, 0xbf, 0xec, 0x43, 0x37, 0xb2, 0x08, 0xda, 0x05, 
 } 
 
 // iND-BiOS.5003.06.bin
 // MD5:18517e593e351dae58e848af33eaa1af
 unsigned char RC4_IND500306[0x14] =
 {
	 0xb1, 0xeb, 0xb8, 0x8c, 0x53, 0xd0, 0x17, 0xdc, 0x49, 0xe4, 
	 0x1d, 0xa0, 0xf2, 0x00, 0xd5, 0xe8, 0x91, 0x09, 0xe6, 0xba, 
 } 

 // iND-BiOS.5003.67.bin
 // MD5:85163f3e62c70f5f7a1e6c4e6a1dcc1b
 unsigned char RC4_IND500367[0x14] =
 {
	 0x0b, 0x98, 0x26, 0x7f, 0xbc, 0x82, 0x71, 0x9b, 0x86, 0xbe, 
	 0xbd, 0x97, 0xb4, 0x06, 0x80, 0x54, 0xa2, 0x49, 0xc4, 0x90, 
 } 
 //  
