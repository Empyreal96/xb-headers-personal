/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'xboxkrnl.exe'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct _KTHREAD;
struct _KWAIT_BLOCK;
struct _KQUEUE;
struct _KDPC;
struct _EXCEPTION_RECORD;
struct _CONTEXT;
struct IUnknown_vtbl;
union _FILE_SEGMENT_ELEMENT;
struct _ETHREAD;
struct _IO_STACK_LOCATION;
struct _FILE_OBJECT;
struct _IRP;
struct _DRIVER_OBJECT;
struct _IO_COMPLETION_CONTEXT;
struct _OBJECT_DIRECTORY;
struct _XMEDIAINFO;
struct _XMEDIAPACKET;
struct XMediaObject_vtbl;
struct _KPRCB;
struct _RTL_HANDLE_TABLE_ENTRY;
union $2680AC85811A6ACA0EB9DAE57ABC077B;
struct CRefCount_vtbl;
struct CMcpxCore_vtbl;
struct CMcpxDspScratchDma;
struct CMcpxDspImage;
struct CMcpxGPDspManager;
struct ACIPRD;
struct CAc97Channel;
struct _SGEHEAPRUNMARKER;
struct CHeap<_SGEHEAPRUNMARKER>_vtbl;
struct CDirectSound;
struct CMcpxVoiceClient;
struct CDirectSoundVoiceSettings;
struct CDirectSoundBufferSettings;
struct MCPX_DEFERRED_COMMAND;
struct CMcpxBuffer;
struct CDirectSoundBuffer;

/* 1 */
enum _FILE_INFORMATION_CLASS : __int32
{
  FileDirectoryInformation = 0x1,
  FileFullDirectoryInformation = 0x2,
  FileBothDirectoryInformation = 0x3,
  FileBasicInformation = 0x4,
  FileStandardInformation = 0x5,
  FileInternalInformation = 0x6,
  FileEaInformation = 0x7,
  FileAccessInformation = 0x8,
  FileNameInformation = 0x9,
  FileRenameInformation = 0xA,
  FileLinkInformation = 0xB,
  FileNamesInformation = 0xC,
  FileDispositionInformation = 0xD,
  FilePositionInformation = 0xE,
  FileFullEaInformation = 0xF,
  FileModeInformation = 0x10,
  FileAlignmentInformation = 0x11,
  FileAllInformation = 0x12,
  FileAllocationInformation = 0x13,
  FileEndOfFileInformation = 0x14,
  FileAlternateNameInformation = 0x15,
  FileStreamInformation = 0x16,
  FilePipeInformation = 0x17,
  FilePipeLocalInformation = 0x18,
  FilePipeRemoteInformation = 0x19,
  FileMailslotQueryInformation = 0x1A,
  FileMailslotSetInformation = 0x1B,
  FileCompressionInformation = 0x1C,
  FileObjectIdInformation = 0x1D,
  FileCompletionInformation = 0x1E,
  FileMoveClusterInformation = 0x1F,
  FileQuotaInformation = 0x20,
  FileReparsePointInformation = 0x21,
  FileNetworkOpenInformation = 0x22,
  FileAttributeTagInformation = 0x23,
  FileTrackingInformation = 0x24,
  FileMaximumInformation = 0x25,
};

/* 2 */
enum _TOKEN_INFORMATION_CLASS : __int32
{
  TokenUser = 0x1,
  TokenGroups = 0x2,
  TokenPrivileges = 0x3,
  TokenOwner = 0x4,
  TokenPrimaryGroup = 0x5,
  TokenDefaultDacl = 0x6,
  TokenSource = 0x7,
  TokenType = 0x8,
  TokenImpersonationLevel = 0x9,
  TokenStatistics = 0xA,
  TokenRestrictedSids = 0xB,
  TokenSessionId = 0xC,
};

/* 3 */
enum _D3DRENDERSTATETYPE : __int32
{
  D3DRS_PS_MIN = 0x0,
  D3DRS_PSALPHAINPUTS0 = 0x0,
  D3DRS_PSALPHAINPUTS1 = 0x1,
  D3DRS_PSALPHAINPUTS2 = 0x2,
  D3DRS_PSALPHAINPUTS3 = 0x3,
  D3DRS_PSALPHAINPUTS4 = 0x4,
  D3DRS_PSALPHAINPUTS5 = 0x5,
  D3DRS_PSALPHAINPUTS6 = 0x6,
  D3DRS_PSALPHAINPUTS7 = 0x7,
  D3DRS_PSFINALCOMBINERINPUTSABCD = 0x8,
  D3DRS_PSFINALCOMBINERINPUTSEFG = 0x9,
  D3DRS_PSCONSTANT0_0 = 0xA,
  D3DRS_PSCONSTANT0_1 = 0xB,
  D3DRS_PSCONSTANT0_2 = 0xC,
  D3DRS_PSCONSTANT0_3 = 0xD,
  D3DRS_PSCONSTANT0_4 = 0xE,
  D3DRS_PSCONSTANT0_5 = 0xF,
  D3DRS_PSCONSTANT0_6 = 0x10,
  D3DRS_PSCONSTANT0_7 = 0x11,
  D3DRS_PSCONSTANT1_0 = 0x12,
  D3DRS_PSCONSTANT1_1 = 0x13,
  D3DRS_PSCONSTANT1_2 = 0x14,
  D3DRS_PSCONSTANT1_3 = 0x15,
  D3DRS_PSCONSTANT1_4 = 0x16,
  D3DRS_PSCONSTANT1_5 = 0x17,
  D3DRS_PSCONSTANT1_6 = 0x18,
  D3DRS_PSCONSTANT1_7 = 0x19,
  D3DRS_PSALPHAOUTPUTS0 = 0x1A,
  D3DRS_PSALPHAOUTPUTS1 = 0x1B,
  D3DRS_PSALPHAOUTPUTS2 = 0x1C,
  D3DRS_PSALPHAOUTPUTS3 = 0x1D,
  D3DRS_PSALPHAOUTPUTS4 = 0x1E,
  D3DRS_PSALPHAOUTPUTS5 = 0x1F,
  D3DRS_PSALPHAOUTPUTS6 = 0x20,
  D3DRS_PSALPHAOUTPUTS7 = 0x21,
  D3DRS_PSRGBINPUTS0 = 0x22,
  D3DRS_PSRGBINPUTS1 = 0x23,
  D3DRS_PSRGBINPUTS2 = 0x24,
  D3DRS_PSRGBINPUTS3 = 0x25,
  D3DRS_PSRGBINPUTS4 = 0x26,
  D3DRS_PSRGBINPUTS5 = 0x27,
  D3DRS_PSRGBINPUTS6 = 0x28,
  D3DRS_PSRGBINPUTS7 = 0x29,
  D3DRS_PSCOMPAREMODE = 0x2A,
  D3DRS_PSFINALCOMBINERCONSTANT0 = 0x2B,
  D3DRS_PSFINALCOMBINERCONSTANT1 = 0x2C,
  D3DRS_PSRGBOUTPUTS0 = 0x2D,
  D3DRS_PSRGBOUTPUTS1 = 0x2E,
  D3DRS_PSRGBOUTPUTS2 = 0x2F,
  D3DRS_PSRGBOUTPUTS3 = 0x30,
  D3DRS_PSRGBOUTPUTS4 = 0x31,
  D3DRS_PSRGBOUTPUTS5 = 0x32,
  D3DRS_PSRGBOUTPUTS6 = 0x33,
  D3DRS_PSRGBOUTPUTS7 = 0x34,
  D3DRS_PSCOMBINERCOUNT = 0x35,
  D3DRS_PSDOTMAPPING = 0x37,
  D3DRS_PSINPUTTEXTURE = 0x38,
  D3DRS_PS_MAX = 0x39,
  D3DRS_ZFUNC = 0x39,
  D3DRS_ALPHAFUNC = 0x3A,
  D3DRS_ALPHABLENDENABLE = 0x3B,
  D3DRS_ALPHATESTENABLE = 0x3C,
  D3DRS_ALPHAREF = 0x3D,
  D3DRS_SRCBLEND = 0x3E,
  D3DRS_DESTBLEND = 0x3F,
  D3DRS_ZWRITEENABLE = 0x40,
  D3DRS_DITHERENABLE = 0x41,
  D3DRS_SHADEMODE = 0x42,
  D3DRS_COLORWRITEENABLE = 0x43,
  D3DRS_STENCILZFAIL = 0x44,
  D3DRS_STENCILPASS = 0x45,
  D3DRS_STENCILFUNC = 0x46,
  D3DRS_STENCILREF = 0x47,
  D3DRS_STENCILMASK = 0x48,
  D3DRS_STENCILWRITEMASK = 0x49,
  D3DRS_BLENDOP = 0x4A,
  D3DRS_BLENDCOLOR = 0x4B,
  D3DRS_SWATHWIDTH = 0x4C,
  D3DRS_POLYGONOFFSETZSLOPESCALE = 0x4D,
  D3DRS_POLYGONOFFSETZOFFSET = 0x4E,
  D3DRS_POINTOFFSETENABLE = 0x4F,
  D3DRS_WIREFRAMEOFFSETENABLE = 0x50,
  D3DRS_SOLIDOFFSETENABLE = 0x51,
  D3DRS_SIMPLE_MAX = 0x52,
  D3DRS_FOGENABLE = 0x52,
  D3DRS_FOGTABLEMODE = 0x53,
  D3DRS_FOGSTART = 0x54,
  D3DRS_FOGEND = 0x55,
  D3DRS_FOGDENSITY = 0x56,
  D3DRS_RANGEFOGENABLE = 0x57,
  D3DRS_WRAP0 = 0x58,
  D3DRS_WRAP1 = 0x59,
  D3DRS_WRAP2 = 0x5A,
  D3DRS_WRAP3 = 0x5B,
  D3DRS_LIGHTING = 0x5C,
  D3DRS_SPECULARENABLE = 0x5D,
  D3DRS_LOCALVIEWER = 0x5E,
  D3DRS_COLORVERTEX = 0x5F,
  D3DRS_BACKSPECULARMATERIALSOURCE = 0x60,
  D3DRS_BACKDIFFUSEMATERIALSOURCE = 0x61,
  D3DRS_BACKAMBIENTMATERIALSOURCE = 0x62,
  D3DRS_BACKEMISSIVEMATERIALSOURCE = 0x63,
  D3DRS_SPECULARMATERIALSOURCE = 0x64,
  D3DRS_DIFFUSEMATERIALSOURCE = 0x65,
  D3DRS_AMBIENTMATERIALSOURCE = 0x66,
  D3DRS_EMISSIVEMATERIALSOURCE = 0x67,
  D3DRS_BACKAMBIENT = 0x68,
  D3DRS_AMBIENT = 0x69,
  D3DRS_POINTSIZE = 0x6A,
  D3DRS_POINTSIZE_MIN = 0x6B,
  D3DRS_POINTSPRITEENABLE = 0x6C,
  D3DRS_POINTSCALEENABLE = 0x6D,
  D3DRS_POINTSCALE_A = 0x6E,
  D3DRS_POINTSCALE_B = 0x6F,
  D3DRS_POINTSCALE_C = 0x70,
  D3DRS_POINTSIZE_MAX = 0x71,
  D3DRS_PATCHEDGESTYLE = 0x72,
  D3DRS_PATCHSEGMENTS = 0x73,
  D3DRS_DEFERRED_MAX = 0x74,
  D3DRS_PSTEXTUREMODES = 0x74,
  D3DRS_VERTEXBLEND = 0x75,
  D3DRS_FOGCOLOR = 0x76,
  D3DRS_FILLMODE = 0x77,
  D3DRS_BACKFILLMODE = 0x78,
  D3DRS_TWOSIDEDLIGHTING = 0x79,
  D3DRS_NORMALIZENORMALS = 0x7A,
  D3DRS_ZENABLE = 0x7B,
  D3DRS_STENCILENABLE = 0x7C,
  D3DRS_STENCILFAIL = 0x7D,
  D3DRS_FRONTFACE = 0x7E,
  D3DRS_CULLMODE = 0x7F,
  D3DRS_TEXTUREFACTOR = 0x80,
  D3DRS_ZBIAS = 0x81,
  D3DRS_LOGICOP = 0x82,
  D3DRS_EDGEANTIALIAS = 0x83,
  D3DRS_MULTISAMPLEANTIALIAS = 0x84,
  D3DRS_MULTISAMPLEMASK = 0x85,
  D3DRS_MULTISAMPLETYPE = 0x86,
  D3DRS_SHADOWFUNC = 0x87,
  D3DRS_LINEWIDTH = 0x88,
  D3DRS_DXT1NOISEENABLE = 0x89,
  D3DRS_YUVENABLE = 0x8A,
  D3DRS_OCCLUSIONCULLENABLE = 0x8B,
  D3DRS_STENCILCULLENABLE = 0x8C,
  D3DRS_ROPZCMPALWAYSREAD = 0x8D,
  D3DRS_ROPZREAD = 0x8E,
  D3DRS_DONOTCULLUNCOMPRESSED = 0x8F,
  D3DRS_MAX = 0x90,
  D3DRS_FORCE_DWORD = 0x7FFFFFFF,
};

/* 4 */
enum _D3DXMESH : __int32
{
  D3DXMESH_32BIT = 0x1,
  D3DXMESH_DONOTCLIP = 0x2,
  D3DXMESH_POINTS = 0x4,
  D3DXMESH_RTPATCHES = 0x8,
  D3DXMESH_NPATCHES = 0x4000,
  D3DXMESH_VB_SYSTEMMEM = 0x10,
  D3DXMESH_VB_MANAGED = 0x20,
  D3DXMESH_VB_WRITEONLY = 0x40,
  D3DXMESH_VB_DYNAMIC = 0x80,
  D3DXMESH_IB_SYSTEMMEM = 0x100,
  D3DXMESH_IB_MANAGED = 0x200,
  D3DXMESH_IB_WRITEONLY = 0x400,
  D3DXMESH_IB_DYNAMIC = 0x800,
  D3DXMESH_VB_SHARE = 0x1000,
  D3DXMESH_USEHWONLY = 0x2000,
  D3DXMESH_SYSTEMMEM = 0x110,
  D3DXMESH_MANAGED = 0x220,
  D3DXMESH_WRITEONLY = 0x440,
  D3DXMESH_DYNAMIC = 0x880,
};

/* 5 */
enum _D3DXMESHSIMP : __int32
{
  D3DXMESHSIMP_VERTEX = 0x1,
  D3DXMESHSIMP_FACE = 0x2,
};

/* 6 */
enum _MAX_FVF_DECL_SIZE : __int32
{
  MAX_FVF_DECL_SIZE = 0x14,
};

/* 7 */
enum _SYSDBG_COMMAND : __int32
{
  SysDbgQueryModuleInformation = 0x0,
  SysDbgQueryTraceInformation = 0x1,
  SysDbgSetTracepoint = 0x2,
  SysDbgSetSpecialCall = 0x3,
  SysDbgClearSpecialCalls = 0x4,
  SysDbgQuerySpecialCalls = 0x5,
  SysDbgBreakPoint = 0x6,
};

/* 8 */
enum _D3DMATERIALCOLORSOURCE : __int32
{
  D3DMCS_MATERIAL = 0x0,
  D3DMCS_COLOR1 = 0x1,
  D3DMCS_COLOR2 = 0x2,
  D3DMCS_FORCE_DWORD = 0x7FFFFFFF,
};

/* 9 */
enum _HARDERROR_RESPONSE_OPTION : __int32
{
  OptionAbortRetryIgnore = 0x0,
  OptionOk = 0x1,
  OptionOkCancel = 0x2,
  OptionRetryCancel = 0x3,
  OptionYesNo = 0x4,
  OptionYesNoCancel = 0x5,
  OptionShutdownSystem = 0x6,
  OptionOkNoWait = 0x7,
  OptionCancelTryContinue = 0x8,
};

/* 10 */
enum _D3DTEXTURESTAGESTATETYPE : __int32
{
  D3DTSS_COLOROP = 0x0,
  D3DTSS_COLORARG0 = 0x1,
  D3DTSS_COLORARG1 = 0x2,
  D3DTSS_COLORARG2 = 0x3,
  D3DTSS_ALPHAOP = 0x4,
  D3DTSS_ALPHAARG0 = 0x5,
  D3DTSS_ALPHAARG1 = 0x6,
  D3DTSS_ALPHAARG2 = 0x7,
  D3DTSS_RESULTARG = 0x8,
  D3DTSS_TEXTURETRANSFORMFLAGS = 0x9,
  D3DTSS_ADDRESSU = 0xA,
  D3DTSS_ADDRESSV = 0xB,
  D3DTSS_ADDRESSW = 0xC,
  D3DTSS_MAGFILTER = 0xD,
  D3DTSS_MINFILTER = 0xE,
  D3DTSS_MIPFILTER = 0xF,
  D3DTSS_MIPMAPLODBIAS = 0x10,
  D3DTSS_MAXMIPLEVEL = 0x11,
  D3DTSS_MAXANISOTROPY = 0x12,
  D3DTSS_COLORKEYOP = 0x13,
  D3DTSS_COLORSIGN = 0x14,
  D3DTSS_ALPHAKILL = 0x15,
  D3DTSS_DEFERRED_MAX = 0x16,
  D3DTSS_BUMPENVMAT00 = 0x16,
  D3DTSS_BUMPENVMAT01 = 0x17,
  D3DTSS_BUMPENVMAT11 = 0x18,
  D3DTSS_BUMPENVMAT10 = 0x19,
  D3DTSS_BUMPENVLSCALE = 0x1A,
  D3DTSS_BUMPENVLOFFSET = 0x1B,
  D3DTSS_TEXCOORDINDEX = 0x1C,
  D3DTSS_BORDERCOLOR = 0x1D,
  D3DTSS_COLORKEYCOLOR = 0x1E,
  D3DTSS_MAX = 0x20,
  D3DTSS_FORCE_DWORD = 0x7FFFFFFF,
};

/* 11 */
enum _PROXY_CLASS : __int32
{
  ProxyFull = 0x0,
  ProxyService = 0x1,
  ProxyTree = 0x2,
  ProxyDirectory = 0x3,
};

/* 12 */
enum _HARDERROR_RESPONSE : __int32
{
  ResponseReturnToCaller = 0x0,
  ResponseNotHandled = 0x1,
  ResponseAbort = 0x2,
  ResponseCancel = 0x3,
  ResponseIgnore = 0x4,
  ResponseNo = 0x5,
  ResponseOk = 0x6,
  ResponseRetry = 0x7,
  ResponseYes = 0x8,
  ResponseTryAgain = 0x9,
  ResponseContinue = 0xA,
};

/* 13 */
enum _KOBJECTS : __int32
{
  EventNotificationObject = 0x0,
  EventSynchronizationObject = 0x1,
  MutantObject = 0x2,
  ProcessObject = 0x3,
  QueueObject = 0x4,
  SemaphoreObject = 0x5,
  ThreadObject = 0x6,
  Spare1Object = 0x7,
  TimerNotificationObject = 0x8,
  TimerSynchronizationObject = 0x9,
  Spare2Object = 0xA,
  Spare3Object = 0xB,
  Spare4Object = 0xC,
  Spare5Object = 0xD,
  Spare6Object = 0xE,
  Spare7Object = 0xF,
  Spare8Object = 0x10,
  Spare9Object = 0x11,
  ApcObject = 0x12,
  DpcObject = 0x13,
  DeviceQueueObject = 0x14,
  EventPairObject = 0x15,
  InterruptObject = 0x16,
  ProfileObject = 0x17,
};

/* 14 */
enum _D3DTEXTUREOP : __int32
{
  D3DTOP_DISABLE = 0x1,
  D3DTOP_SELECTARG1 = 0x2,
  D3DTOP_SELECTARG2 = 0x3,
  D3DTOP_MODULATE = 0x4,
  D3DTOP_MODULATE2X = 0x5,
  D3DTOP_MODULATE4X = 0x6,
  D3DTOP_ADD = 0x7,
  D3DTOP_ADDSIGNED = 0x8,
  D3DTOP_ADDSIGNED2X = 0x9,
  D3DTOP_SUBTRACT = 0xA,
  D3DTOP_ADDSMOOTH = 0xB,
  D3DTOP_BLENDDIFFUSEALPHA = 0xC,
  D3DTOP_BLENDTEXTUREALPHA = 0xD,
  D3DTOP_BLENDFACTORALPHA = 0xE,
  D3DTOP_BLENDTEXTUREALPHAPM = 0xF,
  D3DTOP_BLENDCURRENTALPHA = 0x10,
  D3DTOP_PREMODULATE = 0x11,
  D3DTOP_MODULATEALPHA_ADDCOLOR = 0x12,
  D3DTOP_MODULATECOLOR_ADDALPHA = 0x13,
  D3DTOP_MODULATEINVALPHA_ADDCOLOR = 0x14,
  D3DTOP_MODULATEINVCOLOR_ADDALPHA = 0x15,
  D3DTOP_DOTPRODUCT3 = 0x16,
  D3DTOP_MULTIPLYADD = 0x17,
  D3DTOP_LERP = 0x18,
  D3DTOP_BUMPENVMAP = 0x19,
  D3DTOP_BUMPENVMAPLUMINANCE = 0x1A,
  D3DTOP_MAX = 0x1B,
  D3DTOP_FORCE_DWORD = 0x7FFFFFFF,
};

/* 15 */
enum tagSTGTY : __int32
{
  STGTY_STORAGE = 0x1,
  STGTY_STREAM = 0x2,
  STGTY_LOCKBYTES = 0x3,
  STGTY_PROPERTY = 0x4,
};

/* 16 */
enum _ALTERNATIVE_ARCHITECTURE_TYPE : __int32
{
  StandardDesign = 0x0,
  NEC98x86 = 0x1,
  EndAlternatives = 0x2,
};

/* 17 */
enum tagSTREAM_SEEK : __int32
{
  STREAM_SEEK_SET = 0x0,
  STREAM_SEEK_CUR = 0x1,
  STREAM_SEEK_END = 0x2,
};

/* 18 */
enum _SHUTDOWN_ACTION : __int32
{
  ShutdownNoReboot = 0x0,
  ShutdownReboot = 0x1,
  ShutdownPowerOff = 0x2,
};

/* 19 */
enum tagLOCKTYPE : __int32
{
  LOCK_WRITE = 0x1,
  LOCK_EXCLUSIVE = 0x2,
  LOCK_ONLYONCE = 0x4,
};

/* 20 */
enum _KINTERRUPT_MODE : __int32
{
  LevelSensitive = 0x0,
  Latched = 0x1,
};

/* 21 */
enum _KTHREAD_STATE : __int32
{
  Initialized = 0x0,
  Ready = 0x1,
  Running = 0x2,
  Standby = 0x3,
  Terminated = 0x4,
  Waiting = 0x5,
  Transition = 0x6,
};

/* 22 */
enum _D3DTEXTUREFILTERTYPE : __int32
{
  D3DTEXF_NONE = 0x0,
  D3DTEXF_POINT = 0x1,
  D3DTEXF_LINEAR = 0x2,
  D3DTEXF_ANISOTROPIC = 0x3,
  D3DTEXF_QUINCUNX = 0x4,
  D3DTEXF_GAUSSIANCUBIC = 0x5,
  D3DTEXF_MAX = 0x6,
  D3DTEXF_FORCE_DWORD = 0x7FFFFFFF,
};

/* 23 */
enum _KWAIT_REASON : __int32
{
  Executive = 0x0,
  FreePage = 0x1,
  PageIn = 0x2,
  PoolAllocation = 0x3,
  DelayExecution = 0x4,
  Suspended = 0x5,
  UserRequest = 0x6,
  WrExecutive = 0x7,
  WrFreePage = 0x8,
  WrPageIn = 0x9,
  WrPoolAllocation = 0xA,
  WrDelayExecution = 0xB,
  WrSuspended = 0xC,
  WrUserRequest = 0xD,
  WrEventPair = 0xE,
  WrQueue = 0xF,
  WrLpcReceive = 0x10,
  WrLpcReply = 0x11,
  WrVirtualMemory = 0x12,
  WrPageOut = 0x13,
  WrRendezvous = 0x14,
  WrFsCacheIn = 0x15,
  WrFsCacheOut = 0x16,
  Spare4 = 0x17,
  Spare5 = 0x18,
  Spare6 = 0x19,
  WrKernel = 0x1A,
  MaximumWaitReason = 0x1B,
};

/* 24 */
enum _D3DVSD_TOKENTYPE : __int32
{
  D3DVSD_TOKEN_NOP = 0x0,
  D3DVSD_TOKEN_STREAM = 0x1,
  D3DVSD_TOKEN_STREAMDATA = 0x2,
  D3DVSD_TOKEN_TESSELLATOR = 0x3,
  D3DVSD_TOKEN_CONSTMEM = 0x4,
  D3DVSD_TOKEN_EXT = 0x5,
  D3DVSD_TOKEN_END = 0x7,
  D3DVSD_FORCE_DWORD = 0x7FFFFFFF,
};

/* 25 */
enum _SECTION_INHERIT : __int32
{
  ViewShare = 0x1,
  ViewUnmap = 0x2,
};

/* 26 */
enum _D3DSHADER_INSTRUCTION_OPCODE_TYPE : __int32
{
  D3DSIO_NOP = 0x0,
  D3DSIO_MOV = 0x1,
  D3DSIO_ADD = 0x2,
  D3DSIO_SUB = 0x3,
  D3DSIO_MAD = 0x4,
  D3DSIO_MUL = 0x5,
  D3DSIO_RCP = 0x6,
  D3DSIO_RSQ = 0x7,
  D3DSIO_DP3 = 0x8,
  D3DSIO_DP4 = 0x9,
  D3DSIO_MIN = 0xA,
  D3DSIO_MAX = 0xB,
  D3DSIO_SLT = 0xC,
  D3DSIO_SGE = 0xD,
  D3DSIO_EXP = 0xE,
  D3DSIO_LOG = 0xF,
  D3DSIO_LIT = 0x10,
  D3DSIO_DST = 0x11,
  D3DSIO_LRP = 0x12,
  D3DSIO_FRC = 0x13,
  D3DSIO_M4x4 = 0x14,
  D3DSIO_M4x3 = 0x15,
  D3DSIO_M3x4 = 0x16,
  D3DSIO_M3x3 = 0x17,
  D3DSIO_M3x2 = 0x18,
  D3DSIO_TEXCOORD = 0x40,
  D3DSIO_TEXKILL = 0x41,
  D3DSIO_TEX = 0x42,
  D3DSIO_TEXBEM = 0x43,
  D3DSIO_TEXBEML = 0x44,
  D3DSIO_TEXREG2AR = 0x45,
  D3DSIO_TEXREG2GB = 0x46,
  D3DSIO_TEXM3x2PAD = 0x47,
  D3DSIO_TEXM3x2TEX = 0x48,
  D3DSIO_TEXM3x3PAD = 0x49,
  D3DSIO_TEXM3x3TEX = 0x4A,
  D3DSIO_TEXM3x3DIFF = 0x4B,
  D3DSIO_TEXM3x3SPEC = 0x4C,
  D3DSIO_TEXM3x3VSPEC = 0x4D,
  D3DSIO_EXPP = 0x4E,
  D3DSIO_LOGP = 0x4F,
  D3DSIO_CND = 0x50,
  D3DSIO_DEF = 0x51,
  D3DSIO_DPH = 0x100,
  D3DSIO_RCC = 0x101,
  D3DSIO_XMMA = 0x102,
  D3DSIO_XMMC = 0x103,
  D3DSIO_XDM = 0x104,
  D3DSIO_XDD = 0x105,
  D3DSIO_XFC = 0x106,
  D3DSIO_TEXM3x2DEPTH = 0x107,
  D3DSIO_TEXBRDF = 0x108,
  D3DSIO_COMMENT = 0xFFFE,
  D3DSIO_END = 0xFFFF,
  D3DSIO_FORCE_DWORD = 0x7FFFFFFF,
};

/* 27 */
enum _PROCESSINFOCLASS : __int32
{
  ProcessBasicInformation = 0x0,
  ProcessQuotaLimits = 0x1,
  ProcessIoCounters = 0x2,
  ProcessVmCounters = 0x3,
  ProcessTimes = 0x4,
  ProcessBasePriority = 0x5,
  ProcessRaisePriority = 0x6,
  ProcessDebugPort = 0x7,
  ProcessExceptionPort = 0x8,
  ProcessAccessToken = 0x9,
  ProcessLdtInformation = 0xA,
  ProcessLdtSize = 0xB,
  ProcessDefaultHardErrorMode = 0xC,
  ProcessIoPortHandlers = 0xD,
  ProcessPooledUsageAndLimits = 0xE,
  ProcessWorkingSetWatch = 0xF,
  ProcessUserModeIOPL = 0x10,
  ProcessEnableAlignmentFaultFixup = 0x11,
  ProcessPriorityClass = 0x12,
  ProcessWx86Information = 0x13,
  ProcessHandleCount = 0x14,
  ProcessAffinityMask = 0x15,
  ProcessPriorityBoost = 0x16,
  ProcessDeviceMap = 0x17,
  ProcessSessionInformation = 0x18,
  ProcessForegroundInformation = 0x19,
  ProcessWow64Information = 0x1A,
  MaxProcessInfoClass = 0x1B,
};

/* 28 */
enum _THREADINFOCLASS : __int32
{
  ThreadBasicInformation = 0x0,
  ThreadTimes = 0x1,
  ThreadPriority = 0x2,
  ThreadBasePriority = 0x3,
  ThreadAffinityMask = 0x4,
  ThreadImpersonationToken = 0x5,
  ThreadDescriptorTableEntry = 0x6,
  ThreadEnableAlignmentFaultFixup = 0x7,
  ThreadEventPair_Reusable = 0x8,
  ThreadQuerySetWin32StartAddress = 0x9,
  ThreadZeroTlsCell = 0xA,
  ThreadPerformanceCount = 0xB,
  ThreadAmILastThread = 0xC,
  ThreadIdealProcessor = 0xD,
  ThreadPriorityBoost = 0xE,
  ThreadSetTlsArrayAddress = 0xF,
  ThreadIsIoPending = 0x10,
  ThreadHideFromDebugger = 0x11,
  MaxThreadInfoClass = 0x12,
};

/* 29 */
enum $D5B0240FBDB3BF8D2C2AD52619EFB362 : __int32
{
  AUTONONE = 0x0,
  AUTONORMAL = 0x1,
  AUTOTEXCOORD = 0x2,
};

/* 30 */
enum $49D549A1B3A9DA330036FE3BDBA7E03A : __int32
{
  VERTEX_ARRAY = 0x0,
  WEIGHT_ARRAY = 0x1,
  NORMAL_ARRAY = 0x2,
  DIFFUSE_ARRAY = 0x3,
  SPEC_ARRAY = 0x4,
  TEX0_ARRAY = 0x9,
  TEX1_ARRAY = 0xA,
  TEX2_ARRAY = 0xB,
  TEX3_ARRAY = 0xC,
};

/* 31 */
enum _D3DSHADER_PARAM_DSTMOD_TYPE : __int32
{
  D3DSPDM_NONE = 0x0,
  D3DSPDM_BIAS = 0x100000,
  D3DSPDM_FORCE_DWORD = 0x7FFFFFFF,
};

/* 32 */
enum $84F751D35BFB0FC97BBDF6FBC15CF351 : __int32
{
  STREAM_NONE = 0xFFFFFFFF,
};

/* 33 */
enum _D3DSHADER_PARAM_REGISTER_TYPE : __int32
{
  D3DSPR_TEMP = 0x0,
  D3DSPR_INPUT = 0x10000000,
  D3DSPR_CONST = 0x20000000,
  D3DSPR_ADDR = 0x30000000,
  D3DSPR_TEXTURE = 0x30000000,
  D3DSPR_RASTOUT = 0x40000000,
  D3DSPR_ATTROUT = 0x50000000,
  D3DSPR_TEXCRDOUT = 0x60000000,
  D3DSPR_FORCE_DWORD = 0x7FFFFFFF,
};

/* 34 */
enum KCONTINUE_STATUS : __int32
{
  ContinueError = 0x0,
  ContinueSuccess = 0x1,
  ContinueProcessorReselected = 0x2,
  ContinueNextProcessor = 0x3,
};

/* 35 */
enum _D3DVS_RASTOUT_OFFSETS : __int32
{
  D3DSRO_POSITION = 0x0,
  D3DSRO_FOG = 0x1,
  D3DSRO_POINT_SIZE = 0x2,
  D3DSRO_FORCE_DWORD = 0x7FFFFFFF,
};

/* 36 */
enum D3DVS_ADRRESSMODE : __int32
{
  D3DVS_ADDRMODE_ABSOLUTE = 0x0,
  D3DVS_ADDRMODE_RELATIVE = 0x2000,
  D3DVS_ADDRMODE_FORCE_DWORD = 0x7FFFFFFF,
};

/* 37 */
enum _D3DSHADER_PARAM_SRCMOD_TYPE : __int32
{
  D3DSPSM_NONE = 0x0,
  D3DSPSM_NEG = 0x1000000,
  D3DSPSM_BIAS = 0x2000000,
  D3DSPSM_BIASNEG = 0x3000000,
  D3DSPSM_SIGN = 0x4000000,
  D3DSPSM_SIGNNEG = 0x5000000,
  D3DSPSM_COMP = 0x6000000,
  D3DSPSM_SAT = 0x7000000,
  D3DSPSM_FORCE_DWORD = 0x7FFFFFFF,
};

/* 38 */
enum _D3DBASISTYPE : __int32
{
  D3DBASIS_BEZIER = 0x0,
  D3DBASIS_BSPLINE = 0x1,
  D3DBASIS_INTERPOLATE = 0x2,
  D3DBASIS_FORCE_DWORD = 0x7FFFFFFF,
};

/* 39 */
enum _KEY_INFORMATION_CLASS : __int32
{
  KeyBasicInformation = 0x0,
  KeyNodeInformation = 0x1,
  KeyFullInformation = 0x2,
  KeyNameInformation = 0x3,
};

/* 40 */
enum _D3DORDERTYPE : __int32
{
  D3DORDER_LINEAR = 0x1,
  D3DORDER_CUBIC = 0x3,
  D3DORDER_QUINTIC = 0x5,
  D3DORDER_FORCE_DWORD = 0x7FFFFFFF,
};

/* 41 */
enum _D3DPATCHEDGESTYLE : __int32
{
  D3DPATCHEDGE_DISCRETE = 0x0,
  D3DPATCHEDGE_CONTINUOUS = 0x1,
  D3DPATCHEDGE_FORCE_DWORD = 0x7FFFFFFF,
};

/* 42 */
enum _D3DSTATEBLOCKTYPE : __int32
{
  D3DSBT_ALL = 0x1,
  D3DSBT_PIXELSTATE = 0x2,
  D3DSBT_VERTEXSTATE = 0x3,
  D3DSBT_FORCE_DWORD = 0x7FFFFFFF,
};

/* 43 */
enum _KEY_SET_INFORMATION_CLASS : __int32
{
  KeyWriteTimeInformation = 0x0,
};

/* 44 */
enum _D3DVERTEXBLENDFLAGS : __int32
{
  D3DVBF_DISABLE = 0x0,
  D3DVBF_1WEIGHTS = 0x1,
  D3DVBF_2WEIGHTS = 0x3,
  D3DVBF_3WEIGHTS = 0x5,
  D3DVBF_2WEIGHTS2MATRICES = 0x2,
  D3DVBF_3WEIGHTS3MATRICES = 0x4,
  D3DVBF_4WEIGHTS4MATRICES = 0x6,
  D3DVBF_MAX = 0x7,
  D3DVBF_FORCE_DWORD = 0x7FFFFFFF,
};

/* 45 */
enum _RTL_GENERIC_COMPARE_RESULTS : __int32
{
  GenericLessThan = 0x0,
  GenericGreaterThan = 0x1,
  GenericEqual = 0x2,
};

/* 46 */
enum _D3DTEXTURETRANSFORMFLAGS : __int32
{
  D3DTTFF_DISABLE = 0x0,
  D3DTTFF_COUNT1 = 0x1,
  D3DTTFF_COUNT2 = 0x2,
  D3DTTFF_COUNT3 = 0x3,
  D3DTTFF_COUNT4 = 0x4,
  D3DTTFF_PROJECTED = 0x100,
  D3DTTFF_FORCE_DWORD = 0x7FFFFFFF,
};

/* 47 */
enum _D3DDEVTYPE : __int32
{
  D3DDEVTYPE_HAL = 0x1,
  D3DDEVTYPE_REF = 0x2,
  D3DDEVTYPE_SW = 0x3,
  D3DDEVTYPE_FORCE_DWORD = 0x7FFFFFFF,
};

/* 48 */
enum _D3DFORMAT : __int32
{
  D3DFMT_UNKNOWN = 0xFFFFFFFF,
  D3DFMT_A8R8G8B8 = 0x6,
  D3DFMT_X8R8G8B8 = 0x7,
  D3DFMT_R5G6B5 = 0x5,
  D3DFMT_R6G5B5 = 0x27,
  D3DFMT_X1R5G5B5 = 0x3,
  D3DFMT_A1R5G5B5 = 0x2,
  D3DFMT_A4R4G4B4 = 0x4,
  D3DFMT_A8 = 0x19,
  D3DFMT_A8B8G8R8 = 0x3A,
  D3DFMT_B8G8R8A8 = 0x3B,
  D3DFMT_R4G4B4A4 = 0x39,
  D3DFMT_R5G5B5A1 = 0x38,
  D3DFMT_R8G8B8A8 = 0x3C,
  D3DFMT_R8B8 = 0x29,
  D3DFMT_G8B8 = 0x28,
  D3DFMT_P8 = 0xB,
  D3DFMT_L8 = 0x0,
  D3DFMT_A8L8 = 0x1A,
  D3DFMT_AL8 = 0x1,
  D3DFMT_L16 = 0x32,
  D3DFMT_V8U8 = 0x28,
  D3DFMT_L6V5U5 = 0x27,
  D3DFMT_X8L8V8U8 = 0x7,
  D3DFMT_Q8W8V8U8 = 0x3A,
  D3DFMT_V16U16 = 0x33,
  D3DFMT_D16_LOCKABLE = 0x2C,
  D3DFMT_D16 = 0x2C,
  D3DFMT_D24S8 = 0x2A,
  D3DFMT_F16 = 0x2D,
  D3DFMT_F24S8 = 0x2B,
  D3DFMT_YUY2 = 0x24,
  D3DFMT_UYVY = 0x25,
  D3DFMT_DXT1 = 0xC,
  D3DFMT_DXT2 = 0xE,
  D3DFMT_DXT3 = 0xE,
  D3DFMT_DXT4 = 0xF,
  D3DFMT_DXT5 = 0xF,
  D3DFMT_LIN_A1R5G5B5 = 0x10,
  D3DFMT_LIN_A4R4G4B4 = 0x1D,
  D3DFMT_LIN_A8 = 0x1F,
  D3DFMT_LIN_A8B8G8R8 = 0x3F,
  D3DFMT_LIN_A8R8G8B8 = 0x12,
  D3DFMT_LIN_B8G8R8A8 = 0x40,
  D3DFMT_LIN_G8B8 = 0x17,
  D3DFMT_LIN_R4G4B4A4 = 0x3E,
  D3DFMT_LIN_R5G5B5A1 = 0x3D,
  D3DFMT_LIN_R5G6B5 = 0x11,
  D3DFMT_LIN_R6G5B5 = 0x37,
  D3DFMT_LIN_R8B8 = 0x16,
  D3DFMT_LIN_R8G8B8A8 = 0x41,
  D3DFMT_LIN_X1R5G5B5 = 0x1C,
  D3DFMT_LIN_X8R8G8B8 = 0x1E,
  D3DFMT_LIN_A8L8 = 0x20,
  D3DFMT_LIN_AL8 = 0x1B,
  D3DFMT_LIN_L16 = 0x35,
  D3DFMT_LIN_L8 = 0x13,
  D3DFMT_LIN_V16U16 = 0x36,
  D3DFMT_LIN_V8U8 = 0x17,
  D3DFMT_LIN_L6V5U5 = 0x37,
  D3DFMT_LIN_X8L8V8U8 = 0x1E,
  D3DFMT_LIN_Q8W8V8U8 = 0x12,
  D3DFMT_LIN_D24S8 = 0x2E,
  D3DFMT_LIN_F24S8 = 0x2F,
  D3DFMT_LIN_D16 = 0x30,
  D3DFMT_LIN_F16 = 0x31,
  D3DFMT_VERTEXDATA = 0x64,
  D3DFMT_INDEX16 = 0x65,
  D3DFMT_FORCE_DWORD = 0x7FFFFFFF,
};

/* 49 */
enum _TABLE_SEARCH_RESULT : __int32
{
  TableEmptyTree = 0x0,
  TableFoundNode = 0x1,
  TableInsertAsLeft = 0x2,
  TableInsertAsRight = 0x3,
};

/* 50 */
enum _SYSTEM_INFORMATION_CLASS : __int32
{
  SystemBasicInformation = 0x0,
  SystemProcessorInformation = 0x1,
  SystemPerformanceInformation = 0x2,
  SystemTimeOfDayInformation = 0x3,
  SystemPathInformation = 0x4,
  SystemProcessInformation = 0x5,
  SystemCallCountInformation = 0x6,
  SystemDeviceInformation = 0x7,
  SystemProcessorPerformanceInformation = 0x8,
  SystemFlagsInformation = 0x9,
  SystemCallTimeInformation = 0xA,
  SystemModuleInformation = 0xB,
  SystemLocksInformation = 0xC,
  SystemStackTraceInformation = 0xD,
  SystemPagedPoolInformation = 0xE,
  SystemNonPagedPoolInformation = 0xF,
  SystemHandleInformation = 0x10,
  SystemObjectInformation = 0x11,
  SystemPageFileInformation = 0x12,
  SystemVdmInstemulInformation = 0x13,
  SystemVdmBopInformation = 0x14,
  SystemFileCacheInformation = 0x15,
  SystemPoolTagInformation = 0x16,
  SystemInterruptInformation = 0x17,
  SystemDpcBehaviorInformation = 0x18,
  SystemFullMemoryInformation = 0x19,
  SystemLoadGdiDriverInformation = 0x1A,
  SystemUnloadGdiDriverInformation = 0x1B,
  SystemTimeAdjustmentInformation = 0x1C,
  SystemSummaryMemoryInformation = 0x1D,
  SystemUnused1 = 0x1E,
  SystemPerformanceTraceInformation = 0x1F,
  SystemCrashDumpInformation = 0x20,
  SystemExceptionInformation = 0x21,
  SystemCrashDumpStateInformation = 0x22,
  SystemKernelDebuggerInformation = 0x23,
  SystemContextSwitchInformation = 0x24,
  SystemRegistryQuotaInformation = 0x25,
  SystemExtendServiceTableInformation = 0x26,
  SystemPrioritySeperation = 0x27,
  SystemUnused3 = 0x28,
  SystemUnused4 = 0x29,
  SystemUnused5 = 0x2A,
  SystemLegacyDriverInformation = 0x2B,
  SystemCurrentTimeZoneInformation = 0x2C,
  SystemLookasideInformation = 0x2D,
  SystemTimeSlipNotification = 0x2E,
  SystemSessionCreate = 0x2F,
  SystemSessionDetach = 0x30,
  SystemSessionInformation = 0x31,
  SystemRangeStartInformation = 0x32,
  SystemVerifierInformation = 0x33,
  SystemVerifierThunkExtend = 0x34,
  SystemSessionProcessInformation = 0x35,
};

/* 51 */
enum _KEY_VALUE_INFORMATION_CLASS : __int32
{
  KeyValueBasicInformation = 0x0,
  KeyValueFullInformation = 0x1,
  KeyValuePartialInformation = 0x2,
  KeyValueFullInformationAlign64 = 0x3,
  KeyValuePartialInformationAlign64 = 0x4,
};

/* 52 */
enum _REG_ACTION : __int32
{
  KeyAdded = 0x0,
  KeyRemoved = 0x1,
  KeyModified = 0x2,
};

/* 53 */
enum _D3DXMESHOPT : __int32
{
  D3DXMESHOPT_COMPACT = 0x1,
  D3DXMESHOPT_ATTRSORT = 0x2,
  D3DXMESHOPT_VERTEXCACHE = 0x4,
  D3DXMESHOPT_STRIPREORDER = 0x8,
  D3DXMESHOPT_IGNOREVERTS = 0x10,
  D3DXMESHOPT_SHAREVB = 0x20,
};

/* 54 */
enum _D3DSWAPEFFECT : __int32
{
  D3DSWAPEFFECT_DISCARD = 0x1,
  D3DSWAPEFFECT_FLIP = 0x2,
  D3DSWAPEFFECT_COPY = 0x3,
  D3DSWAPEFFECT_COPY_VSYNC = 0x4,
  D3DSWAPEFFECT_FORCE_DWORD = 0x7FFFFFFF,
};

/* 55 */
enum _D3DCALLBACKTYPE : __int32
{
  D3DCALLBACK_READ = 0x0,
  D3DCALLBACK_WRITE = 0x1,
  D3DCALLBACKTYPE_FORCE_DWORD = 0x7FFFFFFF,
};

/* 56 */
enum _FSINFOCLASS : __int32
{
  FileFsVolumeInformation = 0x1,
  FileFsLabelInformation = 0x2,
  FileFsSizeInformation = 0x3,
  FileFsDeviceInformation = 0x4,
  FileFsAttributeInformation = 0x5,
  FileFsControlInformation = 0x6,
  FileFsFullSizeInformation = 0x7,
  FileFsObjectIdInformation = 0x8,
  FileFsMaximumInformation = 0x9,
};

/* 57 */
enum _NT_PRODUCT_TYPE : __int32
{
  NtProductWinNt = 0x1,
  NtProductLanManNt = 0x2,
  NtProductServer = 0x3,
};

/* 58 */
enum _SUITE_TYPE : __int32
{
  SmallBusiness = 0x0,
  Enterprise = 0x1,
  BackOffice = 0x2,
  CommunicationServer = 0x3,
  TerminalServer = 0x4,
  SmallBusinessRestricted = 0x5,
  EmbeddedNT = 0x6,
  DataCenter = 0x7,
  SingleUserTS = 0x8,
  MaxSuiteType = 0x9,
};

/* 59 */
enum _D3DRESOURCETYPE : __int32
{
  D3DRTYPE_NONE = 0x0,
  D3DRTYPE_SURFACE = 0x1,
  D3DRTYPE_VOLUME = 0x2,
  D3DRTYPE_TEXTURE = 0x3,
  D3DRTYPE_VOLUMETEXTURE = 0x4,
  D3DRTYPE_CUBETEXTURE = 0x5,
  D3DRTYPE_VERTEXBUFFER = 0x6,
  D3DRTYPE_INDEXBUFFER = 0x7,
  D3DRTYPE_PUSHBUFFER = 0x8,
  D3DRTYPE_PALETTE = 0x9,
  D3DRTYPE_FIXUP = 0xA,
  D3DRTYPE_FORCE_DWORD = 0x7FFFFFFF,
};

/* 60 */
enum _KPROFILE_SOURCE : __int32
{
  ProfileTime = 0x0,
  ProfileAlignmentFixup = 0x1,
  ProfileTotalIssues = 0x2,
  ProfilePipelineDry = 0x3,
  ProfileLoadInstructions = 0x4,
  ProfilePipelineFrozen = 0x5,
  ProfileBranchInstructions = 0x6,
  ProfileTotalNonissues = 0x7,
  ProfileDcacheMisses = 0x8,
  ProfileIcacheMisses = 0x9,
  ProfileCacheMisses = 0xA,
  ProfileBranchMispredictions = 0xB,
  ProfileStoreInstructions = 0xC,
  ProfileFpInstructions = 0xD,
  ProfileIntegerInstructions = 0xE,
  Profile2Issue = 0xF,
  Profile3Issue = 0x10,
  Profile4Issue = 0x11,
  ProfileSpecialInstructions = 0x12,
  ProfileTotalCycles = 0x13,
  ProfileIcacheIssues = 0x14,
  ProfileDcacheAccesses = 0x15,
  ProfileMemoryBarrierCycles = 0x16,
  ProfileLoadLinkedIssues = 0x17,
  ProfileMaximum = 0x18,
};

/* 61 */
enum _D3DMEMORY : __int32
{
  D3DMEM_AGP = 0x0,
  D3DMEM_VIDEO = 0x1,
};

/* 62 */
enum _D3DCUBEMAP_FACES : __int32
{
  D3DCUBEMAP_FACE_POSITIVE_X = 0x0,
  D3DCUBEMAP_FACE_NEGATIVE_X = 0x1,
  D3DCUBEMAP_FACE_POSITIVE_Y = 0x2,
  D3DCUBEMAP_FACE_NEGATIVE_Y = 0x3,
  D3DCUBEMAP_FACE_POSITIVE_Z = 0x4,
  D3DCUBEMAP_FACE_NEGATIVE_Z = 0x5,
  D3DCUBEMAP_FACE_FORCE_DWORD = 0x7FFFFFFF,
};

/* 63 */
enum _CM_SERVICE_NODE_TYPE : __int32
{
  DriverType = 0x1,
  FileSystemType = 0x2,
  Win32ServiceOwnProcess = 0x10,
  Win32ServiceShareProcess = 0x20,
  AdapterType = 0x4,
  RecognizerType = 0x8,
};

/* 64 */
enum _CM_SERVICE_LOAD_TYPE : __int32
{
  BootLoad = 0x0,
  SystemLoad = 0x1,
  AutoLoad = 0x2,
  DemandLoad = 0x3,
  DisableLoad = 0x4,
};

/* 65 */
enum _CM_ERROR_CONTROL_TYPE : __int32
{
  IgnoreError = 0x0,
  NormalError = 0x1,
  SevereError = 0x2,
  CriticalError = 0x3,
};

/* 66 */
enum _CM_SHARE_DISPOSITION : __int32
{
  CmResourceShareUndetermined = 0x0,
  CmResourceShareDeviceExclusive = 0x1,
  CmResourceShareDriverExclusive = 0x2,
  CmResourceShareShared = 0x3,
};

/* 67 */
enum IMPORT_OBJECT_TYPE : __int32
{
  IMPORT_OBJECT_CODE = 0x0,
  IMPORT_OBJECT_DATA = 0x1,
  IMPORT_OBJECT_CONST = 0x2,
};

/* 68 */
enum IMPORT_OBJECT_NAME_TYPE : __int32
{
  IMPORT_OBJECT_ORDINAL = 0x0,
  IMPORT_OBJECT_NAME = 0x1,
  IMPORT_OBJECT_NAME_NO_PREFIX = 0x2,
  IMPORT_OBJECT_NAME_UNDECORATE = 0x3,
};

/* 69 */
enum D3DK::_D3DPERF_PerformanceCounters : __int32
{
  PERF_VERTICES = 0x0,
  PERF_SETTRANSFORM_WORLD = 0x1,
  PERF_SETTRANSFORM_VIEW = 0x2,
  PERF_SETTRANSFORM_PROJECTION = 0x3,
  PERF_SETTRANSFORM_TEXTURE = 0x4,
  PERF_PUSHBUFFER_SEGMENTS = 0x5,
  PERF_PUSHBUFFER_WAITS = 0x6,
  PERF_OBJECTLOCK_WAITS = 0x7,
  PERF_PRESENT_WAITS = 0x8,
  PERF_D3DDEVICE_BLOCKUNTILIDLE_WAITS = 0x9,
  PERF_D3DDEVICE_BLOCKUNTILVERTICALBLANK_WAITS = 0xA,
  PERF_D3DDEVICE_BLOCKONFENCE_WAITS = 0xB,
  PERF_CPUSPINDURINGWAIT_TIME = 0xC,
  PERF_UNSWIZZLING_TEXTURE_LOCKS = 0xD,
  PERF_PUSHBUFFER_JUMPTOBEGINNING = 0xE,
  PERF_RUNPUSHBUFFER_BYTES = 0xF,
  PERF_REDUNDANT_SETRENDERSTATE = 0x10,
  PERF_REDUNDANT_SETTEXTURESTATE = 0x11,
  PERF_REDUNDANT_SETVERTEXSHADER = 0x12,
  PERF_REDUNDANT_SETTRANSFORM = 0x13,
  PERF_REDUNDANT_SETTEXTURE = 0x14,
  PERF_REDUNDANT_SETPALETTE = 0x15,
  PERF_REDUNDANT_SETSTREAMSOURCE = 0x16,
  PERF_SETSTATE_POINTPARAMS = 0x17,
  PERF_SETSTATE_COMBINERS = 0x18,
  PERF_SETSTATE_TEXTURESTATE = 0x19,
  PERF_SETSTATE_SPECFOGCOMBINER = 0x1A,
  PERF_SETSTATE_TEXTRANSFORM = 0x1B,
  PERF_SETSTATE_LIGHTS = 0x1C,
  PERF_SETSTATE_TRANSFORM = 0x1D,
  D3DPERF_MAX = 0x1E,
  D3DPERF_FORCE_LONG = 0xFFFFFFFF,
};

/* 70 */
enum D3DK::_D3DPERF_APICounters : __int32
{
  API_DIRECT3D_CHECKDEPTHSTENCILMATCH = 0x0,
  API_DIRECT3D_CHECKDEVICEFORMAT = 0x1,
  API_DIRECT3D_CHECKDEVICEMULTISAMPLETYPE = 0x2,
  API_DIRECT3D_CHECKDEVICETYPE = 0x3,
  API_DIRECT3D_CREATEDEVICE = 0x4,
  API_DIRECT3D_ENUMADAPTERMODES = 0x5,
  API_DIRECT3D_GETADAPTERDISPLAYMODE = 0x6,
  API_DIRECT3D_GETADAPTERIDENTIFIER = 0x7,
  API_DIRECT3D_GETADAPTERMODECOUNT = 0x8,
  API_DIRECT3D_GETDEVICECAPS = 0x9,
  API_DIRECT3D_SETPUSHBUFFERSIZE = 0xA,
  API_D3DDEVICE_APPLYSTATEBLOCK = 0xB,
  API_D3DDEVICE_BEGIN = 0xC,
  API_D3DDEVICE_BEGINPUSHBUFFER = 0xD,
  API_D3DDEVICE_BEGINSTATEBLOCK = 0xE,
  API_D3DDEVICE_BEGINVISIBILITYTEST = 0xF,
  API_D3DDEVICE_BLOCKONFENCE = 0x10,
  API_D3DDEVICE_BLOCKUNTILIDLE = 0x11,
  API_D3DDEVICE_BLOCKUNTILVERTICALBLANK = 0x12,
  API_D3DDEVICE_CAPTURESTATEBLOCK = 0x13,
  API_D3DDEVICE_CLEAR = 0x14,
  API_D3DDEVICE_COPYRECTS = 0x15,
  API_D3DDEVICE_CREATECUBETEXTURE = 0x16,
  API_D3DDEVICE_CREATEDEPTHSTENCILSURFACE = 0x17,
  API_D3DDEVICE_CREATEFIXUP = 0x18,
  API_D3DDEVICE_CREATEIMAGESURFACE = 0x19,
  API_D3DDEVICE_CREATEINDEXBUFFER = 0x1A,
  API_D3DDEVICE_CREATEPALETTE = 0x1B,
  API_D3DDEVICE_CREATEPIXELSHADER = 0x1C,
  API_D3DDEVICE_CREATEPUSHBUFFER = 0x1D,
  API_D3DDEVICE_CREATERENDERTARGET = 0x1E,
  API_D3DDEVICE_CREATESTATEBLOCK = 0x1F,
  API_D3DDEVICE_CREATETEXTURE = 0x20,
  API_D3DDEVICE_CREATEVERTEXBUFFER = 0x21,
  API_D3DDEVICE_CREATEVERTEXSHADER = 0x22,
  API_D3DDEVICE_CREATEVOLUMETEXTURE = 0x23,
  API_D3DDEVICE_DELETEPATCH = 0x24,
  API_D3DDEVICE_DELETEPIXELSHADER = 0x25,
  API_D3DDEVICE_DELETESTATEBLOCK = 0x26,
  API_D3DDEVICE_DELETEVERTEXSHADER = 0x27,
  API_D3DDEVICE_DRAWINDEXEDVERTICES = 0x28,
  API_D3DDEVICE_DRAWINDEXEDVERTICESUP = 0x29,
  API_D3DDEVICE_DRAWRECTPATCH = 0x2A,
  API_D3DDEVICE_DRAWTRIPATCH = 0x2B,
  API_D3DDEVICE_DRAWVERTICES = 0x2C,
  API_D3DDEVICE_DRAWVERTICESUP = 0x2D,
  API_D3DDEVICE_ENABLECC = 0x2E,
  API_D3DDEVICE_ENABLEOVERLAY = 0x2F,
  API_D3DDEVICE_END = 0x30,
  API_D3DDEVICE_ENDPUSHBUFFER = 0x31,
  API_D3DDEVICE_ENDSTATEBLOCK = 0x32,
  API_D3DDEVICE_ENDVISIBILITYTEST = 0x33,
  API_D3DDEVICE_FLUSHVERTEXCACHE = 0x34,
  API_D3DDEVICE_GETBACKBUFFER = 0x35,
  API_D3DDEVICE_GETBACKMATERIAL = 0x36,
  API_D3DDEVICE_GETCCSTATUS = 0x37,
  API_D3DDEVICE_GETCREATIONPARAMETERS = 0x38,
  API_D3DDEVICE_GETDEPTHSTENCILSURFACE = 0x39,
  API_D3DDEVICE_GETDEVICECAPS = 0x3A,
  API_D3DDEVICE_GETDIRECT3D = 0x3B,
  API_D3DDEVICE_GETDISPLAYFIELDSTATUS = 0x3C,
  API_D3DDEVICE_GETDISPLAYMODE = 0x3D,
  API_D3DDEVICE_GETGAMMARAMP = 0x3E,
  API_D3DDEVICE_GETINDICES = 0x3F,
  API_D3DDEVICE_GETLIGHT = 0x40,
  API_D3DDEVICE_GETLIGHTENABLE = 0x41,
  API_D3DDEVICE_GETMATERIAL = 0x42,
  API_D3DDEVICE_GETMODELVIEW = 0x43,
  API_D3DDEVICE_GETOVERLAYUPDATESTATUS = 0x44,
  API_D3DDEVICE_GETPALETTE = 0x45,
  API_D3DDEVICE_GETPIXELSHADER = 0x46,
  API_D3DDEVICE_GETPIXELSHADERCONSTANT = 0x47,
  API_D3DDEVICE_GETPIXELSHADERFUNCTION = 0x48,
  API_D3DDEVICE_GETPROJECTIONVIEWPORTMATRIX = 0x49,
  API_D3DDEVICE_GETPUSHBUFFEROFFSET = 0x4A,
  API_D3DDEVICE_GETRASTERSTATUS = 0x4B,
  API_D3DDEVICE_GETRENDERSTATE = 0x4C,
  API_D3DDEVICE_GETRENDERTARGET = 0x4D,
  API_D3DDEVICE_GETSCISSORS = 0x4E,
  API_D3DDEVICE_GETSHADERCONSTANTMODE = 0x4F,
  API_D3DDEVICE_GETSTREAMSOURCE = 0x50,
  API_D3DDEVICE_GETTEXTURE = 0x51,
  API_D3DDEVICE_GETTEXTURESTAGESTATE = 0x52,
  API_D3DDEVICE_GETTILE = 0x53,
  API_D3DDEVICE_GETTILECOMPRESSIONTAGS = 0x54,
  API_D3DDEVICE_GETTRANSFORM = 0x55,
  API_D3DDEVICE_GETVERTEXBLENDMODELVIEW = 0x56,
  API_D3DDEVICE_GETVERTEXSHADER = 0x57,
  API_D3DDEVICE_GETVERTEXSHADERCONSTANT = 0x58,
  API_D3DDEVICE_GETVERTEXSHADERDECLARATION = 0x59,
  API_D3DDEVICE_GETVERTEXSHADERFUNCTION = 0x5A,
  API_D3DDEVICE_GETVERTEXSHADERINPUT = 0x5B,
  API_D3DDEVICE_GETVERTEXSHADERSIZE = 0x5C,
  API_D3DDEVICE_GETVERTEXSHADERTYPE = 0x5D,
  API_D3DDEVICE_GETVIEWPORT = 0x5E,
  API_D3DDEVICE_GETVISIBILITYTESTRESULT = 0x5F,
  API_D3DDEVICE_INSERTCALLBACK = 0x60,
  API_D3DDEVICE_INSERTFENCE = 0x61,
  API_D3DDEVICE_ISBUSY = 0x62,
  API_D3DDEVICE_ISFENCEPENDING = 0x63,
  API_D3DDEVICE_KICKPUSHBUFFER = 0x64,
  API_D3DDEVICE_LIGHTENABLE = 0x65,
  API_D3DDEVICE_LOADVERTEXSHADER = 0x66,
  API_D3DDEVICE_LOADVERTEXSHADERPROGRAM = 0x67,
  API_D3DDEVICE_MULTIPLYTRANSFORM = 0x68,
  API_D3DDEVICE_NOP = 0x69,
  API_D3DDEVICE_PERSISTDISPLAY = 0x6A,
  API_D3DDEVICE_PRESENT = 0x6B,
  API_D3DDEVICE_PRIMEVERTEXCACHE = 0x6C,
  API_D3DDEVICE_READVERTEXSHADERCONSTANT = 0x6D,
  API_D3DDEVICE_RESET = 0x6E,
  API_D3DDEVICE_RESUME = 0x6F,
  API_D3DDEVICE_RUNPUSHBUFFER = 0x70,
  API_D3DDEVICE_RUNVERTEXSTATESHADER = 0x71,
  API_D3DDEVICE_SELECTVERTEXSHADER = 0x72,
  API_D3DDEVICE_SENDCC = 0x73,
  API_D3DDEVICE_SETBACKMATERIAL = 0x74,
  API_D3DDEVICE_SETGAMMARAMP = 0x75,
  API_D3DDEVICE_SETINDICES = 0x76,
  API_D3DDEVICE_SETLIGHT = 0x77,
  API_D3DDEVICE_SETMATERIAL = 0x78,
  API_D3DDEVICE_SETMODELVIEW = 0x79,
  API_D3DDEVICE_SETPALETTE = 0x7A,
  API_D3DDEVICE_SETPIXELSHADER = 0x7B,
  API_D3DDEVICE_SETPIXELSHADERCONSTANT = 0x7C,
  API_D3DDEVICE_SETPIXELSHADERPROGRAM = 0x7D,
  API_D3DDEVICE_SETRENDERSTATE_BACKFILLMODE = 0x7E,
  API_D3DDEVICE_SETRENDERSTATE_CULLMODE = 0x7F,
  API_D3DDEVICE_SETRENDERSTATE_DEFERRED = 0x80,
  API_D3DDEVICE_SETRENDERSTATE_DONOTCULLUNCOMPRESSED = 0x81,
  API_D3DDEVICE_SETRENDERSTATE_DXT1NOISEENABLE = 0x82,
  API_D3DDEVICE_SETRENDERSTATE_EDGEANTIALIAS = 0x83,
  API_D3DDEVICE_SETRENDERSTATE_FILLMODE = 0x84,
  API_D3DDEVICE_SETRENDERSTATE_FOGCOLOR = 0x85,
  API_D3DDEVICE_SETRENDERSTATE_FRONTFACE = 0x86,
  API_D3DDEVICE_SETRENDERSTATE_LINEWIDTH = 0x87,
  API_D3DDEVICE_SETRENDERSTATE_LOGICOP = 0x88,
  API_D3DDEVICE_SETRENDERSTATE_MULTISAMPLEANTIALIAS = 0x89,
  API_D3DDEVICE_SETRENDERSTATE_MULTISAMPLEMASK = 0x8A,
  API_D3DDEVICE_SETRENDERSTATE_MULTISAMPLETYPE = 0x8B,
  API_D3DDEVICE_SETRENDERSTATE_NORMALIZENORMALS = 0x8C,
  API_D3DDEVICE_SETRENDERSTATE_OCCLUSIONCULLENABLE = 0x8D,
  API_D3DDEVICE_SETRENDERSTATE_PARAMETERCHECK = 0x8E,
  API_D3DDEVICE_SETRENDERSTATE_PSTEXTUREMODES = 0x8F,
  API_D3DDEVICE_SETRENDERSTATE_ROPZCMPALWAYSREAD = 0x90,
  API_D3DDEVICE_SETRENDERSTATE_ROPZREAD = 0x91,
  API_D3DDEVICE_SETRENDERSTATE_SHADOWFUNC = 0x92,
  API_D3DDEVICE_SETRENDERSTATE_SIMPLE = 0x93,
  API_D3DDEVICE_SETRENDERSTATE_STENCILCULLENABLE = 0x94,
  API_D3DDEVICE_SETRENDERSTATE_STENCILENABLE = 0x95,
  API_D3DDEVICE_SETRENDERSTATE_STENCILFAIL = 0x96,
  API_D3DDEVICE_SETRENDERSTATE_TEXTUREFACTOR = 0x97,
  API_D3DDEVICE_SETRENDERSTATE_TWOSIDEDLIGHTING = 0x98,
  API_D3DDEVICE_SETRENDERSTATE_VERTEXBLEND = 0x99,
  API_D3DDEVICE_SETRENDERSTATE_YUVENABLE = 0x9A,
  API_D3DDEVICE_SETRENDERSTATE_ZBIAS = 0x9B,
  API_D3DDEVICE_SETRENDERSTATE_ZENABLE = 0x9C,
  API_D3DDEVICE_SETRENDERSTATENOTINLINE = 0x9D,
  API_D3DDEVICE_SETRENDERTARGET = 0x9E,
  API_D3DDEVICE_SETSCISSORS = 0x9F,
  API_D3DDEVICE_SETSHADERCONSTANTMODE = 0xA0,
  API_D3DDEVICE_SETSTREAMSOURCE = 0xA1,
  API_D3DDEVICE_SETTEXTURE = 0xA2,
  API_D3DDEVICE_SETTEXTURESTAGESTATENOTINLINE = 0xA3,
  API_D3DDEVICE_SETTEXTURESTATE_BORDERCOLOR = 0xA4,
  API_D3DDEVICE_SETTEXTURESTATE_BUMPENV = 0xA5,
  API_D3DDEVICE_SETTEXTURESTATE_COLORKEYCOLOR = 0xA6,
  API_D3DDEVICE_SETTEXTURESTATE_DEFERRED = 0xA7,
  API_D3DDEVICE_SETTEXTURESTATE_PARAMETERCHECK = 0xA8,
  API_D3DDEVICE_SETTEXTURESTATE_TEXCOORDINDEX = 0xA9,
  API_D3DDEVICE_SETTILE = 0xAA,
  API_D3DDEVICE_SETTRANSFORM = 0xAB,
  API_D3DDEVICE_SETVERTEXBLENDMODELVIEW = 0xAC,
  API_D3DDEVICE_SETVERTEXDATA2F = 0xAD,
  API_D3DDEVICE_SETVERTEXDATA2S = 0xAE,
  API_D3DDEVICE_SETVERTEXDATA4F = 0xAF,
  API_D3DDEVICE_SETVERTEXDATA4S = 0xB0,
  API_D3DDEVICE_SETVERTEXDATA4UB = 0xB1,
  API_D3DDEVICE_SETVERTEXDATACOLOR = 0xB2,
  API_D3DDEVICE_SETVERTEXSHADER = 0xB3,
  API_D3DDEVICE_SETVERTEXSHADERCONSTANT = 0xB4,
  API_D3DDEVICE_SETVERTEXSHADERINPUT = 0xB5,
  API_D3DDEVICE_SETVERTICALBLANKCALLBACK = 0xB6,
  API_D3DDEVICE_SETVIEWPORT = 0xB7,
  API_D3DDEVICE_SUSPEND = 0xB8,
  API_D3DDEVICE_SWITCHTEXTURE = 0xB9,
  API_D3DDEVICE_UPDATEOVERLAY = 0xBA,
  API_D3DDEVICE_UPDATETEXTURE = 0xBB,
  API_D3DRESOURCE_ADDREF = 0xBC,
  API_D3DRESOURCE_BLOCKUNTILNOTBUSY = 0xBD,
  API_D3DRESOURCE_FREEPRIVATEDATA = 0xBE,
  API_D3DRESOURCE_GETDEVICE = 0xBF,
  API_D3DRESOURCE_GETPRIVATEDATA = 0xC0,
  API_D3DRESOURCE_GETTYPE = 0xC1,
  API_D3DRESOURCE_ISBUSY = 0xC2,
  API_D3DRESOURCE_REGISTER = 0xC3,
  API_D3DRESOURCE_RELEASE = 0xC4,
  API_D3DRESOURCE_SETPRIVATEDATA = 0xC5,
  API_D3DBASETEXTURE_GETLEVELCOUNT = 0xC6,
  API_D3DTEXTURE_GETLEVELDESC = 0xC7,
  API_D3DTEXTURE_GETSURFACELEVEL = 0xC8,
  API_D3DTEXTURE_LOCKRECT = 0xC9,
  API_D3DCUBETEXTURE_GETCUBEMAPSURFACE = 0xCA,
  API_D3DCUBETEXTURE_GETLEVELDESC = 0xCB,
  API_D3DCUBETEXTURE_LOCKRECT = 0xCC,
  API_D3DVOLUMETEXURE_GETLEVELDESC = 0xCD,
  API_D3DVOLUMETEXURE_GETVOLUMELEVEL = 0xCE,
  API_D3DVOLUMETEXURE_LOCKBOX = 0xCF,
  API_D3DVERTEXBUFFER_GETDESC = 0xD0,
  API_D3DVERTEXBUFFER_LOCK = 0xD1,
  API_D3DINDEXBUFFER_GETDESC = 0xD2,
  API_D3DVOLUME_GETCONTAINER = 0xD3,
  API_D3DVOLUME_GETDESC = 0xD4,
  API_D3DVOLUME_LOCKBOX = 0xD5,
  API_D3DSURFACE_GETCONTAINER = 0xD6,
  API_D3DSURFACE_GETDESC = 0xD7,
  API_D3DSURFACE_LOCKRECT = 0xD8,
  API_D3DPALETTE_GETSIZE = 0xD9,
  API_D3DPALETTE_LOCK = 0xDA,
  API_D3DPUSHBUFFER_BEGINFIXUP = 0xDB,
  API_D3DPUSHBUFFER_ENDFIXUP = 0xDC,
  API_D3DPUSHBUFFER_ENDVISIBILITYTEST = 0xDD,
  API_D3DPUSHBUFFER_JUMP = 0xDE,
  API_D3DPUSHBUFFER_RUNPUSHBUFFER = 0xDF,
  API_D3DPUSHBUFFER_SETMODELVIEW = 0xE0,
  API_D3DPUSHBUFFER_SETPALETTE = 0xE1,
  API_D3DPUSHBUFFER_SETRENDERTARGET = 0xE2,
  API_D3DPUSHBUFFER_SETTEXTURE = 0xE3,
  API_D3DPUSHBUFFER_SETVERTEXBLENDMODELVIEW = 0xE4,
  API_D3DPUSHBUFFER_SETVERTEXSHADERCONSTANT = 0xE5,
  API_D3DPUSHBUFFER_SETVERTEXSHADERINPUT = 0xE6,
  API_D3DPUSHBUFFER_VERIFY = 0xE7,
  API_D3DFIXUP_GETSIZE = 0xE8,
  API_D3DFIXUP_GETSPACE = 0xE9,
  API_D3DFIXUP_RESET = 0xEA,
  D3DAPI_MAX = 0xEB,
  D3DAPI_FORCE_LONG = 0xFFFFFFFF,
};

/* 71 */
enum _LPCSVR_FILTER_RESULT : __int32
{
  LpcFilterAsync = 0x0,
  LpcFilterSync = 0x1,
  LpcFilterDrop = 0x2,
};

/* 72 */
enum _D3DFIELDTYPE : __int32
{
  D3DFIELD_ODD = 0x1,
  D3DFIELD_EVEN = 0x2,
  D3DFIELD_PROGRESSIVE = 0x3,
  D3DFIELD_FORCE_DWORD = 0x7FFFFFFF,
};

/* 73 */
enum _FP_IEEE_COMPARE_RESULT : __int32
{
  FpCompareEqual = 0x0,
  FpCompareGreater = 0x1,
  FpCompareLess = 0x2,
  FpCompareUnordered = 0x3,
};

/* 74 */
enum _EXCEPTION_DISPOSITION : __int32
{
  ExceptionContinueExecution = 0x0,
  ExceptionContinueSearch = 0x1,
  ExceptionNestedException = 0x2,
  ExceptionCollidedUnwind = 0x3,
};

/* 75 */
enum _FP__IEEE_FORMAT : __int32
{
  FpFormatFp32 = 0x0,
  FpFormatFp64 = 0x1,
  FpFormatFp80 = 0x2,
  FpFormatFp128 = 0x3,
  FpFormatI16 = 0x4,
  FpFormatI32 = 0x5,
  FpFormatI64 = 0x6,
  FpFormatU16 = 0x7,
  FpFormatU32 = 0x8,
  FpFormatU64 = 0x9,
  FpFormatCompare = 0xA,
  FpFormatString = 0xB,
};

/* 76 */
enum _FP_IEEE_OPERATION_CODE : __int32
{
  FpCodeUnspecified = 0x0,
  FpCodeAdd = 0x1,
  FpCodeSubtract = 0x2,
  FpCodeMultiply = 0x3,
  FpCodeDivide = 0x4,
  FpCodeSquareRoot = 0x5,
  FpCodeRemainder = 0x6,
  FpCodeCompare = 0x7,
  FpCodeConvert = 0x8,
  FpCodeRound = 0x9,
  FpCodeTruncate = 0xA,
  FpCodeFloor = 0xB,
  FpCodeCeil = 0xC,
  FpCodeAcos = 0xD,
  FpCodeAsin = 0xE,
  FpCodeAtan = 0xF,
  FpCodeAtan2 = 0x10,
  FpCodeCabs = 0x11,
  FpCodeCos = 0x12,
  FpCodeCosh = 0x13,
  FpCodeExp = 0x14,
  FpCodeFabs = 0x15,
  FpCodeFmod = 0x16,
  FpCodeFrexp = 0x17,
  FpCodeHypot = 0x18,
  FpCodeLdexp = 0x19,
  FpCodeLog = 0x1A,
  FpCodeLog10 = 0x1B,
  FpCodeModf = 0x1C,
  FpCodePow = 0x1D,
  FpCodeSin = 0x1E,
  FpCodeSinh = 0x1F,
  FpCodeTan = 0x20,
  FpCodeTanh = 0x21,
  FpCodeY0 = 0x22,
  FpCodeY1 = 0x23,
  FpCodeYn = 0x24,
};

/* 77 */
enum _D3DXERR : __int32
{
  D3DXERR_CANNOTMODIFYINDEXBUFFER = 0x88760B54,
  D3DXERR_INVALIDMESH = 0x88760B55,
  D3DXERR_CANNOTATTRSORT = 0x88760B56,
  D3DXERR_SKINNINGNOTSUPPORTED = 0x88760B57,
  D3DXERR_TOOMANYINFLUENCES = 0x88760B58,
  D3DXERR_INVALIDDATA = 0x88760B59,
};

/* 78 */
enum _FIRMWARE_REENTRY : __int32
{
  HalHaltRoutine = 0x0,
  HalRebootRoutine = 0x1,
  HalQuickRebootRoutine = 0x2,
  HalKdRebootRoutine = 0x3,
  HalFatalErrorRebootRoutine = 0x4,
  HalMaximumRoutine = 0x5,
};

/* 79 */
enum _GET_FILEEX_INFO_LEVELS : __int32
{
  GetFileExInfoStandard = 0x0,
  GetFileExMaxInfoLevel = 0x1,
};

/* 80 */
enum _FP__IEEE_ROUNDING_MODE : __int32
{
  FpRoundNearest = 0x0,
  FpRoundMinusInfinity = 0x1,
  FpRoundPlusInfinity = 0x2,
  FpRoundChopped = 0x3,
};

/* 81 */
enum PS_TEXTUREMODES : __int32
{
  PS_TEXTUREMODES_NONE = 0x0,
  PS_TEXTUREMODES_PROJECT2D = 0x1,
  PS_TEXTUREMODES_PROJECT3D = 0x2,
  PS_TEXTUREMODES_CUBEMAP = 0x3,
  PS_TEXTUREMODES_PASSTHRU = 0x4,
  PS_TEXTUREMODES_CLIPPLANE = 0x5,
  PS_TEXTUREMODES_BUMPENVMAP = 0x6,
  PS_TEXTUREMODES_BUMPENVMAP_LUM = 0x7,
  PS_TEXTUREMODES_BRDF = 0x8,
  PS_TEXTUREMODES_DOT_ST = 0x9,
  PS_TEXTUREMODES_DOT_ZW = 0xA,
  PS_TEXTUREMODES_DOT_RFLCT_DIFF = 0xB,
  PS_TEXTUREMODES_DOT_RFLCT_SPEC = 0xC,
  PS_TEXTUREMODES_DOT_STR_3D = 0xD,
  PS_TEXTUREMODES_DOT_STR_CUBE = 0xE,
  PS_TEXTUREMODES_DPNDNT_AR = 0xF,
  PS_TEXTUREMODES_DPNDNT_GB = 0x10,
  PS_TEXTUREMODES_DOTPRODUCT = 0x11,
  PS_TEXTUREMODES_DOT_RFLCT_SPEC_CONST = 0x12,
};

/* 82 */
enum PS_DOTMAPPING : __int32
{
  PS_DOTMAPPING_ZERO_TO_ONE = 0x0,
  PS_DOTMAPPING_MINUS1_TO_1_D3D = 0x1,
  PS_DOTMAPPING_MINUS1_TO_1_GL = 0x2,
  PS_DOTMAPPING_MINUS1_TO_1 = 0x3,
  PS_DOTMAPPING_HILO_1 = 0x4,
  PS_DOTMAPPING_HILO_HEMISPHERE_D3D = 0x5,
  PS_DOTMAPPING_HILO_HEMISPHERE_GL = 0x6,
  PS_DOTMAPPING_HILO_HEMISPHERE = 0x7,
};

/* 83 */
enum _INTERFACE_TYPE : __int32
{
  InterfaceTypeUndefined = 0xFFFFFFFF,
  Internal = 0x0,
  Isa = 0x1,
  Eisa = 0x2,
  MicroChannel = 0x3,
  TurboChannel = 0x4,
  PCIBus = 0x5,
  VMEBus = 0x6,
  NuBus = 0x7,
  PCMCIABus = 0x8,
  CBus = 0x9,
  MPIBus = 0xA,
  MPSABus = 0xB,
  ProcessorInternal = 0xC,
  InternalPowerBus = 0xD,
  PNPISABus = 0xE,
  PNPBus = 0xF,
  MaximumInterfaceType = 0x10,
};

/* 84 */
enum PS_COMPAREMODE : __int32
{
  PS_COMPAREMODE_S_LT = 0x0,
  PS_COMPAREMODE_S_GE = 0x1,
  PS_COMPAREMODE_T_LT = 0x0,
  PS_COMPAREMODE_T_GE = 0x2,
  PS_COMPAREMODE_R_LT = 0x0,
  PS_COMPAREMODE_R_GE = 0x4,
  PS_COMPAREMODE_Q_LT = 0x0,
  PS_COMPAREMODE_Q_GE = 0x8,
};

/* 85 */
enum PS_COMBINERCOUNTFLAGS : __int32
{
  PS_COMBINERCOUNT_MUX_LSB = 0x0,
  PS_COMBINERCOUNT_MUX_MSB = 0x1,
  PS_COMBINERCOUNT_SAME_C0 = 0x0,
  PS_COMBINERCOUNT_UNIQUE_C0 = 0x10,
  PS_COMBINERCOUNT_SAME_C1 = 0x0,
  PS_COMBINERCOUNT_UNIQUE_C1 = 0x100,
};

/* 86 */
enum _D3DXPARAMETERTYPE : __int32
{
  D3DXPT_DWORD = 0x0,
  D3DXPT_FLOAT = 0x1,
  D3DXPT_VECTOR = 0x2,
  D3DXPT_MATRIX = 0x3,
  D3DXPT_TEXTURE = 0x4,
  D3DXPT_VERTEXSHADER = 0x5,
  D3DXPT_PIXELSHADER = 0x6,
  D3DXPT_CONSTANT = 0x7,
  D3DXPT_FORCE_DWORD = 0x7FFFFFFF,
};

/* 87 */
enum _DMA_WIDTH : __int32
{
  Width8Bits = 0x0,
  Width16Bits = 0x1,
  Width32Bits = 0x2,
  MaximumDmaWidth = 0x3,
};

/* 88 */
enum PS_INPUTMAPPING : __int32
{
  PS_INPUTMAPPING_UNSIGNED_IDENTITY = 0x0,
  PS_INPUTMAPPING_UNSIGNED_INVERT = 0x20,
  PS_INPUTMAPPING_EXPAND_NORMAL = 0x40,
  PS_INPUTMAPPING_EXPAND_NEGATE = 0x60,
  PS_INPUTMAPPING_HALFBIAS_NORMAL = 0x80,
  PS_INPUTMAPPING_HALFBIAS_NEGATE = 0xA0,
  PS_INPUTMAPPING_SIGNED_IDENTITY = 0xC0,
  PS_INPUTMAPPING_SIGNED_NEGATE = 0xE0,
};

/* 89 */
enum _DMA_SPEED : __int32
{
  Compatible = 0x0,
  TypeA = 0x1,
  TypeB = 0x2,
  TypeC = 0x3,
  TypeF = 0x4,
  MaximumDmaSpeed = 0x5,
};

/* 90 */
enum PS_REGISTER : __int32
{
  PS_REGISTER_ZERO = 0x0,
  PS_REGISTER_DISCARD = 0x0,
  PS_REGISTER_C0 = 0x1,
  PS_REGISTER_C1 = 0x2,
  PS_REGISTER_FOG = 0x3,
  PS_REGISTER_V0 = 0x4,
  PS_REGISTER_V1 = 0x5,
  PS_REGISTER_T0 = 0x8,
  PS_REGISTER_T1 = 0x9,
  PS_REGISTER_T2 = 0xA,
  PS_REGISTER_T3 = 0xB,
  PS_REGISTER_R0 = 0xC,
  PS_REGISTER_R1 = 0xD,
  PS_REGISTER_V1R0_SUM = 0xE,
  PS_REGISTER_EF_PROD = 0xF,
  PS_REGISTER_ONE = 0x20,
  PS_REGISTER_NEGATIVE_ONE = 0x40,
  PS_REGISTER_ONE_HALF = 0xA0,
  PS_REGISTER_NEGATIVE_ONE_HALF = 0x80,
};

/* 91 */
enum _D3DLIGHTTYPE : __int32
{
  D3DLIGHT_POINT = 0x1,
  D3DLIGHT_SPOT = 0x2,
  D3DLIGHT_DIRECTIONAL = 0x3,
  D3DLIGHT_FORCE_DWORD = 0x7FFFFFFF,
};

/* 92 */
enum _BUS_DATA_TYPE : __int32
{
  ConfigurationSpaceUndefined = 0xFFFFFFFF,
  Cmos = 0x0,
  EisaConfiguration = 0x1,
  Pos = 0x2,
  CbusConfiguration = 0x3,
  PCIConfiguration = 0x4,
  VMEConfiguration = 0x5,
  NuBusConfiguration = 0x6,
  PCMCIAConfiguration = 0x7,
  MPIConfiguration = 0x8,
  MPSAConfiguration = 0x9,
  PNPISAConfiguration = 0xA,
  SgiInternalConfiguration = 0xB,
  MaximumBusDataType = 0xC,
};

/* 93 */
enum PS_CHANNEL : __int32
{
  PS_CHANNEL_RGB = 0x0,
  PS_CHANNEL_BLUE = 0x0,
  PS_CHANNEL_ALPHA = 0x10,
};

/* 94 */
enum _SID_NAME_USE : __int32
{
  SidTypeUser = 0x1,
  SidTypeGroup = 0x2,
  SidTypeDomain = 0x3,
  SidTypeAlias = 0x4,
  SidTypeWellKnownGroup = 0x5,
  SidTypeDeletedAccount = 0x6,
  SidTypeInvalid = 0x7,
  SidTypeUnknown = 0x8,
  SidTypeComputer = 0x9,
};

/* 95 */
enum PS_FINALCOMBINERSETTING : __int32
{
  PS_FINALCOMBINERSETTING_CLAMP_SUM = 0x80,
  PS_FINALCOMBINERSETTING_COMPLEMENT_V1 = 0x40,
  PS_FINALCOMBINERSETTING_COMPLEMENT_R0 = 0x20,
};

/* 96 */
enum PS_COMBINEROUTPUT : __int32
{
  PS_COMBINEROUTPUT_IDENTITY = 0x0,
  PS_COMBINEROUTPUT_BIAS = 0x8,
  PS_COMBINEROUTPUT_SHIFTLEFT_1 = 0x10,
  PS_COMBINEROUTPUT_SHIFTLEFT_1_BIAS = 0x18,
  PS_COMBINEROUTPUT_SHIFTLEFT_2 = 0x20,
  PS_COMBINEROUTPUT_SHIFTRIGHT_1 = 0x30,
  PS_COMBINEROUTPUT_AB_BLUE_TO_ALPHA = 0x80,
  PS_COMBINEROUTPUT_CD_BLUE_TO_ALPHA = 0x40,
  PS_COMBINEROUTPUT_AB_MULTIPLY = 0x0,
  PS_COMBINEROUTPUT_AB_DOT_PRODUCT = 0x2,
  PS_COMBINEROUTPUT_CD_MULTIPLY = 0x0,
  PS_COMBINEROUTPUT_CD_DOT_PRODUCT = 0x1,
  PS_COMBINEROUTPUT_AB_CD_SUM = 0x0,
  PS_COMBINEROUTPUT_AB_CD_MUX = 0x4,
};

/* 97 */
enum _SYSTEM_POWER_STATE : __int32
{
  PowerSystemUnspecified = 0x0,
  PowerSystemWorking = 0x1,
  PowerSystemSleeping1 = 0x2,
  PowerSystemSleeping2 = 0x3,
  PowerSystemSleeping3 = 0x4,
  PowerSystemHibernate = 0x5,
  PowerSystemShutdown = 0x6,
  PowerSystemMaximum = 0x7,
};

/* 98 */
enum _D3DSHADEMODE : __int32
{
  D3DSHADE_FLAT = 0x1D00,
  D3DSHADE_GOURAUD = 0x1D01,
  D3DSHADE_FORCE_DWORD = 0x7FFFFFFF,
};

/* 99 */
enum _D3DFILLMODE : __int32
{
  D3DFILL_POINT = 0x1B00,
  D3DFILL_WIREFRAME = 0x1B01,
  D3DFILL_SOLID = 0x1B02,
  D3DFILL_FORCE_DWORD = 0x7FFFFFFF,
};

/* 100 */
enum POWER_ACTION : __int32
{
  PowerActionNone = 0x0,
  PowerActionReserved = 0x1,
  PowerActionSleep = 0x2,
  PowerActionHibernate = 0x3,
  PowerActionShutdown = 0x4,
  PowerActionShutdownReset = 0x5,
  PowerActionShutdownOff = 0x6,
  PowerActionWarmEject = 0x7,
};

/* 101 */
enum PS_GLOBALFLAGS : __int32
{
  PS_GLOBALFLAGS_NO_TEXMODE_ADJUST = 0x0,
  PS_GLOBALFLAGS_TEXMODE_ADJUST = 0x1,
};

/* 102 */
enum _D3DBLEND : __int32
{
  D3DBLEND_ZERO = 0x0,
  D3DBLEND_ONE = 0x1,
  D3DBLEND_SRCCOLOR = 0x300,
  D3DBLEND_INVSRCCOLOR = 0x301,
  D3DBLEND_SRCALPHA = 0x302,
  D3DBLEND_INVSRCALPHA = 0x303,
  D3DBLEND_DESTALPHA = 0x304,
  D3DBLEND_INVDESTALPHA = 0x305,
  D3DBLEND_DESTCOLOR = 0x306,
  D3DBLEND_INVDESTCOLOR = 0x307,
  D3DBLEND_SRCALPHASAT = 0x308,
  D3DBLEND_CONSTANTCOLOR = 0x8001,
  D3DBLEND_INVCONSTANTCOLOR = 0x8002,
  D3DBLEND_CONSTANTALPHA = 0x8003,
  D3DBLEND_INVCONSTANTALPHA = 0x8004,
  D3DBLEND_FORCE_DWORD = 0x7FFFFFFF,
};

/* 103 */
enum _DEVICE_POWER_STATE : __int32
{
  PowerDeviceUnspecified = 0x0,
  PowerDeviceD0 = 0x1,
  PowerDeviceD1 = 0x2,
  PowerDeviceD2 = 0x3,
  PowerDeviceD3 = 0x4,
  PowerDeviceMaximum = 0x5,
};

/* 104 */
enum _D3DBLENDOP : __int32
{
  D3DBLENDOP_ADD = 0x8006,
  D3DBLENDOP_SUBTRACT = 0x800A,
  D3DBLENDOP_REVSUBTRACT = 0x800B,
  D3DBLENDOP_MIN = 0x8007,
  D3DBLENDOP_MAX = 0x8008,
  D3DBLENDOP_ADDSIGNED = 0xF006,
  D3DBLENDOP_REVSUBTRACTSIGNED = 0xF005,
  D3DBLENDOP_FORCE_DWORD = 0x7FFFFFFF,
};

/* 105 */
enum _POWER_STATE_TYPE : __int32
{
  SystemPowerState = 0x0,
  DevicePowerState = 0x1,
};

/* 106 */
enum _D3DTEXTUREADDRESS : __int32
{
  D3DTADDRESS_WRAP = 0x1,
  D3DTADDRESS_MIRROR = 0x2,
  D3DTADDRESS_CLAMP = 0x3,
  D3DTADDRESS_BORDER = 0x4,
  D3DTADDRESS_CLAMPTOEDGE = 0x5,
  D3DTADDRESS_MAX = 0x6,
  D3DTADDRESS_FORCE_DWORD = 0x7FFFFFFF,
};

/* 107 */
enum LATENCY_TIME : __int32
{
  LT_DONT_CARE = 0x0,
  LT_LOWEST_LATENCY = 0x1,
};

/* 108 */
enum POWER_INFORMATION_LEVEL : __int32
{
  SystemPowerPolicyAc = 0x0,
  SystemPowerPolicyDc = 0x1,
  VerifySystemPolicyAc = 0x2,
  VerifySystemPolicyDc = 0x3,
  SystemPowerCapabilities = 0x4,
  SystemBatteryState = 0x5,
  SystemPowerStateHandler = 0x6,
  ProcessorStateHandler = 0x7,
  SystemPowerPolicyCurrent = 0x8,
  AdministratorPowerPolicy = 0x9,
  SystemReserveHiberFile = 0xA,
  ProcessorInformation = 0xB,
  SystemPowerInformation = 0xC,
};

/* 109 */
enum _D3DTEXTURECOLORKEYOP : __int32
{
  D3DTCOLORKEYOP_DISABLE = 0x0,
  D3DTCOLORKEYOP_ALPHA = 0x1,
  D3DTCOLORKEYOP_RGBA = 0x2,
  D3DTCOLORKEYOP_KILL = 0x3,
  D3DTCOLORKEYOP_MAX = 0x4,
  D3DTCOLORKEYOP_FORCE_DWORD = 0x7FFFFFFF,
};

/* 110 */
enum _D3DTEXTUREALPHAKILL : __int32
{
  D3DTALPHAKILL_DISABLE = 0x0,
  D3DTALPHAKILL_ENABLE = 0x4,
  D3DTALPHAKILL_FORCE_DWORD = 0x7FFFFFFF,
};

/* 111 */
enum POWER_STATE_HANDLER_TYPE : __int32
{
  PowerStateSleeping1 = 0x0,
  PowerStateSleeping2 = 0x1,
  PowerStateSleeping3 = 0x2,
  PowerStateSleeping4 = 0x3,
  PowerStateSleeping4Firmware = 0x4,
  PowerStateShutdownReset = 0x5,
  PowerStateShutdownOff = 0x6,
  PowerStateMaximum = 0x7,
};

/* 112 */
enum _D3DCULL : __int32
{
  D3DCULL_NONE = 0x0,
  D3DCULL_CW = 0x900,
  D3DCULL_CCW = 0x901,
  D3DCULL_FORCE_DWORD = 0x7FFFFFFF,
};

/* 113 */
enum _D3DFRONT : __int32
{
  D3DFRONT_CW = 0x900,
  D3DFRONT_CCW = 0x901,
  D3DFRONT_FORCE_DWORD = 0x7FFFFFFF,
};

/* 114 */
enum _D3DCMPFUNC : __int32
{
  D3DCMP_NEVER = 0x200,
  D3DCMP_LESS = 0x201,
  D3DCMP_EQUAL = 0x202,
  D3DCMP_LESSEQUAL = 0x203,
  D3DCMP_GREATER = 0x204,
  D3DCMP_NOTEQUAL = 0x205,
  D3DCMP_GREATEREQUAL = 0x206,
  D3DCMP_ALWAYS = 0x207,
  D3DCMP_FORCE_DWORD = 0x7FFFFFFF,
};

/* 115 */
enum _D3DSTENCILOP : __int32
{
  D3DSTENCILOP_KEEP = 0x1E00,
  D3DSTENCILOP_ZERO = 0x0,
  D3DSTENCILOP_REPLACE = 0x1E01,
  D3DSTENCILOP_INCRSAT = 0x1E02,
  D3DSTENCILOP_DECRSAT = 0x1E03,
  D3DSTENCILOP_INVERT = 0x150A,
  D3DSTENCILOP_INCR = 0x8507,
  D3DSTENCILOP_DECR = 0x8508,
  D3DSTENCILOP_FORCE_DWORD = 0x7FFFFFFF,
};

/* 116 */
enum _D3DSTATEBLOCKDIRTYINDEX : __int32
{
  D3DSBD_TEXTURES = 0x0,
  D3DSBD_PIXELSHADER = 0x4,
  D3DSBD_VERTEXSHADER = 0x5,
  D3DSBD_INDICES = 0x6,
  D3DSBD_STREAMS = 0x7,
  D3DSBD_PIXELSHADERCONSTANTS = 0x17,
  D3DSBD_VERTEXSHADERCONSTANTS = 0x27,
  D3DSBD_RENDERSTATES = 0xE7,
  D3DSBD_TEXTURESTATES = 0x177,
  D3DSBD_TRANSFORMS = 0x1F7,
  D3DSBD_VIEWPORT = 0x201,
  D3DSBD_MATERIAL = 0x202,
  D3DSBD_BACKMATERIAL = 0x203,
  D3DSBD_MAX = 0x204,
  D3DSBD_FORCE_DWORD = 0x7FFFFFFF,
};

/* 117 */
enum _D3DFOGMODE : __int32
{
  D3DFOG_NONE = 0x0,
  D3DFOG_EXP = 0x1,
  D3DFOG_EXP2 = 0x2,
  D3DFOG_LINEAR = 0x3,
  D3DFOG_FORCE_DWORD = 0x7FFFFFFF,
};

/* 118 */
enum D3DK::_D3DPERFPROF : __int32
{
  D3DPERF_PROF_GPU = 0x0,
  D3DPERF_PROF_FE = 0x1,
  D3DPERF_PROF_BE = 0x2,
  D3DPERF_PROF_MAX = 0x3,
};

/* 119 */
enum _D3DSWATHWIDTH : __int32
{
  D3DSWATH_8 = 0x0,
  D3DSWATH_16 = 0x1,
  D3DSWATH_32 = 0x2,
  D3DSWATH_64 = 0x3,
  D3DSWATH_128 = 0x4,
  D3DSWATH_OFF = 0xF,
  D3DSWATH_FORCE_DWORD = 0x7FFFFFFF,
};

/* 120 */
enum D3DK::SubChannel : __int32
{
  SUBCH_3D = 0x0,
  SUBCH_SW = 0x1,
  SUBCH_MEMCOPY = 0x2,
  SUBCH_RECTCOPY = 0x3,
  SUBCH_RECTCOPYSURFACES = 0x4,
  SUBCH_UNUSED0 = 0x5,
  SUBCH_UNUSED1 = 0x6,
  SUBCH_UNUSED2 = 0x7,
};

/* 121 */
enum _D3DPALETTESIZE : __int32
{
  D3DPALETTE_256 = 0x0,
  D3DPALETTE_128 = 0x1,
  D3DPALETTE_64 = 0x2,
  D3DPALETTE_32 = 0x3,
  D3DPALETTE_MAX = 0x4,
  D3DPALETTE_FORCE_DWORD = 0x7FFFFFFF,
};

/* 122 */
enum D3DK::NV_PATCH_PRIMITIVE_TYPE : __int32
{
  NV_PATCH_PRIMITIVE_TSTRIP = 0x1,
  NV_PATCH_PRIMITIVE_TFAN = 0x2,
};

/* 123 */
enum _D3DLOGICOP : __int32
{
  D3DLOGICOP_NONE = 0x0,
  D3DLOGICOP_CLEAR = 0x1500,
  D3DLOGICOP_AND = 0x1501,
  D3DLOGICOP_AND_REVERSE = 0x1502,
  D3DLOGICOP_COPY = 0x1503,
  D3DLOGICOP_AND_INVERTED = 0x1504,
  D3DLOGICOP_NOOP = 0x1505,
  D3DLOGICOP_XOR = 0x1506,
  D3DLOGICOP_OR = 0x1507,
  D3DLOGICOP_NOR = 0x1508,
  D3DLOGICOP_EQUIV = 0x1509,
  D3DLOGICOP_INVERT = 0x150A,
  D3DLOGICOP_OR_REVERSE = 0x150B,
  D3DLOGICOP_COPY_INVERTED = 0x150C,
  D3DLOGICOP_OR_INVERTED = 0x150D,
  D3DLOGICOP_NAND = 0x150E,
  D3DLOGICOP_SET = 0x150F,
  D3DLOGICOP_FORCE_DWORD = 0x7FFFFFFF,
};

/* 124 */
enum D3DK::NV_PATCH_BASIS_TYPE : __int32
{
  NV_PATCH_BASIS_BEZIER = 0x0,
  NV_PATCH_BASIS_BSPLINE = 0x1,
  NV_PATCH_BASIS_CATMULL_ROM = 0x2,
};

/* 125 */
enum D3DK::NV_PATCH_VERTEX_FORMAT_TYPE : __int32
{
  NV_PATCH_VERTEX_FORMAT_FLOAT_1 = 0x0,
  NV_PATCH_VERTEX_FORMAT_FLOAT_2 = 0x1,
  NV_PATCH_VERTEX_FORMAT_FLOAT_3 = 0x2,
  NV_PATCH_VERTEX_FORMAT_FLOAT_4 = 0x3,
  NV_PATCH_VERTEX_FORMAT_D3DCOLOR = 0x4,
  NV_PATCH_VERTEX_FORMAT_UBYTE = 0x5,
  NV_PATCH_VERTEX_FORMAT_SHORT_2 = 0x5,
  NV_PATCH_VERTEX_FORMAT_SHORT_4 = 0x7,
};

/* 126 */
enum _D3DZBUFFERTYPE : __int32
{
  D3DZB_FALSE = 0x0,
  D3DZB_TRUE = 0x1,
  D3DZB_USEW = 0x2,
  D3DZB_FORCE_DWORD = 0x7FFFFFFF,
};

/* 127 */
enum D3DK::NV_PATCH_BACKEND_TYPE : __int32
{
  NV_PATCH_BACKEND_IMMEDIATE = 0x1,
  NV_PATCH_BACKEND_CELSIUS = 0x2,
  NV_PATCH_BACKEND_KELVIN = 0x3,
  NV_PATCH_BACKEND_DP2 = 0x4,
};

/* 128 */
enum _D3DPRIMITIVETYPE : __int32
{
  D3DPT_POINTLIST = 0x1,
  D3DPT_LINELIST = 0x2,
  D3DPT_LINELOOP = 0x3,
  D3DPT_LINESTRIP = 0x4,
  D3DPT_TRIANGLELIST = 0x5,
  D3DPT_TRIANGLESTRIP = 0x6,
  D3DPT_TRIANGLEFAN = 0x7,
  D3DPT_QUADLIST = 0x8,
  D3DPT_QUADSTRIP = 0x9,
  D3DPT_POLYGON = 0xA,
  D3DPT_MAX = 0xB,
  D3DPT_FORCE_DWORD = 0x7FFFFFFF,
};

/* 129 */
enum _D3DTRANSFORMSTATETYPE : __int32
{
  D3DTS_VIEW = 0x0,
  D3DTS_PROJECTION = 0x1,
  D3DTS_TEXTURE0 = 0x2,
  D3DTS_TEXTURE1 = 0x3,
  D3DTS_TEXTURE2 = 0x4,
  D3DTS_TEXTURE3 = 0x5,
  D3DTS_WORLD = 0x6,
  D3DTS_WORLD1 = 0x7,
  D3DTS_WORLD2 = 0x8,
  D3DTS_WORLD3 = 0x9,
  D3DTS_MAX = 0xA,
  D3DTS_FORCE_DWORD = 0x7FFFFFFF,
};

/* 130 */
enum _ACL_INFORMATION_CLASS : __int32
{
  AclRevisionInformation = 0x1,
  AclSizeInformation = 0x2,
};

/* 131 */
enum D3DK::_D3DPERFSTATETYPE : __int32
{
  D3DPERFSTATE_VTX_CACHE = 0x0,
  D3DPERFSTATE_VTX_FILE = 0x1,
  D3DPERFSTATE_VTX_ALL = 0x2,
};

/* 132 */
enum _EVENT_TYPE : __int32
{
  NotificationEvent = 0x0,
  SynchronizationEvent = 0x1,
};

/* 133 */
enum _TIMER_TYPE : __int32
{
  NotificationTimer = 0x0,
  SynchronizationTimer = 0x1,
};

/* 134 */
enum _WAIT_TYPE : __int32
{
  WaitAll = 0x0,
  WaitAny = 0x1,
};

/* 135 */
enum _MODE : __int32
{
  KernelMode = 0x0,
  UserMode = 0x1,
  MaximumMode = 0x2,
};

/* 136 */
enum _PORT_INFORMATION_CLASS : __int32
{
  PortBasicInformation = 0x0,
  PortDumpInformation = 0x1,
};

/* 137 */
enum _RTL_PATH_TYPE : __int32
{
  RtlPathTypeUnknown = 0x0,
  RtlPathTypeUncAbsolute = 0x1,
  RtlPathTypeDriveAbsolute = 0x2,
  RtlPathTypeDriveRelative = 0x3,
  RtlPathTypeRooted = 0x4,
  RtlPathTypeRelative = 0x5,
  RtlPathTypeLocalDevice = 0x6,
  RtlPathTypeRootLocalDevice = 0x7,
};

/* 138 */
enum _AUDIT_EVENT_TYPE : __int32
{
  AuditEventObjectAccess = 0x0,
  AuditEventDirectoryServiceAccess = 0x1,
};

/* 139 */
enum _SECURITY_IMPERSONATION_LEVEL : __int32
{
  SecurityAnonymous = 0x0,
  SecurityIdentification = 0x1,
  SecurityImpersonation = 0x2,
  SecurityDelegation = 0x3,
};

/* 140 */
enum _TOKEN_TYPE : __int32
{
  TokenPrimary = 0x1,
  TokenImpersonation = 0x2,
};

/* 141 */
enum _TRACK_MODE_TYPE : __int32
{
  YellowMode2 = 0x0,
  XAForm2 = 0x1,
  CDDA = 0x2,
};

/* 142 */
enum _MEDIA_TYPE : __int32
{
  Unknown = 0x0,
  F5_1Pt2_512 = 0x1,
  F3_1Pt44_512 = 0x2,
  F3_2Pt88_512 = 0x3,
  F3_20Pt8_512 = 0x4,
  F3_720_512 = 0x5,
  F5_360_512 = 0x6,
  F5_320_512 = 0x7,
  F5_320_1024 = 0x8,
  F5_180_512 = 0x9,
  F5_160_512 = 0xA,
  RemovableMedia = 0xB,
  FixedMedia = 0xC,
  F3_120M_512 = 0xD,
  F3_640_512 = 0xE,
  F5_640_512 = 0xF,
  F5_720_512 = 0x10,
  F3_1Pt2_512 = 0x11,
  F3_1Pt23_1024 = 0x12,
  F5_1Pt23_1024 = 0x13,
  F3_128Mb_512 = 0x14,
  F3_230Mb_512 = 0x15,
  F8_256_128 = 0x16,
};

/* 143 */
enum DISK_CACHE_RETENTION_PRIORITY : __int32
{
  EqualPriority = 0x0,
  KeepPrefetchedData = 0x1,
  KeepReadData = 0x2,
};

/* 144 */
enum _BIN_TYPES : __int32
{
  RequestSize = 0x0,
  RequestLocation = 0x1,
};

/* 145 */
enum _VSD_IDENT : __int32
{
  VsdIdentBad = 0x0,
  VsdIdentBEA01 = 0x1,
  VsdIdentTEA01 = 0x2,
  VsdIdentCDROM = 0x3,
  VsdIdentCD001 = 0x4,
  VsdIdentCDW01 = 0x5,
  VsdIdentCDW02 = 0x6,
  VsdIdentNSR01 = 0x7,
  VsdIdentNSR02 = 0x8,
  VsdIdentBOOT2 = 0x9,
};

/* 146 */
enum NSR_PART_CONTID : __int32
{
  NsrPartContIdBad = 0x0,
  NsrPartContIdFDC01 = 0x1,
  NsrPartContIdCD001 = 0x2,
  NsrPartContIdCDW01 = 0x3,
  NsrPartContIdCDW02 = 0x4,
  NsrPartContIdNSR01 = 0x5,
  NsrPartContIdNSR02 = 0x6,
};

/* 147 */
enum DVD_KEY_TYPE : __int32
{
  DvdChallengeKey = 0x1,
  DvdBusKey1 = 0x2,
  DvdBusKey2 = 0x3,
  DvdTitleKey = 0x4,
  DvdAsf = 0x5,
  DvdSetRpcKey = 0x6,
  DvdGetRpcKey = 0x8,
  DvdDiskKey = 0x80,
  DvdInvalidateAGID = 0x3F,
};

/* 148 */
enum DVD_STRUCTURE_FORMAT : __int32
{
  DvdPhysicalDescriptor = 0x0,
  DvdCopyrightDescriptor = 0x1,
  DvdDiskKeyDescriptor = 0x2,
  DvdBCADescriptor = 0x3,
  DvdManufacturerDescriptor = 0x4,
  DvdMaxDescriptor = 0x5,
};

/* 149 */
enum _MMPFN_BUSY_TYPE : __int32
{
  MmUnknownUsage = 0x0,
  MmStackUsage = 0x1,
  MmVirtualPageTableUsage = 0x2,
  MmSystemPageTableUsage = 0x3,
  MmPoolUsage = 0x4,
  MmVirtualMemoryUsage = 0x5,
  MmSystemMemoryUsage = 0x6,
  MmImageUsage = 0x7,
  MmFsCacheUsage = 0x8,
  MmContiguousUsage = 0x9,
  MmDebuggerUsage = 0xA,
  MmMaximumUsage = 0xB,
};

/* 150 */
enum _DBGKM_APINUMBER : __int32
{
  DbgKmExceptionApi = 0x0,
  DbgKmCreateThreadApi = 0x1,
  DbgKmCreateProcessApi = 0x2,
  DbgKmExitThreadApi = 0x3,
  DbgKmExitProcessApi = 0x4,
  DbgKmLoadDllApi = 0x5,
  DbgKmUnloadDllApi = 0x6,
  DbgKmMaxApiNumber = 0x7,
};

/* 151 */
enum _DBGSRV_APINUMBER : __int32
{
  DbgSrvContinueApi = 0x0,
  DbgSrvMaxApiNumber = 0x1,
};

/* 152 */
enum _DBG_STATE : __int32
{
  DbgIdle = 0x0,
  DbgReplyPending = 0x1,
  DbgCreateThreadStateChange = 0x2,
  DbgCreateProcessStateChange = 0x3,
  DbgExitThreadStateChange = 0x4,
  DbgExitProcessStateChange = 0x5,
  DbgExceptionStateChange = 0x6,
  DbgBreakpointStateChange = 0x7,
  DbgSingleStepStateChange = 0x8,
  DbgLoadDllStateChange = 0x9,
  DbgUnloadDllStateChange = 0xA,
};

/* 153 */
enum _DBGSS_APINUMBER : __int32
{
  DbgSsExceptionApi = 0x0,
  DbgSsCreateThreadApi = 0x1,
  DbgSsCreateProcessApi = 0x2,
  DbgSsExitThreadApi = 0x3,
  DbgSsExitProcessApi = 0x4,
  DbgSsLoadDllApi = 0x5,
  DbgSsUnloadDllApi = 0x6,
  DbgSsMaxApiNumber = 0x7,
};

/* 154 */
enum _DBGUI_APINUMBER : __int32
{
  DbgUiWaitStateChangeApi = 0x0,
  DbgUiContinueApi = 0x1,
  DbgUiMaxApiNumber = 0x2,
};

/* 155 */
enum _COMPLETION_PACKET_TYPE : __int32
{
  IopCompletionPacketIrp = 0x0,
  IopCompletionPacketMini = 0x1,
};

/* 156 */
enum _XC_VALUE_INDEX : __int32
{
  XC_TIMEZONE_BIAS = 0x0,
  XC_TZ_STD_NAME = 0x1,
  XC_TZ_STD_DATE = 0x2,
  XC_TZ_STD_BIAS = 0x3,
  XC_TZ_DLT_NAME = 0x4,
  XC_TZ_DLT_DATE = 0x5,
  XC_TZ_DLT_BIAS = 0x6,
  XC_LANGUAGE = 0x7,
  XC_VIDEO_FLAGS = 0x8,
  XC_AUDIO_FLAGS = 0x9,
  XC_PARENTAL_CONTROL_GAMES = 0xA,
  XC_PARENTAL_CONTROL_PASSWORD = 0xB,
  XC_PARENTAL_CONTROL_MOVIES = 0xC,
  XC_ONLINE_IP_ADDRESS = 0xD,
  XC_ONLINE_DNS_ADDRESS = 0xE,
  XC_ONLINE_DEFAULT_GATEWAY_ADDRESS = 0xF,
  XC_ONLINE_SUBNET_ADDRESS = 0x10,
  XC_MISC_FLAGS = 0x11,
  XC_DVD_REGION = 0x12,
  XC_MAX_OS = 0xFF,
  XC_FACTORY_START_INDEX = 0x100,
  XC_FACTORY_SERIAL_NUMBER = 0x100,
  XC_FACTORY_ETHERNET_ADDR = 0x101,
  XC_FACTORY_ONLINE_KEY = 0x102,
  XC_FACTORY_AV_REGION = 0x103,
  XC_FACTORY_GAME_REGION = 0x104,
  XC_MAX_FACTORY = 0x1FF,
  XC_ENCRYPTED_SECTION = 0xFFFE,
  XC_MAX_ALL = 0xFFFF,
};

/* 157 */
enum tagTYSPEC : __int32
{
  TYSPEC_CLSID = 0x0,
  TYSPEC_FILEEXT = 0x1,
  TYSPEC_MIMETYPE = 0x2,
  TYSPEC_FILENAME = 0x3,
  TYSPEC_PROGID = 0x4,
  TYSPEC_PACKAGENAME = 0x5,
  TYSPEC_OBJECTID = 0x6,
};

/* 158 */
enum _D3DCOPYRECTCOLORFORMAT : __int32
{
  D3DCOPYRECT_COLOR_FORMAT_DEFAULT = 0x0,
  D3DCOPYRECT_COLOR_FORMAT_Y8 = 0x1,
  D3DCOPYRECT_COLOR_FORMAT_X1R5G5B5_Z1R5G5B5 = 0x2,
  D3DCOPYRECT_COLOR_FORMAT_X1R5G5B5_O1R5G5B5 = 0x3,
  D3DCOPYRECT_COLOR_FORMAT_R5G6B5 = 0x4,
  D3DCOPYRECT_COLOR_FORMAT_Y16 = 0x5,
  D3DCOPYRECT_COLOR_FORMAT_X8R8G8B8_Z8R8G8B8 = 0x6,
  D3DCOPYRECT_COLOR_FORMAT_X8R8G8B8_O8R8G8B8 = 0x7,
  D3DCOPYRECT_COLOR_FORMAT_X1A7R8G8B8_Z1A7R8G8B8 = 0x8,
  D3DCOPYRECT_COLOR_FORMAT_X1A7R8G8B8_O1A7R8G8B8 = 0x9,
  D3DCOPYRECT_COLOR_FORMAT_A8R8G8B8 = 0xA,
  D3DCOPYRECT_COLOR_FORMAT_Y32 = 0xB,
  D3DCOPYRECT_COLOR_FORMAT_FORCE_DWORD = 0x7FFFFFFF,
};

/* 159 */
enum _D3DCOPYRECTOPERATION : __int32
{
  D3DCOPYRECT_SRCCOPY_AND = 0x0,
  D3DCOPYRECT_ROP_AND = 0x1,
  D3DCOPYRECT_BLEND_AND = 0x2,
  D3DCOPYRECT_SRCCOPY = 0x3,
  D3DCOPYRECT_SRCCOPY_PREMULT = 0x4,
  D3DCOPYRECT_BLEND_PREMULT = 0x5,
  D3DCOPYRECT_FORCE_DWORD = 0x7FFFFFFF,
};

/* 160 */
enum STATE : __int32
{
  ST_NORMAL = 0x0,
  ST_PERCENT = 0x1,
  ST_FLAG = 0x2,
  ST_WIDTH = 0x3,
  ST_DOT = 0x4,
  ST_PRECIS = 0x5,
  ST_SIZE = 0x6,
  ST_TYPE = 0x7,
};

/* 161 */
enum CHARTYPE : __int32
{
  CH_OTHER = 0x0,
  CH_PERCENT = 0x1,
  CH_DOT = 0x2,
  CH_STAR = 0x3,
  CH_ZERO = 0x4,
  CH_DIGIT = 0x5,
  CH_FLAG = 0x6,
  CH_SIZE = 0x7,
  CH_TYPE = 0x8,
};

/* 162 */
enum ReplacesCorHdrNumericDefines : __int32
{
  COMIMAGE_FLAGS_ILONLY = 0x1,
  COMIMAGE_FLAGS_32BITREQUIRED = 0x2,
  COMIMAGE_FLAGS_IL_LIBRARY = 0x4,
  COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x10000,
  COR_VERSION_MAJOR_V2 = 0x2,
  COR_VERSION_MAJOR = 0x2,
  COR_VERSION_MINOR = 0x0,
  COR_DELETED_NAME_LENGTH = 0x8,
  COR_VTABLEGAP_NAME_LENGTH = 0x8,
  NATIVE_TYPE_MAX_CB = 0x1,
  COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE = 0xFF,
  IMAGE_COR_MIH_METHODRVA = 0x1,
  IMAGE_COR_MIH_EHRVA = 0x2,
  IMAGE_COR_MIH_BASICBLOCK = 0x8,
  COR_VTABLE_32BIT = 0x1,
  COR_VTABLE_64BIT = 0x2,
  COR_VTABLE_FROM_UNMANAGED = 0x4,
  COR_VTABLE_CALL_MOST_DERIVED = 0x10,
  IMAGE_COR_EATJ_THUNK_SIZE = 0x20,
  MAX_CLASS_NAME = 0x400,
  MAX_PACKAGE_NAME = 0x400,
};

/* 163 */
enum PrimitiveTypes : __int32
{
  pt_Sphere = 0x0,
  pt_Cylinder = 0x1,
  pt_Box = 0x2,
  pt_Torus = 0x3,
  pt_Cone = 0x4,
  pt_SurfOfRev = 0x5,
  pt_NoTypes = 0x6,
};

/* 164 */
enum $5A42C745945AF11D3B4526D4EE3B8C73 : __int32
{
  NUM_PULSES = 0xC,
};

/* 165 */
enum ShaderTypes : __int32
{
  st_Phong = 0x0,
  st_Bump = 0x1,
  st_Depth = 0x2,
  st_ShadowMap = 0x3,
  st_NoTypes = 0x4,
};

/* 166 */
enum $22E4EC05B77B2B18A631CCB59C165779 : __int32
{
  MAX_BLOBBUMPS = 0x20,
};

/* 167 */
enum $F5C5A7B76A91981BCA24733498A30A85 : __int32
{
  MAX_BLOBLETS = 0x8,
};

/* 168 */
enum $2798F9BE1FC4FF37DF8F8EE1683FED96 : __int32
{
  NUM_PLASMAS = 0x3,
};

/* 169 */
enum $E2A8792B65331C7E03C672C3E7B6EE4C : __int32
{
  MAX_SHIELDS = 0x3,
};

/* 170 */
enum $AB546CC3D7A694115FD091D981EE4B09 : __int32
{
  MAX_ZSHIELDS = 0x5,
};

/* 171 */
enum $87DEFEF313828D8C2D9D2C678F4C46AA : __int32
{
  NUM_FINISH_NODES = 0x8,
};

/* 172 */
enum SurfOfRevPtFlags : __int32
{
  sr_Smooth = 0x1,
};

/* 173 */
enum PrimitiveSet::createSurfOfRevVersion::__l6::NormalCalcFlags : __int32
{
  nf_PrevSeg = 0x0,
  nf_NextSeg = 0x1,
  nf_BothSeg = 0x2,
};

/* 174 */
typedef D3DK::_D3DPERF_PerformanceCounters _D3DPERF_PerformanceCounters;

/* 175 */
typedef D3DK::_D3DPERF_APICounters _D3DPERF_APICounters;

/* 176 */
typedef D3DK::_D3DPERFPROF _D3DPERFPROF;

/* 177 */
enum D3DK::_kelvinCombinerInput : __int32
{
  kelvinCombinerInputA = 0x0,
  kelvinCombinerInputB = 0x1,
  kelvinCombinerInputC = 0x2,
  kelvinCombinerInputD = 0x3,
};

/* 178 */
enum AC97REGISTER : __int32
{
  AC97REG_RESET = 0x0,
  AC97REG_FRONT_VOLUME = 0x1,
  AC97REG_HEADPHONE_VOLUME = 0x2,
  AC97REG_MONOOUT_VOLUME = 0x3,
  AC97REG_MASTER_TONE = 0x4,
  AC97REG_PCBEEP_VOLUME = 0x5,
  AC97REG_PHONE_VOLUME = 0x6,
  AC97REG_MIC_VOLUME = 0x7,
  AC97REG_LINE_IN_VOLUME = 0x8,
  AC97REG_CD_VOLUME = 0x9,
  AC97REG_VIDEO_VOLUME = 0xA,
  AC97REG_AUX_VOLUME = 0xB,
  AC97REG_PCM_OUT_VOLUME = 0xC,
  AC97REG_RECORD_SELECT = 0xD,
  AC97REG_RECORD_GAIN = 0xE,
  AC97REG_RECORD_GAIN_MIC = 0xF,
  AC97REG_GENERAL = 0x10,
  AC97REG_3D_CTRL = 0x11,
  AC97REG_RESERVED0 = 0x12,
  AC97REG_POWERDOWN = 0x13,
  AC97REG_EXT_AUDIO_ID = 0x14,
  AC97REG_EXT_AUDIO_CTRL = 0x15,
  AC97REG_FRONT_RATE = 0x16,
  AC97REG_SURR_RATE = 0x17,
  AC97REG_LFE_RATE = 0x18,
  AC97REG_LR_RATE = 0x19,
  AC97REG_MIC_RATE = 0x1A,
  AC97REG_6CH_VOL_CLFE = 0x1B,
  AC97REG_6CH_VOL_SURR = 0x1C,
  AC97REG_RESERVED1 = 0x1D,
  AC97REG_EXT_MODEM_ID = 0x1E,
  AC97REG_EXT_MODEM_CTRL = 0x1F,
  AC97REG_LINE1_RATE = 0x20,
  AC97REG_LINE2_RATE = 0x21,
  AC97REG_HANDSET_RATE = 0x22,
  AC97REG_LINE1_LEVEL = 0x23,
  AC97REG_LINE2_LEVEL = 0x24,
  AC97REG_HANDSET_LEVEL = 0x25,
  AC97REG_GPIO_CONFIG = 0x26,
  AC97REG_GPIO_POLARITY = 0x27,
  AC97REG_GPIO_STICKY = 0x28,
  AC97REG_GPIO_WAKEUP = 0x29,
  AC97REG_GPIO_STATUS = 0x2A,
  AC97REG_MISC_MODEM_CTRL = 0x2B,
  AC97REG_RESERVED2 = 0x2C,
  AC97REG_VENDOR_RESERVED0 = 0x2D,
  AC97REG_VENDOR_RESERVED1 = 0x2E,
  AC97REG_VENDOR_RESERVED2 = 0x2F,
  AC97REG_VENDOR_RESERVED3 = 0x30,
  AC97REG_VENDOR_RESERVED4 = 0x31,
  AC97REG_VENDOR_RESERVED5 = 0x32,
  AC97REG_VENDOR_RESERVED6 = 0x33,
  AC97REG_VENDOR_RESERVED7 = 0x34,
  AC97REG_VENDOR_RESERVED8 = 0x35,
  AC97REG_VENDOR_RESERVED9 = 0x36,
  AC97REG_VENDOR_RESERVED10 = 0x37,
  AC97REG_VENDOR_RESERVED11 = 0x38,
  AC97REG_VENDOR_RESERVED12 = 0x39,
  AC97REG_VENDOR_RESERVED13 = 0x3A,
  AC97REG_VENDOR_RESERVED14 = 0x3B,
  AC97REG_VENDOR_RESERVED15 = 0x3C,
  AC97REG_VENDOR_RESERVED16 = 0x3D,
  AC97REG_VENDOR_ID1 = 0x3E,
  AC97REG_VENDOR_ID2 = 0x3F,
  AC97REG_INVALID = 0x40,
};

/* 179 */
enum $19C53590BCD24CBB588566E0817E5264 : __int32
{
  MCPX_DEFERREDCMD_BUFFER_POSITIONDELTA = 0x0,
  MCPX_DEFERREDCMD_BUFFER_RELEASERESOURCES = 0x1,
  MCPX_DEFERREDCMD_BUFFER_PLAY = 0x2,
  MCPX_DEFERREDCMD_BUFFER_STOP = 0x3,
  MCPX_DEFERREDCMD_BUFFER_NOTEOFF = 0x4,
  MCPX_DEFERREDCMD_BUFFER_COUNT = 0x5,
};

/* 180 */
enum $EFBB3D1397647D51ED86EBD988662F1B : __int32
{
  MCPX_DEFERREDCMD_STREAM_COMPLETEPACKETS = 0x0,
  MCPX_DEFERREDCMD_STREAM_RELEASERESOURCES = 0x1,
  MCPX_DEFERREDCMD_STREAM_PROCESS = 0x2,
  MCPX_DEFERREDCMD_STREAM_COUNT = 0x3,
};

/* 181 */
enum AC97CHANNELTYPE : __int32
{
  AC97_CHANNELTYPE_ANALOG = 0x0,
  AC97_CHANNELTYPE_DIGITAL = 0x1,
  AC97_CHANNELTYPE_COUNT = 0x2,
};

/* 182 */
enum $6FC4FB5992507F0A1471D945AC228979 : __int32
{
  MCPX_GPOUTPUT_BOOTSOUND = 0x0,
  MCPX_GPOUTPUT_COUNT = 0x1,
};

/* 183 */
enum $4CED575CCF75F4BF16A184A845BD0675 : __int32
{
  MCPX_EPOUTPUT_AC97_ANALOG = 0x0,
  MCPX_EPOUTPUT_AC97_DIGITAL = 0x1,
  MCPX_EPOUTPUT_COUNT = 0x2,
};

/* 184 */
enum MCPX_FE_STATE : __int32
{
  MCPX_FE_STATE_HALTED = 0x0,
  MCPX_FE_STATE_FREE_RUNNING = 0x1,
  MCPX_FE_STATE_ISO = 0x2,
  MCPX_FE_STATE_NON_ISO = 0x3,
};

/* 185 */
enum MCPX_SE_STATE : __int32
{
  MCPX_SE_STATE_OFF = 0x0,
  MCPX_SE_STATE_AC_SYNC = 0x1,
  MCPX_SE_STATE_SW = 0x2,
  MCPX_SE_STATE_FREE_RUNNING = 0x3,
  MCPX_SE_STATE_ISO = 0x4,
  MCPX_SE_STATE_NON_ISO = 0x5,
};

/* 186 */
enum $79B659A03B56BB9BF1B386B31649C839 : __int32
{
  MCPX_MEM_GPOUTPUT = 0x0,
  MCPX_MEM_EPOUTPUT = 0x1,
  MCPX_MEM_MAGICWRITE = 0x2,
  MCPX_MEM_VOICE = 0x3,
  MCPX_MEM_NOTIFIERS = 0x4,
  MCPX_MEM_INPUTSGE = 0x5,
  MCPX_MEM_INPUTPRD = 0x6,
  MCPX_MEM_HRTFTARGET = 0x7,
  MCPX_MEM_HRTFCURRENT = 0x8,
  MCPX_MEM_GPOUTPUTSGE = 0x9,
  MCPX_MEM_EPOUTPUTSGE = 0xA,
  MCPX_MEM_GPMULTIPASS = 0xB,
  MCPX_MEM_GPSCRATCH = 0xC,
  MCPX_MEM_GPSCRATCHSGE = 0xD,
  MCPX_MEM_EPSCRATCH = 0xE,
  MCPX_MEM_EPSCRATCHSGE = 0xF,
  MCPX_MEM_COUNT = 0x10,
};

/* 187 */
enum $5B93E1989C48E000C9C843F6A8A23487 : __int32
{
  MCPX_VOICELIST_2D = 0x0,
  MCPX_VOICELIST_3D = 0x1,
  MCPX_VOICELIST_MP = 0x2,
  MCPX_VOICELIST_COUNT = 0x3,
};

/* 188 */
enum $1BD9031A7E30314E35DDCA15B90B2355 : __int32
{
  MCPX_NOTIFIER_SSLA_DONE = 0x0,
  MCPX_NOTIFIER_SSLB_DONE = 0x1,
  MCPX_NOTIFIER_SSLA_GETPOS = 0x2,
  MCPX_NOTIFIER_VOICE_OFF = 0x3,
  MCPX_NOTIFIER_COUNT = 0x4,
};

/* 190 */
struct PROCESSOR_IDLE_TIMES
{
  unsigned __int64 StartTime;
  unsigned __int64 EndTime;
  unsigned int IdleHandlerReserved[4];
};

/* 189 */
struct _PROCESSOR_POWER_STATE
{
  void (__fastcall *IdleFunction)(_PROCESSOR_POWER_STATE *);
  unsigned int Idle0KernelTimeLimit;
  unsigned int Idle0LastTime;
  void *IdleState;
  unsigned __int64 LastCheck;
  PROCESSOR_IDLE_TIMES IdleTimes;
  unsigned int IdleTime1;
  unsigned int PromotionCheck;
  unsigned int IdleTime2;
  unsigned __int8 CurrentThrottle;
  unsigned __int8 ThrottleLimit;
  unsigned __int8 Spare1[2];
  unsigned int SetMember;
  void *AbortThrottle;
  unsigned __int64 DebugDelta;
  unsigned int DebugCount;
  unsigned int LastSysTime;
  unsigned int Spare2[10];
};

/* 191 */
struct _CM_DISK_GEOMETRY_DEVICE_DATA
{
  unsigned int BytesPerSector;
  unsigned int NumberOfCylinders;
  unsigned int SectorsPerTrack;
  unsigned int NumberOfHeads;
};

/* 192 */
struct _LIST_ENTRY
{
  _LIST_ENTRY *Flink;
  _LIST_ENTRY *Blink;
};

/* 193 */
struct _DISPATCHER_HEADER
{
  unsigned __int8 Type;
  unsigned __int8 Absolute;
  unsigned __int8 Size;
  unsigned __int8 Inserted;
  int SignalState;
  _LIST_ENTRY WaitListHead;
};

/* 194 */
struct __declspec(align(2)) _KPROCESS
{
  _LIST_ENTRY ReadyListHead;
  _LIST_ENTRY ThreadListHead;
  unsigned int StackCount;
  int ThreadQuantum;
  char BasePriority;
  unsigned __int8 DisableBoost;
  unsigned __int8 DisableQuantum;
};

/* 195 */
struct _KAPC_STATE
{
  _LIST_ENTRY ApcListHead[2];
  _KPROCESS *Process;
  unsigned __int8 KernelApcInProgress;
  unsigned __int8 KernelApcPending;
  unsigned __int8 UserApcPending;
  unsigned __int8 ApcQueueable;
};

/* 199 */
struct $B950AFB169DC87688B328897744C612F
{
  unsigned int LowPart;
  unsigned int HighPart;
};

/* 200 */
union _ULARGE_INTEGER
{
  $B950AFB169DC87688B328897744C612F __s0;
  $B950AFB169DC87688B328897744C612F u;
  unsigned __int64 QuadPart;
};

/* 202 */
struct _KTIMER
{
  _DISPATCHER_HEADER Header;
  _ULARGE_INTEGER DueTime;
  _LIST_ENTRY TimerListEntry;
  _KDPC *Dpc;
  int Period;
};

/* 197 */
struct _KWAIT_BLOCK
{
  _LIST_ENTRY WaitListEntry;
  _KTHREAD *Thread;
  void *Object;
  _KWAIT_BLOCK *NextWaitBlock;
  unsigned __int16 WaitKey;
  unsigned __int16 WaitType;
};

/* 203 */
struct _KAPC
{
  __int16 Type;
  char ApcMode;
  unsigned __int8 Inserted;
  _KTHREAD *Thread;
  _LIST_ENTRY ApcListEntry;
  void (__stdcall *KernelRoutine)(_KAPC *, void (__stdcall **)(void *, void *, void *), void **, void **, void **);
  void (__stdcall *RundownRoutine)(_KAPC *);
  void (__stdcall *NormalRoutine)(void *, void *, void *);
  void *NormalContext;
  void *SystemArgument1;
  void *SystemArgument2;
};

/* 204 */
struct _KSEMAPHORE
{
  _DISPATCHER_HEADER Header;
  int Limit;
};

/* 196 */
struct __declspec(align(8)) _KTHREAD
{
  _DISPATCHER_HEADER Header;
  _LIST_ENTRY MutantListHead;
  unsigned int KernelTime;
  void *StackBase;
  void *StackLimit;
  void *KernelStack;
  void *TlsData;
  unsigned __int8 State;
  unsigned __int8 Alerted[2];
  unsigned __int8 Alertable;
  unsigned __int8 NpxState;
  char Saturation;
  char Priority;
  unsigned __int8 Padding;
  _KAPC_STATE ApcState;
  unsigned int ContextSwitches;
  int WaitStatus;
  unsigned __int8 WaitIrql;
  char WaitMode;
  unsigned __int8 WaitNext;
  unsigned __int8 WaitReason;
  _KWAIT_BLOCK *WaitBlockList;
  _LIST_ENTRY WaitListEntry;
  unsigned int WaitTime;
  unsigned int KernelApcDisable;
  int Quantum;
  char BasePriority;
  unsigned __int8 DecrementCount;
  char PriorityDecrement;
  unsigned __int8 DisableBoost;
  unsigned __int8 NpxIrql;
  char SuspendCount;
  unsigned __int8 Preempted;
  unsigned __int8 HasTerminated;
  _KQUEUE *Queue;
  _LIST_ENTRY QueueListEntry;
  _KTIMER Timer;
  _KWAIT_BLOCK TimerWaitBlock;
  _KAPC SuspendApc;
  _KSEMAPHORE SuspendSemaphore;
  _LIST_ENTRY ThreadListEntry;
};

/* 198 */
struct _KQUEUE
{
  _DISPATCHER_HEADER Header;
  _LIST_ENTRY EntryListHead;
  unsigned int CurrentCount;
  unsigned int MaximumCount;
  _LIST_ENTRY ThreadListHead;
};

/* 201 */
struct _KDPC
{
  __int16 Type;
  unsigned __int8 Inserted;
  unsigned __int8 Padding;
  _LIST_ENTRY DpcListEntry;
  void (__stdcall *DeferredRoutine)(_KDPC *, void *, void *, void *);
  void *DeferredContext;
  void *SystemArgument1;
  void *SystemArgument2;
};

/* 205 */
struct _DSEFFECTIMAGELOC
{
  unsigned int dwI3DL2ReverbIndex;
  unsigned int dwCrosstalkIndex;
};

/* 206 */
struct _UNICODE_STRING
{
  unsigned __int16 Length;
  unsigned __int16 MaximumLength;
  unsigned __int16 *Buffer;
};

/* 207 */
struct _RTL_SPLAY_LINKS
{
  _RTL_SPLAY_LINKS *Parent;
  _RTL_SPLAY_LINKS *LeftChild;
  _RTL_SPLAY_LINKS *RightChild;
};

/* 208 */
struct _TOKEN_PRIMARY_GROUP
{
  void *PrimaryGroup;
};

/* 209 */
struct _IMAGE_IA64_RUNTIME_FUNCTION_ENTRY
{
  unsigned int BeginAddress;
  unsigned int EndAddress;
  unsigned int UnwindInfoAddress;
};

/* 210 */
struct _SYSTEM_EXCEPTION_INFORMATION
{
  unsigned int AlignmentFixupCount;
  unsigned int ExceptionDispatchCount;
  unsigned int FloatingEmulationCount;
  unsigned int ByteWordEmulationCount;
};

/* 211 */
struct $2ACC251678A70CC660B42C50BE23747A
{
  void *hMem;
  unsigned int dwReserved[3];
};

/* 212 */
struct $03A236B16FC15461493BD6ADF5082600
{
  unsigned int dwCommittedSize;
  unsigned int dwUnCommittedSize;
  void *lpFirstBlock;
  void *lpLastBlock;
};

/* 213 */
union $1B7491555562393F6F901B1EE7BA4402
{
  $2ACC251678A70CC660B42C50BE23747A Block;
  $03A236B16FC15461493BD6ADF5082600 Region;
};

/* 214 */
struct _PROCESS_HEAP_ENTRY
{
  void *lpData;
  unsigned int cbData;
  unsigned __int8 cbOverhead;
  unsigned __int8 iRegionIndex;
  unsigned __int16 wFlags;
  $1B7491555562393F6F901B1EE7BA4402 ___u5;
};

/* 215 */
struct __cppobj D3DXCOLOR
{
  float r;
  float g;
  float b;
  float a;
};

/* 216 */
struct _D3DCOLORVALUE
{
  float r;
  float g;
  float b;
  float a;
};

/* 217 */
struct $BE8EA959F0E773F3B9AE84AC57884D34
{
  unsigned int size;
  unsigned int monochrome[15];
};

/* 218 */
struct _GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  unsigned __int8 Data4[8];
};

/* 219 */
struct _SID_AND_ATTRIBUTES
{
  void *Sid;
  unsigned int Attributes;
};

/* 220 */
struct $FAF74743FBE1C8632047CFB668F7028A
{
  unsigned int LowPart;
  int HighPart;
};

/* 221 */
union _LARGE_INTEGER
{
  $FAF74743FBE1C8632047CFB668F7028A __s0;
  $FAF74743FBE1C8632047CFB668F7028A u;
  __int64 QuadPart;
};

/* 222 */
struct _CLIENT_ID
{
  void *UniqueProcess;
  void *UniqueThread;
};

/* 223 */
struct __declspec(align(8)) _SYSTEM_THREAD_INFORMATION
{
  _LARGE_INTEGER KernelTime;
  _LARGE_INTEGER UserTime;
  _LARGE_INTEGER CreateTime;
  unsigned int WaitTime;
  void *StartAddress;
  _CLIENT_ID ClientId;
  int Priority;
  int BasePriority;
  unsigned int ContextSwitches;
  unsigned int ThreadState;
  unsigned int WaitReason;
};

/* 224 */
struct _SYSTEM_CRASH_DUMP_INFORMATION
{
  void *CrashDumpSection;
  void *hDumpSection;
};

/* 225 */
struct $232D31F77F8C904D0534B1A88D4C7447
{
  unsigned int offset;
  unsigned int length;
  unsigned int notify;
};

/* 226 */
struct $2BFA642BCAE1EB5A18CA8F1C1DF64009
{
  unsigned int formatIn;
  unsigned int size;
  unsigned int offsetOut;
  unsigned int formatOut;
  unsigned int notify;
};

/* 227 */
struct Nv04eTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int StopTransfer;
  unsigned int Reserved00[29];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaData[2];
  unsigned int SetContextDmaImage[2];
  unsigned int Reserved01[91];
  $232D31F77F8C904D0534B1A88D4C7447 SetData[2];
  $2BFA642BCAE1EB5A18CA8F1C1DF64009 SetImage[2];
  unsigned int Reserved02[1840];
};

/* 228 */
struct _EXCEPTION_REGISTRATION_RECORD
{
  _EXCEPTION_REGISTRATION_RECORD *Next;
  _EXCEPTION_DISPOSITION (__stdcall *Handler)(_EXCEPTION_RECORD *, void *, _CONTEXT *, void *);
};

/* 229 */
struct _EXCEPTION_RECORD
{
  int ExceptionCode;
  unsigned int ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  void *ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int ExceptionInformation[15];
};

/* 230 */
struct _FLOATING_SAVE_AREA
{
  unsigned __int16 ControlWord;
  unsigned __int16 StatusWord;
  unsigned __int16 TagWord;
  unsigned __int16 ErrorOpcode;
  unsigned int ErrorOffset;
  unsigned int ErrorSelector;
  unsigned int DataOffset;
  unsigned int DataSelector;
  unsigned int MXCsr;
  unsigned int Reserved2;
  unsigned __int8 RegisterArea[128];
  unsigned __int8 XmmRegisterArea[128];
  unsigned __int8 Reserved4[224];
  unsigned int Cr0NpxState;
};

/* 231 */
struct _CONTEXT
{
  unsigned int ContextFlags;
  _FLOATING_SAVE_AREA FloatSave;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Ebx;
  unsigned int Edx;
  unsigned int Ecx;
  unsigned int Eax;
  unsigned int Ebp;
  unsigned int Eip;
  unsigned int SegCs;
  unsigned int EFlags;
  unsigned int Esp;
  unsigned int SegSs;
};

/* 232 */
struct _Wx86TIB
{
  unsigned int Size;
  unsigned int InitialPc;
  void *StackBase;
  void *StackLimit;
  void *DeallocationStack;
  unsigned int LogFlags;
  unsigned int InitialSp;
  unsigned __int8 SimulationCount;
  unsigned __int8 InCpuSimulation;
  unsigned __int8 EmulateInitialPc;
  unsigned __int8 Initialized;
  _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
  void *CpuContext;
  _CONTEXT *InitialExceptionContext;
  void *pCallersRIID;
  void *pCallersUnknown;
  unsigned int Flags;
  void *SelfRegDllName;
  void *SelfRegDllHandle;
};

/* 233 */
struct sockaddr
{
  unsigned __int16 sa_family;
  char sa_data[14];
};

/* 234 */
struct __declspec(align(8)) _KEY_BASIC_INFORMATION
{
  _LARGE_INTEGER LastWriteTime;
  unsigned int TitleIndex;
  unsigned int NameLength;
  unsigned __int16 Name[1];
};

/* 235 */
struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO
{
  unsigned __int16 UniqueProcessId;
  unsigned __int16 CreatorBackTraceIndex;
  unsigned __int8 ObjectTypeIndex;
  unsigned __int8 HandleAttributes;
  unsigned __int16 HandleValue;
  void *Object;
  unsigned int GrantedAccess;
};

/* 236 */
struct _SYSTEM_HANDLE_INFORMATION
{
  unsigned int NumberOfHandles;
  _SYSTEM_HANDLE_TABLE_ENTRY_INFO Handles[1];
};

/* 237 */
struct _LD_FROM_DEBUGGER_CMDLINE
{
  char szCmdLine[3072];
};

/* 238 */
struct __declspec(align(8)) _FILE_FS_VOLUME_INFORMATION
{
  _LARGE_INTEGER VolumeCreationTime;
  unsigned int VolumeSerialNumber;
  unsigned int VolumeLabelLength;
  unsigned __int8 SupportsObjects;
  char VolumeLabel[1];
};

/* 239 */
struct _OSVERSIONINFOEXW
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  unsigned __int16 szCSDVersion[128];
  unsigned __int16 wServicePackMajor;
  unsigned __int16 wServicePackMinor;
  unsigned __int16 wSuiteMask;
  unsigned __int8 wProductType;
  unsigned __int8 wReserved;
};

/* 240 */
struct tagPALETTEENTRY
{
  unsigned __int8 peRed;
  unsigned __int8 peGreen;
  unsigned __int8 peBlue;
  unsigned __int8 peFlags;
};

/* 241 */
struct _SID_IDENTIFIER_AUTHORITY
{
  unsigned __int8 Value[6];
};

/* 242 */
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR
{
  unsigned int TimeDateStamp;
  unsigned __int16 OffsetModuleName;
  unsigned __int16 NumberOfModuleForwarderRefs;
};

/* 243 */
struct _PROCESS_FOREGROUND_BACKGROUND
{
  unsigned __int8 Foreground;
};

/* 244 */
struct _XPP_DEVICE_TYPE
{
  unsigned int Reserved[3];
};

/* 245 */
struct _XDEVICE_PREALLOC_TYPE
{
  _XPP_DEVICE_TYPE *DeviceType;
  unsigned int dwPreallocCount;
};

/* 246 */
struct _LUID
{
  unsigned int LowPart;
  int HighPart;
};

/* 247 */
struct _LUID_AND_ATTRIBUTES
{
  _LUID Luid;
  unsigned int Attributes;
};

/* 248 */
struct $35A748ECD312963787ED9A5392FD6880
{
  unsigned int Length;
  unsigned int Alignment;
  _LARGE_INTEGER MinimumAddress;
  _LARGE_INTEGER MaximumAddress;
};

/* 249 */
struct $40F25B6500B910B9224D9E1A3A07E4CC
{
  unsigned int MinimumVector;
  unsigned int MaximumVector;
};

/* 250 */
struct $290D34FD7868E94AFEC0383C08CB9B28
{
  unsigned int MinimumChannel;
  unsigned int MaximumChannel;
};

/* 251 */
struct $B14DB811EDFC1214B110A98B000FF49B
{
  unsigned int Data[3];
};

/* 252 */
struct $CF7D779FCF8501AF42168A39ACA3AE76
{
  unsigned int Length;
  unsigned int MinBusNumber;
  unsigned int MaxBusNumber;
  unsigned int Reserved;
};

/* 253 */
struct $B68A53036FF83EC00675389BB9E7E831
{
  void *AssignedResource;
};

/* 254 */
struct $30DF5E4A9C61E224C15AE01EABE6239A
{
  unsigned __int8 Type;
  unsigned __int8 Reserved[3];
  void *AssignedResource;
  _LARGE_INTEGER Transformation;
};

/* 255 */
struct $5D61DD2957AFDEE7ED67BD2EDF2BEA99
{
  unsigned int Priority;
  unsigned int Reserved1;
  unsigned int Reserved2;
};

/* 256 */
union $D6438E595537633E26DB4EE27E5B1119
{
  $35A748ECD312963787ED9A5392FD6880 Port;
  $35A748ECD312963787ED9A5392FD6880 Memory;
  $40F25B6500B910B9224D9E1A3A07E4CC Interrupt;
  $290D34FD7868E94AFEC0383C08CB9B28 Dma;
  $35A748ECD312963787ED9A5392FD6880 Generic;
  $B14DB811EDFC1214B110A98B000FF49B DevicePrivate;
  $CF7D779FCF8501AF42168A39ACA3AE76 BusNumber;
  $B68A53036FF83EC00675389BB9E7E831 AssignedResource;
  $30DF5E4A9C61E224C15AE01EABE6239A SubAllocateFrom;
  $5D61DD2957AFDEE7ED67BD2EDF2BEA99 ConfigData;
};

/* 257 */
struct _IO_RESOURCE_DESCRIPTOR
{
  unsigned __int8 Option;
  unsigned __int8 Type;
  unsigned __int8 ShareDisposition;
  unsigned __int8 Spare1;
  unsigned __int16 Flags;
  unsigned __int16 Spare2;
  $D6438E595537633E26DB4EE27E5B1119 u;
};

/* 258 */
struct _IMAGE_BOUND_FORWARDER_REF
{
  unsigned int TimeDateStamp;
  unsigned __int16 OffsetModuleName;
  unsigned __int16 Reserved;
};

/* 259 */
struct _DSFX_FLANGE_MONO_STATE
{
  unsigned int dwScratchOffset;
  unsigned int dwScratchLength;
  unsigned int dwYMemoryOffset;
  unsigned int dwYMemoryLength;
  unsigned int dwFlags;
  unsigned int dwInMixbinPtrs[2];
  unsigned int dwOutMixbinPtrs[1];
};

/* 260 */
struct _FILE_MAILSLOT_QUERY_INFORMATION
{
  unsigned int MaximumMessageSize;
  unsigned int MailslotQuota;
  unsigned int NextMessageSize;
  unsigned int MessagesAvailable;
  _LARGE_INTEGER ReadTimeout;
};

/* 261 */
struct __cppobj IUnknown
{
  IUnknown_vtbl *__vftable /*VFT*/;
};

/* 262 */
struct /*VFT*/ IUnknown_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
};

/* 263 */
struct __cppobj IDirectXFileObject : IUnknown
{
};

/* 264 */
struct /*VFT*/ IDirectXFileObject_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *GetName)(IDirectXFileObject *this, char *, unsigned int *);
  int (__stdcall *GetId)(IDirectXFileObject *this, _GUID *);
};

/* 265 */
struct __cppobj IDirectXFileData : IDirectXFileObject
{
};

/* 266 */
struct /*VFT*/ IDirectXFileData_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *GetName)(IDirectXFileObject *this, char *, unsigned int *);
  int (__stdcall *GetId)(IDirectXFileObject *this, _GUID *);
  int (__stdcall *GetData)(IDirectXFileData *this, const char *, unsigned int *, void **);
  int (__stdcall *GetType)(IDirectXFileData *this, const _GUID **);
  int (__stdcall *GetNextObject)(IDirectXFileData *this, IDirectXFileObject **);
  int (__stdcall *AddDataObject)(IDirectXFileData *this, IDirectXFileData *);
  int (__stdcall *AddDataReference)(IDirectXFileData *this, const char *, const _GUID *);
  int (__stdcall *AddBinaryObject)(IDirectXFileData *this, const char *, const _GUID *, const char *, void *, unsigned int);
};

/* 267 */
struct __cppobj IDirectXFileEnumObject : IUnknown
{
};

/* 268 */
struct /*VFT*/ IDirectXFileEnumObject_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *GetNextDataObject)(IDirectXFileEnumObject *this, IDirectXFileData **);
  int (__stdcall *GetDataObjectById)(IDirectXFileEnumObject *this, const _GUID *, IDirectXFileData **);
  int (__stdcall *GetDataObjectByName)(IDirectXFileEnumObject *this, const char *, IDirectXFileData **);
};

/* 269 */
struct __cppobj IDirectXFile : IUnknown
{
};

/* 270 */
struct __cppobj IDirectXFileSaveObject : IUnknown
{
};

/* 271 */
struct /*VFT*/ IDirectXFileSaveObject_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *SaveTemplates)(IDirectXFileSaveObject *this, unsigned int, const _GUID **);
  int (__stdcall *CreateDataObject)(IDirectXFileSaveObject *this, const _GUID *, const char *, const _GUID *, unsigned int, void *, IDirectXFileData **);
  int (__stdcall *SaveData)(IDirectXFileSaveObject *this, IDirectXFileData *);
};

/* 272 */
struct /*VFT*/ IDirectXFile_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *CreateEnumObject)(IDirectXFile *this, void *, unsigned int, IDirectXFileEnumObject **);
  int (__stdcall *CreateSaveObject)(IDirectXFile *this, const char *, unsigned int, IDirectXFileSaveObject **);
  int (__stdcall *RegisterTemplates)(IDirectXFile *this, void *, unsigned int);
};

/* 273 */
struct $9F9BAB5ABB51512C6CC6B4182912A92D
{
  unsigned int specular;
  unsigned int color;
  float sx;
  float sy;
  float sz;
  float rhw;
  float tu;
  float tv;
};

/* 274 */
struct Nv048Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaTexture;
  unsigned int SetContextClipRectangle;
  unsigned int SetContextSurfaceColor;
  unsigned int SetContextSurfaceZeta;
  unsigned int Reserved01[92];
  unsigned int TextureOffset;
  unsigned int TextureFormat;
  unsigned int TextureFilter;
  unsigned int FogColor;
  unsigned int Control0;
  unsigned int Control1;
  unsigned int Reserved02[825];
  $9F9BAB5ABB51512C6CC6B4182912A92D Tlvertex[128];
};

/* 275 */
struct Nv061Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextColorKey;
  unsigned int SetContextClipRectangle;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurface;
  unsigned int Reserved01[87];
  unsigned int SetOperation;
  unsigned int SetColorFormat;
  unsigned int Point;
  unsigned int SizeOut;
  unsigned int SizeIn;
  unsigned int Reserved02[60];
  unsigned int Color[1792];
};

/* 276 */
struct _STRING
{
  unsigned __int16 Length;
  unsigned __int16 MaximumLength;
  char *Buffer;
};

/* 277 */
struct $B6565A27DB531784D70E3ADBF1DEF89A
{
  unsigned int DesiredAccess;
  unsigned int Options;
  unsigned __int16 FileAttributes;
  unsigned __int16 ShareAccess;
  _STRING *RemainingName;
};

/* 278 */
union $32434CE98C9C06DFE8454758A1839F6E
{
  unsigned int BufferOffset;
  void *CacheBuffer;
};

/* 279 */
struct $32FF7EA8742F4294E13093948EFEED1F
{
  unsigned int Length;
  $32434CE98C9C06DFE8454758A1839F6E ___u1;
  _LARGE_INTEGER ByteOffset;
};

/* 280 */
struct $DF1BB66653ED9CC5619515BF6A374779
{
  unsigned int Length;
  _STRING *FileName;
  _FILE_INFORMATION_CLASS FileInformationClass;
};

/* 281 */
struct $DE7F61EBA32C3D72CA32E9AA79E9FAF0
{
  unsigned int Length;
  _FILE_INFORMATION_CLASS FileInformationClass;
};

/* 301 */
struct _KDEVICE_QUEUE
{
  __int16 Type;
  unsigned __int8 Size;
  unsigned __int8 Busy;
  _LIST_ENTRY DeviceListHead;
};

/* 285 */
struct _KEVENT
{
  _DISPATCHER_HEADER Header;
};

/* 282 */
struct _DEVICE_OBJECT
{
  __int16 Type;
  unsigned __int16 Size;
  int ReferenceCount;
  _DRIVER_OBJECT *DriverObject;
  _DEVICE_OBJECT *MountedOrSelfDevice;
  _IRP *CurrentIrp;
  unsigned int Flags;
  void *DeviceExtension;
  unsigned __int8 DeviceType;
  unsigned __int8 StartIoFlags;
  char StackSize;
  unsigned __int8 DeletePending;
  unsigned int SectorSize;
  unsigned int AlignmentRequirement;
  _KDEVICE_QUEUE DeviceQueue;
  _KEVENT DeviceLock;
  unsigned int StartIoKey;
};

/* 300 */
struct _DRIVER_OBJECT
{
  void (__stdcall *DriverStartIo)(_DEVICE_OBJECT *, _IRP *);
  void (__stdcall *DriverDeleteDevice)(_DEVICE_OBJECT *);
  int (__stdcall *DriverDismountVolume)(_DEVICE_OBJECT *);
  int (__stdcall *MajorFunction[14])(_DEVICE_OBJECT *, _IRP *);
};

/* 283 */
union $250F5FE22B4503EFD7D48C86CC7F2167
{
  int Status;
  void *Pointer;
};

/* 284 */
struct _IO_STATUS_BLOCK
{
  $250F5FE22B4503EFD7D48C86CC7F2167 ___u0;
  unsigned int Information;
};

/* 286 */
struct $F8E0F489CD0C9381E9D7FF193F20726C
{
  void (__stdcall *UserApcRoutine)(void *, _IO_STATUS_BLOCK *, unsigned int);
  void *UserApcContext;
};

/* 287 */
union $0F2FE4C5C9CF2E6974D33AAD4B5C2A21
{
  $F8E0F489CD0C9381E9D7FF193F20726C AsynchronousParameters;
  _LARGE_INTEGER AllocationSize;
};

/* 289 */
struct __declspec(align(4)) _KDEVICE_QUEUE_ENTRY
{
  _LIST_ENTRY DeviceListEntry;
  unsigned int SortKey;
  unsigned __int8 Inserted;
};

/* 295 */
union $E17D16494D70AF678DF06CBFC8AF4BFF
{
  _KDEVICE_QUEUE_ENTRY DeviceQueueEntry;
  void *DriverContext[5];
};

/* 296 */
union $A4961D03CF1FE4E4DEC5DD5678FDF74E
{
  _IO_STACK_LOCATION *CurrentStackLocation;
  unsigned int PacketType;
};

/* 297 */
struct $4E907849023FC7B94E800CD19268FB8B
{
  $E17D16494D70AF678DF06CBFC8AF4BFF ___u0;
  _ETHREAD *Thread;
  _LIST_ENTRY ListEntry;
  $A4961D03CF1FE4E4DEC5DD5678FDF74E ___u3;
  _FILE_OBJECT *OriginalFileObject;
};

/* 298 */
union $24E29A0FE6FBC7BF02F081EE4A690E69
{
  $4E907849023FC7B94E800CD19268FB8B Overlay;
  _KAPC Apc;
  void *CompletionKey;
};

/* 299 */
struct __declspec(align(8)) _IRP
{
  __int16 Type;
  unsigned __int16 Size;
  unsigned int Flags;
  _LIST_ENTRY ThreadListEntry;
  _IO_STATUS_BLOCK IoStatus;
  char StackCount;
  char CurrentLocation;
  unsigned __int8 PendingReturned;
  unsigned __int8 Cancel;
  _IO_STATUS_BLOCK *UserIosb;
  _KEVENT *UserEvent;
  $0F2FE4C5C9CF2E6974D33AAD4B5C2A21 Overlay;
  void *UserBuffer;
  _FILE_SEGMENT_ELEMENT *SegmentArray;
  unsigned int LockedBufferLength;
  $24E29A0FE6FBC7BF02F081EE4A690E69 Tail;
};

/* 288 */
union _FILE_SEGMENT_ELEMENT
{
  void *Buffer;
  unsigned int Alignment;
};

/* 290 */
union $629D0A89D78210270587513AD13F7053
{
  int ExitStatus;
  void *OfsChain;
};

/* 291 */
union $420CE7057828E4ABA6AFE6330451B308
{
  _LIST_ENTRY ReaperListEntry;
  _LIST_ENTRY ActiveTimerListHead;
};

/* 292 */
struct _ETHREAD
{
  _KTHREAD Tcb;
  _LARGE_INTEGER CreateTime;
  _LARGE_INTEGER ExitTime;
  $629D0A89D78210270587513AD13F7053 ___u3;
  $420CE7057828E4ABA6AFE6330451B308 ___u4;
  void *UniqueThread;
  void *StartAddress;
  _LIST_ENTRY IrpList;
  void *DebugData;
};

/* 303 */
struct $3446245DCEAFE3B4AC31177BA0D6DEFD
{
  unsigned int Length;
  _FILE_INFORMATION_CLASS FileInformationClass;
  _FILE_OBJECT *FileObject;
};

/* 304 */
struct $0C56C196912011C7E649BB3A5037E269
{
  unsigned int Length;
  _FSINFOCLASS FsInformationClass;
};

/* 305 */
struct $41E86A820D00DD39924A384E115051B1
{
  unsigned int OutputBufferLength;
  void *InputBuffer;
  unsigned int InputBufferLength;
  unsigned int FsControlCode;
};

/* 306 */
struct $381D735A009C5CEF0E52CCA972036CA8
{
  unsigned int OutputBufferLength;
  void *InputBuffer;
  unsigned int InputBufferLength;
  unsigned int IoControlCode;
};

/* 307 */
struct $B2B4984C7002DD41520623255E2F9497
{
  struct _SCSI_REQUEST_BLOCK *Srb;
};

/* 308 */
struct $050F1F37F070C5A34D6CFFB7D0EF1D6D
{
  unsigned int Length;
  unsigned __int8 *Buffer;
  unsigned int SectorNumber;
  unsigned int BufferOffset;
};

/* 309 */
struct $228F32E73A128818A25FF1959272C294
{
  void *Argument1;
  void *Argument2;
  void *Argument3;
  void *Argument4;
};

/* 310 */
union $2CEDF9AE06F6D33C353D878BD4B14309
{
  $B6565A27DB531784D70E3ADBF1DEF89A Create;
  $32FF7EA8742F4294E13093948EFEED1F Read;
  $32FF7EA8742F4294E13093948EFEED1F Write;
  $DF1BB66653ED9CC5619515BF6A374779 QueryDirectory;
  $DE7F61EBA32C3D72CA32E9AA79E9FAF0 QueryFile;
  $3446245DCEAFE3B4AC31177BA0D6DEFD SetFile;
  $0C56C196912011C7E649BB3A5037E269 QueryVolume;
  $0C56C196912011C7E649BB3A5037E269 SetVolume;
  $41E86A820D00DD39924A384E115051B1 FileSystemControl;
  $381D735A009C5CEF0E52CCA972036CA8 DeviceIoControl;
  $B2B4984C7002DD41520623255E2F9497 Scsi;
  $050F1F37F070C5A34D6CFFB7D0EF1D6D IdexReadWrite;
  $228F32E73A128818A25FF1959272C294 Others;
};

/* 293 */
struct __unaligned __declspec(align(4)) _IO_STACK_LOCATION
{
  unsigned __int8 MajorFunction;
  unsigned __int8 MinorFunction;
  unsigned __int8 Flags;
  unsigned __int8 Control;
  $2CEDF9AE06F6D33C353D878BD4B14309 Parameters;
  _DEVICE_OBJECT *DeviceObject;
  _FILE_OBJECT *FileObject;
  int (__stdcall *CompletionRoutine)(_DEVICE_OBJECT *, _IRP *, void *);
  void *Context;
};

/* 294 */
struct _FILE_OBJECT
{
  __int16 Type;
  unsigned __int8 DeletePending : 1;
  unsigned __int8 ReadAccess : 1;
  unsigned __int8 WriteAccess : 1;
  unsigned __int8 DeleteAccess : 1;
  unsigned __int8 SharedRead : 1;
  unsigned __int8 SharedWrite : 1;
  unsigned __int8 SharedDelete : 1;
  unsigned __int8 Reserved : 1;
  unsigned __int8 Flags;
  _DEVICE_OBJECT *DeviceObject;
  void *FsContext;
  void *FsContext2;
  int FinalStatus;
  __unaligned __declspec(align(1)) _LARGE_INTEGER CurrentByteOffset;
  _FILE_OBJECT *RelatedFileObject;
  _IO_COMPLETION_CONTEXT *CompletionContext;
  int LockCount;
  _KEVENT Lock;
  _KEVENT Event;
};

/* 302 */
struct _IO_COMPLETION_CONTEXT
{
  void *Port;
  void *Key;
};

/* 311 */
struct _DSFX_IIR_STATE
{
  unsigned int dwScratchOffset;
  unsigned int dwScratchLength;
  unsigned int dwYMemoryOffset;
  unsigned int dwYMemoryLength;
  unsigned int dwFlags;
  unsigned int dwInMixbinPtrs[1];
  unsigned int dwOutMixbinPtrs[1];
};

/* 312 */
struct _DSFX_IIR_PARAMS
{
  _DSFX_IIR_STATE State;
  unsigned int dwDelayLength;
  unsigned int dwGain;
  unsigned int dwType;
};

/* 313 */
union $BD358E6F1AB7428D2A19828FCF03B146
{
  unsigned __int8 Tag[4];
  unsigned int TagUlong;
};

/* 314 */
struct _SYSTEM_POOLTAG
{
  $BD358E6F1AB7428D2A19828FCF03B146 ___u0;
  unsigned int PagedAllocs;
  unsigned int PagedFrees;
  unsigned int PagedUsed;
  unsigned int NonPagedAllocs;
  unsigned int NonPagedFrees;
  unsigned int NonPagedUsed;
};

/* 315 */
struct _SYSTEM_POOLTAG_INFORMATION
{
  unsigned int Count;
  _SYSTEM_POOLTAG TagInfo[1];
};

/* 316 */
struct _D3DVECTOR
{
  float x;
  float y;
  float z;
};

/* 317 */
struct __cppobj D3DXVECTOR3 : _D3DVECTOR
{
};

/* 318 */
struct _TOKEN_SOURCE
{
  char SourceName[8];
  _LUID SourceIdentifier;
};

/* 319 */
struct _TOKEN_CONTROL
{
  _LUID TokenId;
  _LUID AuthenticationId;
  _LUID ModifiedId;
  _TOKEN_SOURCE TokenSource;
};

/* 320 */
struct _D3DLIGHT8
{
  _D3DLIGHTTYPE Type;
  _D3DCOLORVALUE Diffuse;
  _D3DCOLORVALUE Specular;
  _D3DCOLORVALUE Ambient;
  _D3DVECTOR Position;
  _D3DVECTOR Direction;
  float Range;
  float Falloff;
  float Attenuation0;
  float Attenuation1;
  float Attenuation2;
  float Theta;
  float Phi;
};

/* 321 */
struct _TypeDescriptor
{
  const void *pVFTable;
  void *spare;
  char name[];
};

/* 322 */
struct _PMD
{
  int mdisp;
  int pdisp;
  int vdisp;
};

/* 323 */
struct _s__CatchableType
{
  unsigned int properties;
  _TypeDescriptor *pType;
  _PMD thisDisplacement;
  int sizeOrOffset;
  void (__stdcall *copyFunction)();
};

/* 324 */
struct _s__CatchableTypeArray
{
  int nCatchableTypes;
  const _s__CatchableType *arrayOfCatchableTypes[];
};

/* 325 */
struct _STRING64
{
  unsigned __int16 Length;
  unsigned __int16 MaximumLength;
  unsigned __int64 Buffer;
};

/* 326 */
struct D3DResource
{
  unsigned int Common;
  unsigned int Data;
  unsigned int Lock;
};

/* 327 */
struct __cppobj D3DVertexBuffer : D3DResource
{
};

/* 328 */
struct _D3DSURFACE_DESC
{
  _D3DFORMAT Format;
  _D3DRESOURCETYPE Type;
  unsigned int Usage;
  unsigned int Size;
  unsigned int MultiSampleType;
  unsigned int Width;
  unsigned int Height;
};

/* 329 */
struct NVDE_READ_MEMORY_PARAMETERS
{
  unsigned int Address;
  unsigned int Size;
  unsigned int Data;
};

/* 330 */
struct _CPTABLEINFO
{
  unsigned __int16 CodePage;
  unsigned __int16 MaximumCharacterSize;
  unsigned __int16 DefaultChar;
  unsigned __int16 UniDefaultChar;
  unsigned __int16 TransDefaultChar;
  unsigned __int16 TransUniDefaultChar;
  unsigned __int16 DBCSCodePage;
  unsigned __int8 LeadByte[12];
  unsigned __int16 *MultiByteTable;
  void *WideCharTable;
  unsigned __int16 *DBCSRanges;
  unsigned __int16 *DBCSOffsets;
};

/* 331 */
struct _RECTL
{
  int left;
  int top;
  int right;
  int bottom;
};

/* 332 */
struct _KINTERRUPT
{
  unsigned __int8 (__stdcall *ServiceRoutine)(_KINTERRUPT *, void *);
  void *ServiceContext;
  unsigned int BusInterruptLevel;
  unsigned int Irql;
  unsigned __int8 Connected;
  unsigned __int8 ShareVector;
  unsigned __int8 Mode;
  unsigned int ServiceCount;
  unsigned int DispatchCode[22];
};

/* 333 */
struct _XINPUT_POLLING_PARAMETERS
{
  unsigned __int8 fAutoPoll : 1;
  unsigned __int8 fInterruptOut : 1;
  unsigned __int8 ReservedMBZ1 : 6;
  unsigned __int8 bInputInterval;
  unsigned __int8 bOutputInterval;
  unsigned __int8 ReservedMBZ2;
};

/* 334 */
struct Nv09eTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage;
  unsigned int Reserved01[94];
  unsigned int SetFormat;
  unsigned int SetOffset;
  unsigned int Reserved02[1854];
};

/* 335 */
struct _REMOTE_PORT_VIEW
{
  unsigned int Length;
  unsigned int ViewSize;
  void *ViewBase;
};

/* 336 */
struct tagPOINT
{
  int x;
  int y;
};

/* 337 */
struct _XBOX_HARDWARE_INFO
{
  unsigned int Flags;
  unsigned __int8 GpuRevision;
  unsigned __int8 McpRevision;
  unsigned __int8 reserved[2];
};

/* 338 */
struct __unaligned __declspec(align(2)) _XINPUT_FEEDBACK_HEADER
{
  unsigned int dwStatus;
  void *hEvent;
  unsigned __int8 Reserved[58];
};

/* 339 */
struct _XINPUT_RUMBLE
{
  unsigned __int16 wLeftMotorSpeed;
  unsigned __int16 wRightMotorSpeed;
};

/* 340 */
struct _XINPUT_FEEDBACK
{
  _XINPUT_FEEDBACK_HEADER Header;
  _XINPUT_RUMBLE Rumble;
};

/* 341 */
struct _D3DLOCKED_RECT
{
  int Pitch;
  void *pBits;
};

/* 342 */
struct _DSFX_ECHO_STEREO_STATE
{
  unsigned int dwScratchOffset;
  unsigned int dwScratchLength;
  unsigned int dwYMemoryOffset;
  unsigned int dwYMemoryLength;
  unsigned int dwFlags;
  unsigned int dwInMixbinPtrs[2];
  unsigned int dwOutMixbinPtrs[2];
};

/* 343 */
struct _ACE_HEADER
{
  unsigned __int8 AceType;
  unsigned __int8 AceFlags;
  unsigned __int16 AceSize;
};

/* 345 */
union $7A727655067EA29DD1B3C3F7D79CBFD1
{
  void *FiberData;
  unsigned int Version;
};

/* 344 */
struct _NT_TIB
{
  _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
  void *StackBase;
  void *StackLimit;
  void *SubSystemTib;
  $7A727655067EA29DD1B3C3F7D79CBFD1 ___u4;
  void *ArbitraryUserPointer;
  _NT_TIB *Self;
};

/* 346 */
struct _PEB_LDR_DATA
{
  unsigned int Length;
  unsigned __int8 Initialized;
  void *SsHandle;
  _LIST_ENTRY InLoadOrderModuleList;
  _LIST_ENTRY InMemoryOrderModuleList;
  _LIST_ENTRY InInitializationOrderModuleList;
};

/* 347 */
struct _PEB_FREE_BLOCK
{
  _PEB_FREE_BLOCK *Next;
  unsigned int Size;
};

/* 348 */
struct __declspec(align(8)) _PEB
{
  unsigned __int8 InheritedAddressSpace;
  unsigned __int8 ReadImageFileExecOptions;
  unsigned __int8 BeingDebugged;
  unsigned __int8 SpareBool;
  void *Mutant;
  void *ImageBaseAddress;
  _PEB_LDR_DATA *Ldr;
  struct _RTL_USER_PROCESS_PARAMETERS *ProcessParameters;
  void *SubSystemData;
  void *ProcessHeap;
  void *FastPebLock;
  void *FastPebLockRoutine;
  void *FastPebUnlockRoutine;
  unsigned int EnvironmentUpdateCount;
  void *KernelCallbackTable;
  unsigned int SystemReserved[2];
  _PEB_FREE_BLOCK *FreeList;
  unsigned int TlsExpansionCounter;
  void *TlsBitmap;
  unsigned int TlsBitmapBits[2];
  void *ReadOnlySharedMemoryBase;
  void *ReadOnlySharedMemoryHeap;
  void **ReadOnlyStaticServerData;
  void *AnsiCodePageData;
  void *OemCodePageData;
  void *UnicodeCaseTableData;
  unsigned int NumberOfProcessors;
  unsigned int NtGlobalFlag;
  _LARGE_INTEGER CriticalSectionTimeout;
  unsigned int HeapSegmentReserve;
  unsigned int HeapSegmentCommit;
  unsigned int HeapDeCommitTotalFreeThreshold;
  unsigned int HeapDeCommitFreeBlockThreshold;
  unsigned int NumberOfHeaps;
  unsigned int MaximumNumberOfHeaps;
  void **ProcessHeaps;
  void *GdiSharedHandleTable;
  void *ProcessStarterHelper;
  unsigned int GdiDCAttributeList;
  void *LoaderLock;
  unsigned int OSMajorVersion;
  unsigned int OSMinorVersion;
  unsigned __int16 OSBuildNumber;
  unsigned __int16 OSCSDVersion;
  unsigned int OSPlatformId;
  unsigned int ImageSubsystem;
  unsigned int ImageSubsystemMajorVersion;
  unsigned int ImageSubsystemMinorVersion;
  unsigned int ImageProcessAffinityMask;
  unsigned int GdiHandleBuffer[34];
  void (__stdcall *PostProcessInitRoutine)();
  void *TlsExpansionBitmap;
  unsigned int TlsExpansionBitmapBits[32];
  unsigned int SessionId;
  void *AppCompatInfo;
  _UNICODE_STRING CSDVersion;
};

/* 349 */
struct _GDI_TEB_BATCH
{
  unsigned int Offset;
  unsigned int HDC;
  unsigned int Buffer[310];
};

/* 350 */
struct __declspec(align(4)) _Wx86ThreadState
{
  unsigned int *CallBx86Eip;
  void *DeallocationCpu;
  unsigned __int8 UseKnownWx86Dll;
  char OleStubInvoked;
};

/* 351 */
struct _TEB
{
  _NT_TIB NtTib;
  void *EnvironmentPointer;
  _CLIENT_ID ClientId;
  void *ActiveRpcHandle;
  void *ThreadLocalStoragePointer;
  _PEB *ProcessEnvironmentBlock;
  unsigned int LastErrorValue;
  unsigned int CountOfOwnedCriticalSections;
  void *CsrClientThread;
  void *Win32ThreadInfo;
  unsigned int User32Reserved[26];
  unsigned int UserReserved[5];
  void *WOW32Reserved;
  unsigned int CurrentLocale;
  unsigned int FpSoftwareStatusRegister;
  void *SystemReserved1[54];
  int ExceptionCode;
  unsigned __int8 SpareBytes1[44];
  _GDI_TEB_BATCH GdiTebBatch;
  _CLIENT_ID RealClientId;
  void *GdiCachedProcessHandle;
  unsigned int GdiClientPID;
  unsigned int GdiClientTID;
  void *GdiThreadLocalInfo;
  unsigned int Win32ClientInfo[62];
  void *glDispatchTable[233];
  unsigned int glReserved1[29];
  void *glReserved2;
  void *glSectionInfo;
  void *glSection;
  void *glTable;
  void *glCurrentRC;
  void *glContext;
  unsigned int LastStatusValue;
  _UNICODE_STRING StaticUnicodeString;
  unsigned __int16 StaticUnicodeBuffer[261];
  void *DeallocationStack;
  void *TlsSlots[32];
  _LIST_ENTRY TlsLinks;
  void *Vdm;
  void *ReservedForNtRpc;
  void *DbgSsReserved[2];
  unsigned int HardErrorsAreDisabled;
  void *Instrumentation[16];
  void *WinSockData;
  unsigned int GdiBatchCount;
  unsigned __int8 InDbgPrint;
  unsigned __int8 SpareB1;
  unsigned __int8 SpareB2;
  unsigned __int8 SpareB3;
  unsigned int Spare3;
  void *ReservedForPerf;
  void *ReservedForOle;
  unsigned int WaitingOnLoaderLock;
  _Wx86ThreadState Wx86Thread;
  void **TlsExpansionSlots;
  unsigned int ImpersonationLocale;
  unsigned int IsImpersonating;
  void *NlsCache;
};

/* 352 */
struct _THREAD_BASIC_INFORMATION
{
  int ExitStatus;
  _TEB *TebBaseAddress;
  _CLIENT_ID ClientId;
  unsigned int AffinityMask;
  int Priority;
  int BasePriority;
};

/* 353 */
struct HGLRC__
{
  int unused;
};

/* 354 */
struct fd_set
{
  unsigned int fd_count;
  unsigned int fd_array[64];
};

/* 355 */
struct $047E20FD0346076F773222AFA4F6B179
{
  unsigned int reserved05[21];
  unsigned int luminance;
  unsigned int chrominance;
  unsigned int colorKey;
  unsigned int offset;
  unsigned int sizeIn;
  unsigned int pointIn;
  unsigned int duDx;
  unsigned int dvDy;
  unsigned int pointOut;
  unsigned int sizeOut;
  unsigned int format;
};

/* 356 */
struct Nv07aTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[6];
  unsigned int StopOverlay[2];
  unsigned int Reserved01[22];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved02[6];
  unsigned int SetContextDmaOverlay[2];
  unsigned int Reserved03[151];
  $047E20FD0346076F773222AFA4F6B179 SetOverlay[2];
  unsigned int SetOverlayPointOutA;
  unsigned int SetOverlayLuminanceA;
  unsigned int SetOverlayChrominanceA;
  unsigned int Reserved04[1725];
};

/* 357 */
struct HRGN__
{
  int unused;
};

/* 358 */
struct __cppobj D3DPixelContainer : D3DResource
{
  unsigned int Format;
  unsigned int Size;
};

/* 359 */
struct __cppobj D3DBaseTexture : D3DPixelContainer
{
};

/* 360 */
struct _NLSTABLEINFO
{
  _CPTABLEINFO OemTableInfo;
  _CPTABLEINFO AnsiTableInfo;
  unsigned __int16 *UpperCaseTable;
  unsigned __int16 *LowerCaseTable;
};

/* 361 */
struct _DSFX_ECHO_STEREO_PARAMS
{
  _DSFX_ECHO_STEREO_STATE State;
  unsigned int dwGain;
};

/* 362 */
struct __unaligned __declspec(align(2)) tWAVEFORMATEX
{
  unsigned __int16 wFormatTag;
  unsigned __int16 nChannels;
  unsigned int nSamplesPerSec;
  unsigned int nAvgBytesPerSec;
  unsigned __int16 nBlockAlign;
  unsigned __int16 wBitsPerSample;
  unsigned __int16 cbSize;
};

/* 363 */
struct xbox_adpcmwaveformat_tag
{
  tWAVEFORMATEX wfx;
  unsigned __int16 wSamplesPerBlock;
};

/* 364 */
struct _GENERIC_MAPPING
{
  unsigned int GenericRead;
  unsigned int GenericWrite;
  unsigned int GenericExecute;
  unsigned int GenericAll;
};

/* 365 */
struct _SYSTEM_OBJECTTYPE_INFORMATION
{
  unsigned int NextEntryOffset;
  unsigned int NumberOfObjects;
  unsigned int NumberOfHandles;
  unsigned int TypeIndex;
  unsigned int InvalidAttributes;
  _GENERIC_MAPPING GenericMapping;
  unsigned int ValidAccessMask;
  unsigned int PoolType;
  unsigned __int8 SecurityRequired;
  unsigned __int8 WaitableObject;
  _STRING TypeName;
};

/* 366 */
struct $D36DC4A6F97BC7AD51E066F89FAF2AB2
{
  unsigned int Settable;
  unsigned int Tag;
};

/* 367 */
struct $A1BAA8A612415EB7313C4A3F2614A99E
{
  unsigned int CommittedSize;
  void *FirstBlock;
};

/* 368 */
union $841335B57E6E4F7CE4830FE8B57586D9
{
  $D36DC4A6F97BC7AD51E066F89FAF2AB2 s1;
  $A1BAA8A612415EB7313C4A3F2614A99E s2;
};

/* 369 */
struct _RTL_HEAP_ENTRY
{
  unsigned int Size;
  unsigned __int16 Flags;
  unsigned __int16 AllocatorBackTraceIndex;
  $841335B57E6E4F7CE4830FE8B57586D9 u;
};

/* 370 */
struct _DSEFFECTMAP
{
  void *lpvCodeSegment;
  unsigned int dwCodeSize;
  void *lpvStateSegment;
  unsigned int dwStateSize;
  void *lpvYMemorySegment;
  unsigned int dwYMemorySize;
  void *lpvScratchSegment;
  unsigned int dwScratchSize;
};

/* 371 */
struct _DSEFFECTIMAGEDESC
{
  unsigned int dwEffectCount;
  unsigned int dwTotalScratchSize;
  _DSEFFECTMAP aEffectMaps[1];
};

/* 372 */
struct __cppobj IDirectXFileBinary : IDirectXFileObject
{
};

/* 373 */
struct /*VFT*/ IDirectXFileBinary_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *GetName)(IDirectXFileObject *this, char *, unsigned int *);
  int (__stdcall *GetId)(IDirectXFileObject *this, _GUID *);
  int (__stdcall *GetSize)(IDirectXFileBinary *this, unsigned int *);
  int (__stdcall *GetMimeType)(IDirectXFileBinary *this, const char **);
  int (__stdcall *Read)(IDirectXFileBinary *this, void *, unsigned int, unsigned int *);
};

/* 374 */
struct _SECURITY_TOKEN_PROXY_DATA
{
  unsigned int Length;
  _PROXY_CLASS ProxyClass;
  _UNICODE_STRING PathInfo;
  unsigned int ContainerMask;
  unsigned int ObjectMask;
};

/* 375 */
struct __declspec(align(4)) _KMUTANT
{
  _DISPATCHER_HEADER Header;
  _LIST_ENTRY MutantListEntry;
  _KTHREAD *OwnerThread;
  unsigned __int8 Abandoned;
};

/* 376 */
struct Nv052Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage;
  unsigned int Reserved01[94];
  unsigned int SetFormat;
  unsigned int SetOffset;
  unsigned int Reserved02[1854];
};

/* 377 */
struct Nv053Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaColor;
  unsigned int SetContextDmaZeta;
  unsigned int Reserved01[91];
  unsigned int SetClipHorizontal;
  unsigned int SetClipVertical;
  unsigned int SetFormat;
  unsigned int SetClipSize;
  unsigned int SetPitch;
  unsigned int SetOffsetColor;
  unsigned int SetOffsetZeta;
  unsigned int Reserved02[1851];
};

/* 378 */
struct _FLOAT128
{
  __int64 LowPart;
  __int64 HighPart;
};

/* 379 */
struct $FBC66EAC05680F83721AC9CD3CC76218
{
  unsigned __int8 BaseMid;
  unsigned __int8 Flags1;
  unsigned __int8 Flags2;
  unsigned __int8 BaseHi;
};

/* 380 */
struct $A3BAC9569453E46653D4C53B8339026E
{
  unsigned __int32 BaseMid : 8;
  unsigned __int32 Type : 5;
  unsigned __int32 Dpl : 2;
  unsigned __int32 Pres : 1;
  unsigned __int32 LimitHi : 4;
  unsigned __int32 Sys : 1;
  unsigned __int32 Reserved_0 : 1;
  unsigned __int32 Default_Big : 1;
  unsigned __int32 Granularity : 1;
  unsigned __int32 BaseHi : 8;
};

/* 381 */
union $FD960E9338373C28903161EF2E75E310
{
  $FBC66EAC05680F83721AC9CD3CC76218 Bytes;
  $A3BAC9569453E46653D4C53B8339026E Bits;
};

/* 382 */
struct _LDT_ENTRY
{
  unsigned __int16 LimitLow;
  unsigned __int16 BaseLow;
  $FD960E9338373C28903161EF2E75E310 HighWord;
};

/* 383 */
struct _RTL_RELATIVE_NAME
{
  _STRING RelativeName;
  void *ContainingDirectory;
};

/* 384 */
struct __declspec(align(4)) _SYSTEM_SET_TIME_ADJUST_INFORMATION
{
  unsigned int TimeAdjustment;
  unsigned __int8 Enable;
};

/* 385 */
struct HKL__
{
  int unused;
};

/* 386 */
struct HWND__
{
  int unused;
};

/* 387 */
struct _D3DPRESENT_PARAMETERS_
{
  unsigned int BackBufferWidth;
  unsigned int BackBufferHeight;
  _D3DFORMAT BackBufferFormat;
  unsigned int BackBufferCount;
  unsigned int MultiSampleType;
  _D3DSWAPEFFECT SwapEffect;
  HWND__ *hDeviceWindow;
  int Windowed;
  int EnableAutoDepthStencil;
  _D3DFORMAT AutoDepthStencilFormat;
  unsigned int Flags;
  unsigned int FullScreen_RefreshRateInHz;
  unsigned int FullScreen_PresentationInterval;
};

/* 388 */
struct $98DC74700006FF6C48411D0D6D66C036
{
  __int16 DataLength;
  __int16 TotalLength;
};

/* 389 */
union $34CC82D21542D15203F14CA611112B1C
{
  $98DC74700006FF6C48411D0D6D66C036 s1;
  unsigned int Length;
};

/* 390 */
struct $3C08E6DE03C606518A54683476EDD482
{
  __int16 Type;
  __int16 DataInfoOffset;
};

/* 391 */
union $64B55CC1D90D38D294D02FCF5E34C92D
{
  $3C08E6DE03C606518A54683476EDD482 s2;
  unsigned int ZeroInit;
};

/* 392 */
union $32BC9395C70A0F4CF1DB3A5B432C00E6
{
  _CLIENT_ID ClientId;
  long double DoNotUseThisField;
};

/* 393 */
union $DFDBDD63C2587FA282FAD6CEC707ED02
{
  unsigned int ClientViewSize;
  unsigned int CallbackId;
};

/* 394 */
struct _PORT_MESSAGE
{
  $34CC82D21542D15203F14CA611112B1C u1;
  $64B55CC1D90D38D294D02FCF5E34C92D u2;
  $32BC9395C70A0F4CF1DB3A5B432C00E6 ___u2;
  unsigned int MessageId;
  $DFDBDD63C2587FA282FAD6CEC707ED02 ___u4;
};

/* 395 */
struct HWINSTA__
{
  int unused;
};

/* 396 */
struct _POINTL
{
  int x;
  int y;
};

/* 397 */
struct Nv083Typedef
{
  unsigned int Reserved00[1984];
};

/* 398 */
struct _RTL_DRIVE_LETTER_CURDIR
{
  unsigned __int16 Flags;
  unsigned __int16 Length;
  unsigned int TimeStamp;
  _STRING DosPath;
};

/* 399 */
struct __cppobj _DS3DBUFFER
{
  unsigned int dwSize;
  D3DXVECTOR3 vPosition;
  D3DXVECTOR3 vVelocity;
  unsigned int dwInsideConeAngle;
  unsigned int dwOutsideConeAngle;
  D3DXVECTOR3 vConeOrientation;
  int lConeOutsideVolume;
  float flMinDistance;
  float flMaxDistance;
  unsigned int dwMode;
};

/* 400 */
struct $DA753B4D80B69BEF66724A19E1392802
{
  unsigned __int8 s_b1;
  unsigned __int8 s_b2;
  unsigned __int8 s_b3;
  unsigned __int8 s_b4;
};

/* 401 */
struct $CC608A129C88F312E26B04B0A6BA5EDC
{
  unsigned __int16 s_w1;
  unsigned __int16 s_w2;
};

/* 402 */
union $23469E64EC1F015593EB35291F99F163
{
  $DA753B4D80B69BEF66724A19E1392802 S_un_b;
  $CC608A129C88F312E26B04B0A6BA5EDC S_un_w;
  unsigned int S_addr;
};

/* 403 */
struct in_addr
{
  $23469E64EC1F015593EB35291F99F163 S_un;
};

/* 404 */
struct _XMETAL_PushBuffer
{
  unsigned int *m_pPut;
  unsigned int *m_pThreshold;
};

/* 405 */
struct _IMAGE_DATA_DIRECTORY
{
  unsigned int VirtualAddress;
  unsigned int Size;
};

/* 406 */
struct _IMAGE_OPTIONAL_HEADER64
{
  unsigned __int16 Magic;
  unsigned __int8 MajorLinkerVersion;
  unsigned __int8 MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned __int64 ImageBase;
  unsigned int SectionAlignment;
  unsigned int FileAlignment;
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
  unsigned __int16 MajorImageVersion;
  unsigned __int16 MinorImageVersion;
  unsigned __int16 MajorSubsystemVersion;
  unsigned __int16 MinorSubsystemVersion;
  unsigned int Win32VersionValue;
  unsigned int SizeOfImage;
  unsigned int SizeOfHeaders;
  unsigned int CheckSum;
  unsigned __int16 Subsystem;
  unsigned __int16 DllCharacteristics;
  unsigned __int64 SizeOfStackReserve;
  unsigned __int64 SizeOfStackCommit;
  unsigned __int64 SizeOfHeapReserve;
  unsigned __int64 SizeOfHeapCommit;
  unsigned int LoaderFlags;
  unsigned int NumberOfRvaAndSizes;
  _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/* 407 */
struct _FILE_MODE_INFORMATION
{
  unsigned int Mode;
};

/* 408 */
struct _DRIVER_VERIFIER_THUNK_PAIRS
{
  unsigned int (__stdcall *PristineRoutine)(void *);
  unsigned int (__stdcall *NewRoutine)(void *);
};

/* 409 */
struct _D3DXEFFECT_DESC
{
  unsigned int Parameters;
  unsigned int Techniques;
  unsigned int Usage;
};

/* 410 */
const struct _s__RTTIBaseClassDescriptor
{
  _TypeDescriptor *pTypeDescriptor;
  unsigned int numContainedBases;
  _PMD where;
  unsigned int attributes;
};

/* 411 */
const struct __unaligned __declspec(align(1)) _s__RTTIBaseClassArray
{
  const _s__RTTIBaseClassDescriptor *arrayOfBaseClassDescriptors[];
};

/* 412 */
struct _s__RTTIClassHierarchyDescriptor
{
  unsigned int signature;
  unsigned int attributes;
  unsigned int numBaseClasses;
  const _s__RTTIBaseClassArray *pBaseClassArray;
};

/* 413 */
struct _s__RTTICompleteObjectLocator
{
  unsigned int signature;
  unsigned int offset;
  unsigned int cdOffset;
  _TypeDescriptor *pTypeDescriptor;
  const _s__RTTIClassHierarchyDescriptor *pClassDescriptor;
};

/* 414 */
struct $9F5F1B3B62BF9BBBAE65D06E22EF4EC0
{
  unsigned __int16 Linenumber;
  unsigned __int16 Size;
};

/* 415 */
union $C90923EEB0A36753350BF8A47014594B
{
  $9F5F1B3B62BF9BBBAE65D06E22EF4EC0 LnSz;
  unsigned int TotalSize;
};

/* 416 */
struct $0267EABC91DDCC621C08D74192F36445
{
  unsigned int PointerToLinenumber;
  unsigned int PointerToNextFunction;
};

/* 417 */
struct $72A87AE534D1DC1A4B7CCA877B33F564
{
  unsigned __int16 Dimension[4];
};

/* 418 */
union $76396D72966773C3FF0DBA692E46B826
{
  $0267EABC91DDCC621C08D74192F36445 Function;
  $72A87AE534D1DC1A4B7CCA877B33F564 Array;
};

/* 419 */
struct __unaligned __declspec(align(2)) $56B3BA2D9264FCC6EC9A54E59A2E1203
{
  unsigned int TagIndex;
  $C90923EEB0A36753350BF8A47014594B Misc;
  $76396D72966773C3FF0DBA692E46B826 FcnAry;
  unsigned __int16 TvIndex;
};

/* 420 */
struct $F3F6E28D750B746B39E0122021893DE4
{
  unsigned __int8 Name[18];
};

/* 421 */
struct __declspec(align(2)) $B69EF010230D8C752DD439EEE360318E
{
  unsigned int Length;
  unsigned __int16 NumberOfRelocations;
  unsigned __int16 NumberOfLinenumbers;
  unsigned int CheckSum;
  __int16 Number;
  unsigned __int8 Selection;
};

/* 422 */
union _IMAGE_AUX_SYMBOL
{
  $56B3BA2D9264FCC6EC9A54E59A2E1203 Sym;
  $F3F6E28D750B746B39E0122021893DE4 File;
  $B69EF010230D8C752DD439EEE360318E Section;
};

/* 423 */
struct _FILE_PIPE_LOCAL_INFORMATION
{
  unsigned int NamedPipeType;
  unsigned int NamedPipeConfiguration;
  unsigned int MaximumInstances;
  unsigned int CurrentInstances;
  unsigned int InboundQuota;
  unsigned int ReadDataAvailable;
  unsigned int OutboundQuota;
  unsigned int WriteQuotaAvailable;
  unsigned int NamedPipeState;
  unsigned int NamedPipeEnd;
};

/* 424 */
struct _FILETIME
{
  unsigned int dwLowDateTime;
  unsigned int dwHighDateTime;
};

/* 425 */
struct _BY_HANDLE_FILE_INFORMATION
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int dwVolumeSerialNumber;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
  unsigned int nNumberOfLinks;
  unsigned int nFileIndexHigh;
  unsigned int nFileIndexLow;
};

/* 426 */
struct _STRING32
{
  unsigned __int16 Length;
  unsigned __int16 MaximumLength;
  unsigned int Buffer;
};

/* 427 */
struct _UNICODE_PREFIX_TABLE_ENTRY
{
  __int16 NodeTypeCode;
  __int16 NameLength;
  _UNICODE_PREFIX_TABLE_ENTRY *NextPrefixTree;
  _UNICODE_PREFIX_TABLE_ENTRY *CaseMatch;
  _RTL_SPLAY_LINKS Links;
  _UNICODE_STRING *Prefix;
};

/* 428 */
struct $342B98806AFD0321DE23AAC854006C0F
{
  unsigned int point;
  unsigned int size;
};

/* 429 */
struct $61E1D07651B909B7894A48742311B8D5
{
  unsigned int point0;
  unsigned int point1;
};

/* 430 */
struct Nv04bTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextSurface;
  unsigned int Reserved01[90];
  unsigned int SetOperation;
  unsigned int SetColorFormat;
  unsigned int SetMonochromeFormat;
  unsigned int Reserved02[61];
  unsigned int Color1A;
  $342B98806AFD0321DE23AAC854006C0F UnclippedRectangle[64];
  unsigned int Reserved03[125];
  unsigned int ClipPoint0B;
  unsigned int ClipPoint1B;
  unsigned int Color1B;
  $61E1D07651B909B7894A48742311B8D5 ClippedRectangle[64];
  unsigned int Reserved04[123];
  unsigned int ClipPoint0C;
  unsigned int ClipPoint1C;
  unsigned int Color1C;
  unsigned int SizeC;
  unsigned int PointC;
  unsigned int MonochromeColor1C[128];
  unsigned int Reserved05[122];
  unsigned int ClipPoint0D;
  unsigned int ClipPoint1D;
  unsigned int Color1D;
  unsigned int SizeInD;
  unsigned int SizeOutD;
  unsigned int PointD;
  unsigned int MonochromeColor1D[128];
  unsigned int Reserved06[121];
  unsigned int ClipPoint0E;
  unsigned int ClipPoint1E;
  unsigned int Color0E;
  unsigned int Color1E;
  unsigned int SizeInE;
  unsigned int SizeOutE;
  unsigned int PointE;
  unsigned int MonochromeColor01E[128];
  unsigned int Reserved07[640];
};

/* 431 */
volatile struct Nv04ControlPio
{
  unsigned int Reserved00[3];
  unsigned __int16 Free;
  unsigned __int16 Zero[3];
  unsigned int Reserved01[58];
};

/* 432 */
volatile struct Nv000Typedef
{
  unsigned int Reserved00[1984];
};

/* 433 */
volatile struct Nv001Typedef
{
  unsigned int Reserved00[1984];
};

/* 434 */
volatile struct Nv002Typedef
{
  unsigned int Reserved00[1984];
};

/* 435 */
volatile struct Nv003Typedef
{
  unsigned int Reserved00[1984];
};

/* 436 */
struct $3CE0C3254588E91A04747A534C068EA8
{
  unsigned int nanoseconds[2];
};

/* 437 */
volatile struct Nv004Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int StopTransfer;
  unsigned int Reserved00[29];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[95];
  $3CE0C3254588E91A04747A534C068EA8 SetAlarmTime;
  unsigned int Reserved02[1];
  unsigned int SetAlarmNotify;
  unsigned int Reserved03[1852];
};

/* 438 */
volatile struct _Nv005Typedef
{
  unsigned int Reserved00[1984];
};

/* 439 */
volatile struct Nv012Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[95];
  unsigned int SetBeta1d31;
  unsigned int Reserved02[1855];
};

/* 440 */
volatile struct Nv017Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[95];
  unsigned int SetColorFormat;
  unsigned int SetColor;
  unsigned int Reserved02[1854];
};

/* 441 */
volatile struct Nv018Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[95];
  unsigned int SetColorFormat;
  unsigned int SetMonochromeFormat;
  unsigned int SetMonochromeShape;
  unsigned int Reserved02[1];
  unsigned int SetMonochromeColor0;
  unsigned int SetMonochromeColor1;
  unsigned int SetMonochromePattern0;
  unsigned int SetMonochromePattern1;
  unsigned int Reserved03[1848];
};

/* 442 */
volatile struct Nv019Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[95];
  unsigned int SetPoint;
  unsigned int SetSize;
  unsigned int Reserved02[1854];
};

/* 443 */
struct $2D14CC38D66B741D81C7E1D2F7BD294D
{
  int point0X;
  int point0Y;
  int point1X;
  int point1Y;
};

/* 444 */
struct $CDF557A927ED2BFF93B09908D4EFCA76
{
  int x;
  int y;
};

/* 445 */
struct $871189948081013A7AC680B73DB917F1
{
  unsigned int color;
  unsigned int point;
};

/* 446 */
volatile struct Nv01cTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextClipRectangle;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextSurface;
  unsigned int Reserved01[89];
  unsigned int SetOperation;
  unsigned int SetColorFormat;
  unsigned int Color;
  unsigned int Reserved02[62];
  $61E1D07651B909B7894A48742311B8D5 Lin[16];
  $2D14CC38D66B741D81C7E1D2F7BD294D Lin32[8];
  unsigned int PolyLin[32];
  $CDF557A927ED2BFF93B09908D4EFCA76 PolyLin32[16];
  $871189948081013A7AC680B73DB917F1 ColorPolyLin[16];
  unsigned int Reserved03[1632];
};

/* 447 */
struct $CE134F3595A3181E123B9C5F21D5B5BE
{
  unsigned int color;
  unsigned int point0;
  unsigned int point1;
  unsigned int point2;
};

/* 448 */
volatile struct Nv01dTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextClipRectangle;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextSurface;
  unsigned int Reserved01[89];
  unsigned int SetOperation;
  unsigned int SetColorFormat;
  unsigned int Color;
  unsigned int Reserved02[2];
  unsigned int TrianglePoint0;
  unsigned int TrianglePoint1;
  unsigned int TrianglePoint2;
  unsigned int Reserved03[1];
  int Triangle32Point0X;
  int Triangle32Point0Y;
  int Triangle32Point1X;
  int Triangle32Point1Y;
  int Triangle32Point2X;
  int Triangle32Point2Y;
  unsigned int Reserved04[50];
  unsigned int Trimesh[32];
  $CDF557A927ED2BFF93B09908D4EFCA76 Trimesh32[16];
  $CE134F3595A3181E123B9C5F21D5B5BE ColorTriangle[8];
  $871189948081013A7AC680B73DB917F1 ColorTrimesh[16];
  unsigned int Reserved05[1664];
};

/* 449 */
volatile struct Nv01eTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextClipRectangle;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextSurface;
  unsigned int Reserved01[89];
  unsigned int SetOperation;
  unsigned int SetColorFormat;
  unsigned int Color;
  unsigned int Reserved02[62];
  $342B98806AFD0321DE23AAC854006C0F Rectangle[16];
  unsigned int Reserved03[1760];
};

/* 450 */
volatile struct Nv01fTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextColorKey;
  unsigned int SetContextClipRectangle;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextSurfaceSource;
  unsigned int SetContextSurfaceDestin;
  unsigned int Reserved01[87];
  unsigned int SetOperation;
  unsigned int ControlPointIn;
  unsigned int ControlPointOut;
  unsigned int Size;
  unsigned int Reserved02[1853];
};

/* 451 */
volatile struct Nv021Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextColorKey;
  unsigned int SetContextClipRectangle;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextSurface;
  unsigned int Reserved01[88];
  unsigned int SetOperation;
  unsigned int SetColorFormat;
  unsigned int Point;
  unsigned int SizeOut;
  unsigned int SizeIn;
  unsigned int Reserved02[60];
  unsigned int Color[32];
  unsigned int Reserved03[1760];
};

/* 452 */
volatile struct Nv030Typedef
{
  unsigned int Reserved00[1984];
};

/* 453 */
volatile struct Nv036Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextColorKey;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextSurface;
  unsigned int Reserved01[89];
  unsigned int SetOperation;
  unsigned int SetColorFormat;
  unsigned int SizeIn;
  unsigned int DeltaDxDu;
  unsigned int DeltaDyDv;
  unsigned int ClipPoint;
  unsigned int ClipSize;
  unsigned int Point12d4;
  unsigned int Reserved02[57];
  unsigned int Color[1792];
};

/* 454 */
volatile struct Nv037Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextSurface;
  unsigned int Reserved01[90];
  unsigned int SetColorFormat;
  unsigned int SetOperation;
  unsigned int ClipPoint;
  unsigned int ClipSize;
  unsigned int ImageOutPoint;
  unsigned int ImageOutSize;
  unsigned int DeltaDuDx;
  unsigned int DeltaDvDy;
  unsigned int Reserved02[56];
  unsigned int ImageInSize;
  unsigned int ImageInPitch;
  unsigned int ImageInOffset;
  unsigned int ImageInPoint;
  unsigned int Reserved03[1788];
};

/* 455 */
volatile struct Nv038Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaOverlay;
  unsigned int SetContextDmaImageIn;
  unsigned int SetContextDmaImageOut;
  unsigned int Reserved01[92];
  unsigned int ImageOutPoint;
  unsigned int ImageOutSize;
  unsigned int ImageOutFormat;
  unsigned int ImageOutOffset;
  unsigned int ImageInDeltaDuDx;
  unsigned int ImageInDeltaDvDy;
  unsigned int ImageInSize;
  unsigned int ImageInFormat;
  unsigned int ImageInOffset;
  unsigned int ImageInPoint;
  unsigned int OverlayDeltaDuDx;
  unsigned int OverlayDeltaDvDy;
  unsigned int OverlaySize;
  unsigned int OverlayFormat;
  unsigned int OverlayOffset;
  unsigned int OverlayPoint;
  unsigned int Reserved02[1840];
};

/* 456 */
volatile struct Nv039Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaBufferIn;
  unsigned int SetContextDmaBufferOut;
  unsigned int Reserved01[96];
  unsigned int OffsetIn;
  unsigned int OffsetOut;
  int PitchIn;
  int PitchOut;
  unsigned int LineLengthIn;
  unsigned int LineCount;
  unsigned int Format;
  unsigned int BufferNotify;
  unsigned int Reserved02[1845];
};

/* 457 */
volatile struct Nv03dTypedef
{
  unsigned int Reserved00[1984];
};

/* 458 */
volatile struct Nv03eTypedef
{
  unsigned int Reserved00[1984];
};

/* 459 */
volatile struct Nv03fTypedef
{
  unsigned int Reserved00[1984];
};

/* 460 */
volatile struct Nv040Typedef
{
  unsigned int Reserved00[1984];
};

/* 461 */
struct $028C5CCD3663C88A1EC6FC7DD767E41D
{
  unsigned int offset;
  unsigned int size;
  unsigned int format;
};

/* 462 */
volatile struct Nv041Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int StopTransfer;
  unsigned int Reserved00[29];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage[2];
  unsigned int SetContextDmaLut;
  unsigned int SetContextDmaCursor;
  unsigned int Reserved01[91];
  $028C5CCD3663C88A1EC6FC7DD767E41D SetImage[2];
  unsigned int GetImageOffsetNotify[2];
  unsigned int SetLut[2];
  unsigned int SetCursorImage[2];
  unsigned int SetCursorPoint[2];
  unsigned int SetEncoder[2];
  unsigned int Reserved02[1840];
};

/* 463 */
volatile struct Nv042Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImageSource;
  unsigned int SetContextDmaImageDestin;
  unsigned int Reserved01[93];
  unsigned int SetColorFormat;
  unsigned int SetPitch;
  unsigned int SetOffsetSource;
  unsigned int SetOffsetDestin;
  unsigned int Reserved02[1852];
};

/* 464 */
volatile struct Nv043Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[95];
  unsigned int SetRop5;
  unsigned int Reserved02[1855];
};

/* 465 */
volatile struct Nv044Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[95];
  unsigned int SetColorFormat;
  unsigned int SetMonochromeFormat;
  unsigned int SetMonochromeShape;
  unsigned int SetPatternSelect;
  unsigned int SetMonochromeColor0;
  unsigned int SetMonochromeColor1;
  unsigned int SetMonochromePattern0;
  unsigned int SetMonochromePattern1;
  unsigned int Reserved02[56];
  unsigned int SetPatternY8[16];
  unsigned int Reserved03[48];
  unsigned int SetPatternR5G6B5[32];
  unsigned int Reserved04[32];
  unsigned int SetPatternX1R5G5B5[32];
  unsigned int Reserved05[32];
  unsigned int SetPatternX8R8G8B8[64];
  unsigned int Reserved06[1536];
};

/* 466 */
volatile struct Nv045Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int StopTransfer;
  unsigned int Reserved00[29];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage[2];
  unsigned int SetContextDmaLut;
  unsigned int SetContextDmaCursor;
  unsigned int Reserved01[91];
  $028C5CCD3663C88A1EC6FC7DD767E41D SetImage[2];
  unsigned int GetImageOffsetNotify[2];
  unsigned int SetLut[2];
  unsigned int SetCursorImage[2];
  unsigned int SetCursorPoint[2];
  unsigned int SetEncoder[2];
  unsigned int Reserved02[1840];
};

/* 467 */
struct $44452A6C4C3C86E3C29CF4F826A2C8BD
{
  unsigned int offset;
  unsigned int format;
};

/* 468 */
struct $C95068624C02DDE66BA29BD6EECDC638
{
  unsigned int imageSize;
  unsigned int horizontalBlank;
  unsigned int horizontalSync;
  unsigned int verticalBlank;
  unsigned int verticalSync;
  unsigned int totalSize;
  unsigned int pixelClock;
  unsigned int format;
};

/* 469 */
volatile struct Nv046Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int StopImage[2];
  unsigned int StopLut[2];
  unsigned int StopCursorImage[2];
  unsigned int StopDac[2];
  unsigned int Reserved00[22];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage[2];
  unsigned int SetContextDmaLut[2];
  unsigned int SetContextDmaCursor[2];
  unsigned int Reserved01[88];
  unsigned int GetOffset;
  $44452A6C4C3C86E3C29CF4F826A2C8BD SetImage[2];
  $44452A6C4C3C86E3C29CF4F826A2C8BD SetLut[2];
  $44452A6C4C3C86E3C29CF4F826A2C8BD SetCursorImage[2];
  unsigned int SetCursorPoint;
  unsigned int Reserved03[3];
  $C95068624C02DDE66BA29BD6EECDC638 SetDac[2];
  unsigned int Reserved04[1824];
};

/* 470 */
struct $1C97D03CEFA54FA98F7BF3327627AD56
{
  unsigned int reserved05[23];
  unsigned int colorKey;
  unsigned int offset;
  unsigned int sizeIn;
  unsigned int pointIn;
  unsigned int dsDx;
  unsigned int dtDy;
  unsigned int pointOut;
  unsigned int sizeOut;
  unsigned int format;
};

/* 471 */
volatile struct Nv047Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[6];
  unsigned int StopOverlay[2];
  unsigned int Reserved01[22];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved02[6];
  unsigned int SetContextDmaOverlay[2];
  unsigned int Reserved03[86];
  unsigned int GetOffset;
  unsigned int Reserved04[64];
  $1C97D03CEFA54FA98F7BF3327627AD56 SetOverlay[2];
  unsigned int SetOverlayPointOutA;
  unsigned int Reserved06[1727];
};

/* 472 */
struct $05C4B1FFB79A7A528CCA44AEED5A530A
{
  unsigned int imageSize;
  unsigned int horizontalSync;
  unsigned int verticalSync;
  unsigned int totalSize;
  unsigned int pixelClock;
  unsigned int format;
};

/* 473 */
volatile struct Nv049Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int StopImage[2];
  unsigned int StopLut[2];
  unsigned int StopCursorImage[2];
  unsigned int StopDac[2];
  unsigned int Reserved00[22];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage[2];
  unsigned int SetContextDmaLut[2];
  unsigned int SetContextDmaCursor[2];
  unsigned int Reserved01[88];
  unsigned int GetOffset;
  $44452A6C4C3C86E3C29CF4F826A2C8BD SetImage[2];
  $44452A6C4C3C86E3C29CF4F826A2C8BD SetLut[2];
  $44452A6C4C3C86E3C29CF4F826A2C8BD SetCursorImage[2];
  unsigned int SetCursorPoint;
  unsigned int Reserved03[3];
  $05C4B1FFB79A7A528CCA44AEED5A530A SetDac[2];
  unsigned int Reserved04[1828];
};

/* 474 */
struct $96E6B19A18C1125A56457644BA13F83C
{
  unsigned int point;
  unsigned int index;
};

/* 475 */
volatile struct Nv04aTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaFonts;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurface;
  unsigned int Reserved01[88];
  unsigned int SetOperation;
  unsigned int SetColorFormat;
  unsigned int SetMonochromeFormat;
  unsigned int Reserved02[61];
  unsigned int Color1A;
  $342B98806AFD0321DE23AAC854006C0F UnclippedRectangle[32];
  unsigned int Reserved03[61];
  unsigned int ClipPoint0B;
  unsigned int ClipPoint1B;
  unsigned int Color1B;
  $61E1D07651B909B7894A48742311B8D5 ClippedRectangle[32];
  unsigned int Reserved04[59];
  unsigned int ClipPoint0C;
  unsigned int ClipPoint1C;
  unsigned int Color1C;
  unsigned int SizeC;
  unsigned int PointC;
  unsigned int MonochromeColor1C[128];
  unsigned int Reserved05[121];
  unsigned int ClipPoint0E;
  unsigned int ClipPoint1E;
  unsigned int Color0E;
  unsigned int Color1E;
  unsigned int SizeInE;
  unsigned int SizeOutE;
  unsigned int PointE;
  unsigned int MonochromeColor01E[128];
  unsigned int Reserved06[124];
  unsigned int FontF;
  unsigned int ClipPoint0F;
  unsigned int ClipPoint1F;
  unsigned int Color1F;
  unsigned int CharacterColor1F[256];
  unsigned int Reserved07[252];
  unsigned int FontG;
  unsigned int ClipPoint0G;
  unsigned int ClipPoint1G;
  unsigned int Color1G;
  $96E6B19A18C1125A56457644BA13F83C CharacterColor1G[256];
};

/* 476 */
struct $EC6FA7A9D750E90DF39F97BEAB4D19C9
{
  unsigned int size;
  unsigned int offset;
  unsigned int format;
};

/* 477 */
struct $4F0BAFAF213F3201738413A1D36E1BF8
{
  unsigned int sizeIn;
  unsigned int sizeOut;
  unsigned int offset;
  unsigned int format;
};

/* 478 */
volatile struct Nv04dTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int StopTransferVbi;
  unsigned int StopTransferImage;
  unsigned int Reserved00[28];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaVbi[2];
  unsigned int SetContextDmaImage[2];
  unsigned int Reserved01[89];
  unsigned int SetImageConfig;
  unsigned int SetImageStartLine;
  $EC6FA7A9D750E90DF39F97BEAB4D19C9 SetVbi[2];
  unsigned int GetVbiOffsetNotify[2];
  $4F0BAFAF213F3201738413A1D36E1BF8 SetImage[2];
  unsigned int GetImageOffsetNotify[2];
  unsigned int Reserved02[1838];
};

/* 479 */
volatile struct Nv04fTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int StopTransfer;
  unsigned int Reserved00[29];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[95];
  unsigned int WriteSize;
  unsigned int WriteAddress;
  unsigned int WriteData;
  unsigned int ReadSize;
  unsigned int ReadAddress;
  unsigned int ReadGetDataNotify;
  unsigned int SetInterruptNotify;
  unsigned int Reserved02[1849];
};

/* 480 */
volatile struct Nv050Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int StopTransfer;
  unsigned int Reserved00[29];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[95];
  unsigned int WriteSize;
  unsigned int WriteAddress;
  unsigned int WriteData;
  unsigned int ReadSize;
  unsigned int ReadAddress;
  unsigned int ReadGetDataNotify;
  unsigned int SetInterruptNotify;
  unsigned int Reserved02[1849];
};

/* 481 */
volatile struct Nv051Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int StopTransfer;
  unsigned int Reserved00[29];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[95];
  unsigned int WriteSize;
  unsigned int WriteAddress;
  unsigned int WriteData;
  unsigned int ReadSize;
  unsigned int ReadAddress;
  unsigned int ReadGetDataNotify;
  unsigned int SetInterruptNotify;
  unsigned int Reserved02[1849];
};

/* 482 */
struct $3BD9BF489F9EB0C19E5A7346F8785EB6
{
  float sx;
  float sy;
  float sz;
  float rhw;
  unsigned int color;
  unsigned int specular;
  float tu;
  float tv;
};

/* 483 */
volatile struct Nv054Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaA;
  unsigned int SetContextDmaB;
  unsigned int SetContextSurfaces;
  unsigned int Reserved01[92];
  unsigned int ColorKey;
  unsigned int Offset;
  unsigned int Format;
  unsigned int Filter;
  unsigned int Blend;
  unsigned int Control;
  unsigned int FogColor;
  unsigned int Reserved02[57];
  $3BD9BF489F9EB0C19E5A7346F8785EB6 Tlvertex[16];
  unsigned int DrawPrimitive[64];
  unsigned int Reserved03[1600];
};

/* 484 */
struct $BFD6E1306C6B6003F418DB34622DE801
{
  float sx;
  float sy;
  float sz;
  float rhw;
  unsigned int color;
  unsigned int specular;
  float tu0;
  float tv0;
  float tu1;
  float tv1;
};

/* 485 */
volatile struct Nv055Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaA;
  unsigned int SetContextDmaB;
  unsigned int SetContextSurfaces;
  unsigned int Reserved01[94];
  unsigned int Offset[2];
  unsigned int Format[2];
  unsigned int Filter[2];
  unsigned int Combine0Alpha;
  unsigned int Combine0Color;
  unsigned int Reserved02[1];
  unsigned int Combine1Alpha;
  unsigned int Combine1Color;
  unsigned int CombineFactor;
  unsigned int Blend;
  unsigned int Control0;
  unsigned int Control1;
  unsigned int Control2;
  unsigned int FogColor;
  unsigned int Reserved03[45];
  $BFD6E1306C6B6003F418DB34622DE801 Tlmtvertex[8];
  unsigned int DrawPrimitive[48];
  unsigned int Reserved04[1664];
};

/* 486 */
volatile struct Nv057Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[95];
  unsigned int SetColorFormat;
  unsigned int SetColor;
  unsigned int Reserved02[1854];
};

/* 487 */
volatile struct Nv058Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage;
  unsigned int Reserved01[94];
  unsigned int SetColorFormat;
  unsigned int Reserved02[1];
  unsigned int SetImagePitch;
  unsigned int SetImageOffset;
  unsigned int Reserved03[1852];
};

/* 488 */
volatile struct Nv059Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage;
  unsigned int Reserved01[94];
  unsigned int SetColorFormat;
  unsigned int Reserved02[1];
  unsigned int SetImagePitch;
  unsigned int SetImageOffset;
  unsigned int Reserved03[1852];
};

/* 489 */
volatile struct Nv05aTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage;
  unsigned int Reserved01[94];
  unsigned int SetColorFormat;
  unsigned int Reserved02[1];
  unsigned int SetImagePitch;
  unsigned int SetImageOffset;
  unsigned int Reserved03[1852];
};

/* 490 */
volatile struct Nv05bTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage;
  unsigned int Reserved01[94];
  unsigned int SetColorFormat;
  unsigned int Reserved02[1];
  unsigned int NvDummy;
  unsigned int SetImageOffset;
  unsigned int Reserved03[1852];
};

/* 491 */
volatile struct Nv05cTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextClipRectangle;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurface;
  unsigned int Reserved01[88];
  unsigned int SetOperation;
  unsigned int SetColorFormat;
  unsigned int Color;
  unsigned int Reserved02[62];
  $61E1D07651B909B7894A48742311B8D5 Lin[16];
  $2D14CC38D66B741D81C7E1D2F7BD294D Lin32[8];
  unsigned int PolyLin[32];
  $CDF557A927ED2BFF93B09908D4EFCA76 PolyLin32[16];
  $871189948081013A7AC680B73DB917F1 ColorPolyLin[16];
  unsigned int Reserved03[1632];
};

/* 492 */
volatile struct Nv05dTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextClipRectangle;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurface;
  unsigned int Reserved01[88];
  unsigned int SetOperation;
  unsigned int SetColorFormat;
  unsigned int Color;
  unsigned int Reserved02[2];
  unsigned int TrianglePoint0;
  unsigned int TrianglePoint1;
  unsigned int TrianglePoint2;
  unsigned int Reserved03[1];
  int Triangle32Point0X;
  int Triangle32Point0Y;
  int Triangle32Point1X;
  int Triangle32Point1Y;
  int Triangle32Point2X;
  int Triangle32Point2Y;
  unsigned int Reserved04[50];
  unsigned int Trimesh[32];
  $CDF557A927ED2BFF93B09908D4EFCA76 Trimesh32[16];
  $CE134F3595A3181E123B9C5F21D5B5BE ColorTriangle[8];
  $871189948081013A7AC680B73DB917F1 ColorTrimesh[16];
  unsigned int Reserved05[1664];
};

/* 493 */
volatile struct Nv05eTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextClipRectangle;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurface;
  unsigned int Reserved01[88];
  unsigned int SetOperation;
  unsigned int SetColorFormat;
  unsigned int Color;
  unsigned int Reserved02[62];
  $342B98806AFD0321DE23AAC854006C0F Rectangle[16];
  unsigned int Reserved03[1760];
};

/* 494 */
volatile struct Nv05fTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextColorKey;
  unsigned int SetContextClipRectangle;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurfaces;
  unsigned int Reserved01[87];
  unsigned int SetOperation;
  unsigned int ControlPointIn;
  unsigned int ControlPointOut;
  unsigned int Size;
  unsigned int Reserved02[1853];
};

/* 495 */
volatile struct Nv060Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaLut;
  unsigned int SetContextColorKey;
  unsigned int SetContextClipRectangle;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurface;
  unsigned int Reserved01[143];
  unsigned int SetColorConversion;
  unsigned int SetOperation;
  unsigned int SetColorFormat;
  unsigned int IndexFormat;
  unsigned int LutOffset;
  unsigned int Point;
  unsigned int SizeOut;
  unsigned int SizeIn;
  unsigned int Indices[1792];
};

/* 496 */
volatile struct Nv062Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImageSource;
  unsigned int SetContextDmaImageDestin;
  unsigned int Reserved01[93];
  unsigned int SetColorFormat;
  unsigned int SetPitch;
  unsigned int SetOffsetSource;
  unsigned int SetOffsetDestin;
  unsigned int Reserved02[1852];
};

/* 497 */
volatile struct Nv063Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurface;
  unsigned int Reserved01[88];
  unsigned int SetColorConversion;
  unsigned int SetColorFormat;
  unsigned int SetOperation;
  unsigned int ClipPoint;
  unsigned int ClipSize;
  unsigned int ImageOutPoint;
  unsigned int ImageOutSize;
  unsigned int DsDx;
  unsigned int DtDy;
  unsigned int Reserved02[56];
  unsigned int ImageInSize;
  unsigned int ImageInFormat;
  unsigned int ImageInOffset;
  unsigned int ImageInPoint;
  unsigned int Reserved03[1788];
};

/* 498 */
volatile struct Nv064Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaLut;
  unsigned int SetContextColorKey;
  unsigned int SetContextClipRectangle;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurface;
  unsigned int Reserved01[143];
  unsigned int SetColorConversion;
  unsigned int SetOperation;
  unsigned int SetColorFormat;
  unsigned int IndexFormat;
  unsigned int LutOffset;
  unsigned int Point;
  unsigned int SizeOut;
  unsigned int SizeIn;
  unsigned int Indices[1792];
};

/* 499 */
volatile struct Nv065Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextColorKey;
  unsigned int SetContextClipRectangle;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurface;
  unsigned int Reserved01[86];
  unsigned int SetColorConversion;
  unsigned int SetOperation;
  unsigned int SetColorFormat;
  unsigned int Point;
  unsigned int SizeOut;
  unsigned int SizeIn;
  unsigned int Reserved02[60];
  unsigned int Color[1792];
};

/* 500 */
volatile struct _Nv066Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextColorKey;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurface;
  unsigned int Reserved01[87];
  unsigned int SetColorConversion;
  unsigned int SetOperation;
  unsigned int SetColorFormat;
  unsigned int SizeIn;
  unsigned int DxDs;
  unsigned int DyDt;
  unsigned int ClipPoint;
  unsigned int ClipSize;
  unsigned int Point12d4;
  unsigned int Reserved02[57];
  unsigned int Color[1792];
};

/* 501 */
volatile struct Nv067Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int StopImage[2];
  unsigned int StopLut[2];
  unsigned int StopCursorImage[2];
  unsigned int StopDac[2];
  unsigned int Reserved00[22];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage[2];
  unsigned int SetContextDmaLut[2];
  unsigned int SetContextDmaCursor[2];
  unsigned int Reserved01[88];
  unsigned int GetOffset;
  $44452A6C4C3C86E3C29CF4F826A2C8BD SetImage[2];
  $44452A6C4C3C86E3C29CF4F826A2C8BD SetLut[2];
  $44452A6C4C3C86E3C29CF4F826A2C8BD SetCursorImage[2];
  unsigned int SetCursorPoint;
  unsigned int Reserved03[3];
  $C95068624C02DDE66BA29BD6EECDC638 SetDac[2];
  unsigned int Reserved04[1824];
};

/* 502 */
volatile struct Nv06fTypedef
{
  unsigned int Reserved00[1984];
};

/* 503 */
volatile struct Nv072Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[95];
  unsigned int SetBetaFactor;
  unsigned int Reserved02[1855];
};

/* 504 */
volatile struct Nv076Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextColorKey;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurface;
  unsigned int Reserved01[88];
  unsigned int SetOperation;
  unsigned int SetColorFormat;
  unsigned int SizeIn;
  unsigned int DeltaDxDu;
  unsigned int DeltaDyDv;
  unsigned int ClipPoint;
  unsigned int ClipSize;
  unsigned int Point12d4;
  unsigned int Reserved02[57];
  unsigned int Color[1792];
};

/* 505 */
volatile struct Nv077Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurface;
  unsigned int Reserved01[89];
  unsigned int SetColorFormat;
  unsigned int SetOperation;
  unsigned int ClipPoint;
  unsigned int ClipSize;
  unsigned int ImageOutPoint;
  unsigned int ImageOutSize;
  unsigned int DeltaDuDx;
  unsigned int DeltaDvDy;
  unsigned int Reserved02[56];
  unsigned int ImageInSize;
  unsigned int ImageInFormat;
  unsigned int ImageInOffset;
  unsigned int ImageInPoint;
  unsigned int Reserved03[1788];
};

/* 506 */
struct $5458815D4FD22685CA74CAFAECF65A10
{
  unsigned int a;
  unsigned int b;
};

/* 507 */
volatile struct Nv07bTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextSurface;
  unsigned int Reserved01[94];
  unsigned int SetColorFormat;
  unsigned int Point;
  unsigned int Size;
  unsigned int ClipHorizontal;
  unsigned int ClipVertical;
  unsigned int Reserved02[59];
  $5458815D4FD22685CA74CAFAECF65A10 Color[896];
};

/* 508 */
volatile struct Nv07cTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int StopImage[2];
  unsigned int StopLut[2];
  unsigned int StopCursorImage[2];
  unsigned int StopDac[2];
  unsigned int Reserved00[22];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage[2];
  unsigned int SetContextDmaLut[2];
  unsigned int SetContextDmaCursor[2];
  unsigned int SetContextDmaSemaphore;
  unsigned int Reserved01[84];
  unsigned int SetSemaphoreOffset;
  unsigned int SetSemaphoreRelease;
  unsigned int SetOffsetRange;
  unsigned int GetOffset;
  $44452A6C4C3C86E3C29CF4F826A2C8BD SetImage[2];
  $44452A6C4C3C86E3C29CF4F826A2C8BD SetLut[2];
  $44452A6C4C3C86E3C29CF4F826A2C8BD SetCursorImage[2];
  unsigned int SetCursorPoint;
  unsigned int Reserved03[3];
  $C95068624C02DDE66BA29BD6EECDC638 SetDac[2];
  unsigned int Reserved04[1824];
};

/* 509 */
volatile struct Nv080Typedef
{
  unsigned int Reserved00[1984];
};

/* 510 */
volatile struct Nv081Typedef
{
  unsigned int Reserved00[1984];
};

/* 511 */
volatile struct Nv082Typedef
{
  unsigned int Reserved00[1984];
};

/* 512 */
volatile struct Nv084Typedef
{
  unsigned int Reserved00[1984];
};

/* 513 */
volatile struct Nv085Typedef
{
  unsigned int Reserved00[1984];
};

/* 514 */
volatile struct Nv086Typedef
{
  unsigned int Reserved00[1984];
};

/* 515 */
volatile struct Nv087Typedef
{
  unsigned int Reserved00[1984];
};

/* 516 */
volatile struct Nv088Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaOverlay;
  unsigned int SetContextDmaImageIn;
  unsigned int SetContextDmaImageOut;
  unsigned int Reserved01[92];
  unsigned int ImageOutPoint;
  unsigned int ImageOutSize;
  unsigned int ImageOutFormat;
  unsigned int ImageOutOffset;
  unsigned int ImageInDsDx;
  unsigned int ImageInDtDy;
  unsigned int ImageInSize;
  unsigned int ImageInFormat;
  unsigned int ImageInOffset;
  unsigned int ImageInPoint;
  unsigned int OverlayDsDx;
  unsigned int OverlayDtDy;
  unsigned int OverlaySize;
  unsigned int OverlayFormat;
  unsigned int OverlayOffset;
  unsigned int OverlayPoint;
  unsigned int Reserved02[1840];
};

/* 517 */
volatile struct Nv089Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurface;
  unsigned int Reserved01[88];
  unsigned int SetColorConversion;
  unsigned int SetColorFormat;
  unsigned int SetOperation;
  unsigned int ClipPoint;
  unsigned int ClipSize;
  unsigned int ImageOutPoint;
  unsigned int ImageOutSize;
  unsigned int DsDx;
  unsigned int DtDy;
  unsigned int Reserved02[56];
  unsigned int ImageInSize;
  unsigned int ImageInFormat;
  unsigned int ImageInOffset;
  unsigned int ImageInPoint;
  unsigned int Reserved03[1788];
};

/* 518 */
volatile struct Nv093Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaColor;
  unsigned int SetContextDmaZeta;
  unsigned int Reserved01[91];
  unsigned int SetClipHorizontal;
  unsigned int SetClipVertical;
  unsigned int SetFormat;
  unsigned int SetClipSize;
  unsigned int SetPitch;
  unsigned int SetOffsetColor;
  unsigned int SetOffsetZeta;
  unsigned int Reserved02[1851];
};

/* 519 */
volatile struct Nv094Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaA;
  unsigned int SetContextDmaB;
  unsigned int SetContextSurfaces;
  unsigned int Reserved01[92];
  unsigned int ColorKeyValue;
  unsigned int Offset;
  unsigned int Format;
  unsigned int Filter;
  unsigned int Blend;
  unsigned int Control;
  unsigned int FogColor;
  unsigned int Reserved02[57];
  $3BD9BF489F9EB0C19E5A7346F8785EB6 Tlvertex[16];
  unsigned int DrawPrimitive[64];
  unsigned int Reserved03[1600];
};

/* 520 */
volatile struct Nv095Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaA;
  unsigned int SetContextDmaB;
  unsigned int SetContextSurfaces;
  unsigned int Reserved01[94];
  unsigned int Offset[2];
  unsigned int Format[2];
  unsigned int Filter[2];
  unsigned int Combine0Alpha;
  unsigned int Combine0Color;
  unsigned int Reserved02;
  unsigned int Combine1Alpha;
  unsigned int Combine1Color;
  unsigned int CombineFactor;
  unsigned int Blend;
  unsigned int Control0;
  unsigned int Control1;
  unsigned int Control2;
  unsigned int FogColor;
  unsigned int Reserved03[45];
  $BFD6E1306C6B6003F418DB34622DE801 Tlmtvertex[8];
  unsigned int DrawPrimitive[48];
  unsigned int Reserved04[1664];
};

/* 521 */
volatile struct Nv1189Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurface;
  unsigned int Reserved01[88];
  unsigned int SetColorConversion;
  unsigned int SetColorFormat;
  unsigned int SetOperation;
  unsigned int ClipPoint;
  unsigned int ClipSize;
  unsigned int ImageOutPoint;
  unsigned int ImageOutSize;
  unsigned int DsDx;
  unsigned int DtDy;
  unsigned int Reserved02[56];
  unsigned int ImageInSize;
  unsigned int ImageInFormat;
  unsigned int ImageInOffset;
  unsigned int ImageInPoint;
  unsigned int Reserved03[1788];
};

/* 522 */
volatile struct Nv205fTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[6];
  unsigned int SyncSetRead;
  unsigned int SyncSetWrite;
  unsigned int SyncSetModulo;
  unsigned int SyncIncrementWrite;
  unsigned int SyncStall;
  unsigned int SyncIncrementReadRange;
  unsigned int Reserved02[18];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextColorKey;
  unsigned int SetContextClipRectangle;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurfaces;
  unsigned int Reserved03[87];
  unsigned int SetOperation;
  unsigned int ControlPointIn;
  unsigned int ControlPointOut;
  unsigned int Size;
  unsigned int Reserved04[1853];
};

/* 523 */
struct $DFE6670B1E7323940AD56C3ACE94C1B5
{
  unsigned int address[2];
  unsigned int limit;
};

/* 524 */
volatile struct Nvff5Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[95];
  $DFE6670B1E7323940AD56C3ACE94C1B5 SetDmaSpecifier;
  unsigned int Reserved02[1853];
};

/* 525 */
volatile struct Nvff6Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[31];
  unsigned int SetVideoOutput;
  unsigned int SetVideoInput[3];
  unsigned int Reserved02[60];
  unsigned int SetColorFormat;
  unsigned int SetColorKey;
  unsigned int SetPoint;
  unsigned int SetSize;
  unsigned int Reserved03[1852];
};

/* 526 */
volatile struct Nvff7Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[31];
  unsigned int SetVideoOutput;
  unsigned int SetVideoInput;
  unsigned int Reserved02[62];
  unsigned int SetDeltaDuDx;
  unsigned int SetDeltaDvDy;
  unsigned int SetPoint;
  unsigned int Reserved03[1853];
};

/* 527 */
struct $2CD8517C6C8BC1FD61595E111A563E80
{
  unsigned int offset;
  unsigned int pitch;
  unsigned int size;
  unsigned int format;
  unsigned int notify;
};

/* 528 */
volatile struct Nvff8Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int StopTransfer;
  unsigned int SetPatch;
  unsigned int Reserved00[28];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaImage[2];
  unsigned int Reserved01[29];
  unsigned int SetVideoOutput;
  unsigned int Reserved02[63];
  $2CD8517C6C8BC1FD61595E111A563E80 ImageScan[2];
  unsigned int GetOffsetNotify[2];
  unsigned int Reserved03[1844];
};

/* 529 */
volatile struct Nvff9Typedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaColormap;
  unsigned int Reserved01[30];
  unsigned int SetVideoOutput;
  unsigned int SetVideoInput;
  unsigned int Reserved02[64];
  unsigned int SetColormapStart;
  unsigned int SetColormapLength;
  unsigned int ColormapDirtyStart;
  unsigned int ColormapDirtyLength;
  unsigned int Reserved03[1850];
};

/* 530 */
volatile struct NvffaTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[31];
  unsigned int SetVideoInput[64];
  unsigned int Reserved02[1856];
};

/* 531 */
volatile struct NvffbTypedef
{
  unsigned int Reserved00[1984];
};

/* 532 */
volatile struct NvffcTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[95];
  $DFE6670B1E7323940AD56C3ACE94C1B5 SetDmaSpecifier;
  unsigned int Reserved02[1853];
};

/* 533 */
volatile struct NvffdTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[95];
  $DFE6670B1E7323940AD56C3ACE94C1B5 SetDmaSpecifier;
  unsigned int Reserved02[1853];
};

/* 534 */
volatile struct NvffeTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[95];
  $DFE6670B1E7323940AD56C3ACE94C1B5 SetDmaSpecifier;
  unsigned int Reserved02[1853];
};

/* 535 */
volatile struct NvfffTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int Reserved01[95];
  unsigned int Create;
  unsigned int Destroy;
  unsigned int Reserved02[1854];
};

/* 536 */
union $E1FF2F4BA603D707671593B57E1055EA
{
  volatile Nv000Typedef Nv01Root;
  volatile Nv001Typedef Nv01Class;
  volatile Nv002Typedef Nv01ContextDmaFromMemory;
  volatile Nv003Typedef Nv01ContextDmaToMemory;
  volatile Nv004Typedef Nv01Timer;
  volatile _Nv005Typedef Nv01Event;
  unsigned int NV006_TYPEDEF;
  unsigned int NV007_TYPEDEF;
  unsigned int NV008_TYPEDEF;
  unsigned int NV009_TYPEDEF;
  unsigned int NV00A_TYPEDEF;
  unsigned int NV00B_TYPEDEF;
  unsigned int NV00C_TYPEDEF;
  unsigned int NV00D_TYPEDEF;
  unsigned int NV00E_TYPEDEF;
  unsigned int NV00F_TYPEDEF;
  unsigned int NV010_TYPEDEF;
  unsigned int NV011_TYPEDEF;
  volatile Nv012Typedef Nv01ContextBeta;
  unsigned int NV013_TYPEDEF;
  unsigned int NV014_TYPEDEF;
  unsigned int NV015_TYPEDEF;
  unsigned int NV016_TYPEDEF;
  volatile Nv017Typedef Nv01ContextColorKey;
  volatile Nv018Typedef Nv01ContextPattern;
  volatile Nv019Typedef Nv01ContextClipRectangle;
  unsigned int NV01A_TYPEDEF;
  unsigned int NV01B_TYPEDEF;
  volatile Nv01cTypedef Nv01RenderSolidLin;
  volatile Nv01dTypedef Nv01RenderSolidTriangle;
  volatile Nv01eTypedef Nv01RenderSolidRectangle;
  volatile Nv01fTypedef Nv01ImageBlit;
  unsigned int NV020_TYPEDEF;
  volatile Nv021Typedef Nv01ImageFromCpu;
  unsigned int NV022_TYPEDEF;
  unsigned int NV023_TYPEDEF;
  unsigned int NV024_TYPEDEF;
  unsigned int NV025_TYPEDEF;
  unsigned int NV026_TYPEDEF;
  unsigned int NV027_TYPEDEF;
  unsigned int NV028_TYPEDEF;
  unsigned int NV029_TYPEDEF;
  unsigned int NV02A_TYPEDEF;
  unsigned int NV02B_TYPEDEF;
  unsigned int NV02C_TYPEDEF;
  unsigned int NV02D_TYPEDEF;
  unsigned int NV02E_TYPEDEF;
  unsigned int NV02F_TYPEDEF;
  volatile Nv030Typedef Nv01Null;
  unsigned int NV031_TYPEDEF;
  unsigned int NV032_TYPEDEF;
  unsigned int NV033_TYPEDEF;
  unsigned int NV034_TYPEDEF;
  unsigned int NV035_TYPEDEF;
  volatile Nv036Typedef Nv03StretchedImageFromCpu;
  volatile Nv037Typedef Nv03ScaledImageFromMemory;
  volatile Nv038Typedef Nv04DvdSubpicture;
  volatile Nv039Typedef Nv03MemoryToMemoryFormat;
  unsigned int NV03A_TYPEDEF;
  unsigned int NV03B_TYPEDEF;
  unsigned int NV03C_TYPEDEF;
  volatile Nv03dTypedef Nv01ContextDmaInMemory;
  volatile Nv03eTypedef Nv01ContextErrorToMemory;
  volatile Nv03fTypedef Nv01MemoryLocalPrivileged;
  volatile Nv040Typedef Nv01MemoryLocalUser;
  volatile Nv041Typedef Nv03VideoLutCursorPal;
  volatile Nv042Typedef Nv04ContextSurfaces2d;
  volatile Nv043Typedef Nv03ContextRop;
  volatile Nv044Typedef Nv04ContextPattern;
  volatile Nv045Typedef Nv03VideoLutCursorNtsc;
  volatile Nv046Typedef Nv04VideoLutCursorDac;
  volatile Nv047Typedef Nv04VideoOverlay;
  volatile Nv048Typedef Nv03Dx3TexturedTriangle;
  volatile Nv049Typedef NV05VideoLutCursorDac;
  volatile Nv04aTypedef Nv04GdiRectangleText;
  volatile Nv04bTypedef Nv03GdiRectangleText;
  unsigned int NV04C_TYPEDEF;
  volatile Nv04dTypedef Nv03ExternalVideoDecoder;
  volatile Nv04eTypedef Nv03ExternalVideoDecompressor;
  volatile Nv04fTypedef Nv01ExternalParallelBus;
  volatile Nv050Typedef Nv03ExternalMonitorBus;
  volatile Nv051Typedef Nv04ExternalSerialBus;
  volatile Nv052Typedef Nv04ContextSurfaceSwizzled;
  volatile Nv053Typedef Nv04ContextSurfaces3d;
  volatile Nv054Typedef Nv04Dx5TexturedTriangle;
  volatile Nv055Typedef Nv04Dx6MultiTextureTriangle;
  unsigned int Nv12CelsiusPrimitive;
  volatile Nv057Typedef Nv04ContextColorKey;
  volatile Nv058Typedef Nv03ContextSurface2dDestination;
  volatile Nv059Typedef Nv03ContextSurface2dSource;
  volatile Nv05aTypedef Nv03ContextSurface3dColor;
  volatile Nv05bTypedef Nv03ContextSurface3dDepth;
  volatile Nv05cTypedef Nv04RenderSolidLin;
  volatile Nv05dTypedef Nv04RenderSolidTriangle;
  volatile Nv05eTypedef Nv04RenderSolidRectangle;
  volatile Nv05fTypedef Nv04ImageBlit;
  volatile Nv060Typedef Nv04IndexedImageFromCpu;
  volatile Nv061Typedef Nv04ImageFromCpu;
  volatile Nv062Typedef Nv10ContextSurfaces2d;
  volatile Nv063Typedef Nv05ScaledImageFromMemory;
  volatile Nv064Typedef Nv05IndexedImageFromCpu;
  volatile Nv065Typedef Nv05ImageFromCpu;
  volatile _Nv066Typedef Nv05StretchedImageFromCpu;
  volatile Nv067Typedef Nv10VideoLutCursorDac;
  volatile Nv06fTypedef Nv04HeapOwner;
  unsigned int NV070_TYPEDEF;
  unsigned int NV071_TYPEDEF;
  volatile Nv072Typedef Nv04ContextBeta;
  unsigned int NV073_TYPEDEF;
  unsigned int NV074_TYPEDEF;
  unsigned int NV075_TYPEDEF;
  volatile Nv076Typedef Nv04StretchedImageFromCpu;
  volatile Nv077Typedef Nv04ScaledImageFromMemory;
  unsigned int NV078_TYPEDEF;
  unsigned int NV079_TYPEDEF;
  volatile Nv07aTypedef Nv10VideoOverlay;
  volatile Nv07bTypedef Nv10TextureFromCpu;
  volatile Nv07cTypedef Nv12VideoLutCursorDac;
  unsigned int NV07D_TYPEDEF;
  unsigned int NV07E_TYPEDEF;
  unsigned int NV07F_TYPEDEF;
  volatile Nv080Typedef Nv01Device0;
  volatile Nv081Typedef Nv01Device1;
  volatile Nv082Typedef Nv01Device2;
  volatile Nv083Typedef Nv01Device3;
  volatile Nv084Typedef Nv01Device4;
  volatile Nv085Typedef Nv01Device5;
  volatile Nv086Typedef Nv01Device6;
  volatile Nv087Typedef Nv01Device7;
  volatile Nv088Typedef Nv10DvdSubpicture;
  volatile Nv089Typedef Nv10ScaledImageFromMemory;
  volatile Nv093Typedef Nv10ContextSurfaces3d;
  volatile Nv094Typedef Nv10Dx5TexturedTriangle;
  volatile Nv095Typedef Nv10Dx6MultiTextureTriangle;
  unsigned int Nv20KelvinPrimitive;
  volatile Nv1189Typedef Nv11ScaledImageFromMemory;
  volatile Nv205fTypedef Nv20ImageBlit;
  unsigned int NVFF0_TYPEDEF;
  unsigned int NVFF1_TYPEDEF;
  unsigned int NVFF2_TYPEDEF;
  unsigned int NVFF3_TYPEDEF;
  unsigned int NVFF4_TYPEDEF;
  volatile Nvff5Typedef NvContextErrorToMemory;
  volatile Nvff6Typedef NvVideoColorKey;
  volatile Nvff7Typedef NvVideoScaler;
  volatile Nvff8Typedef NvVideoFromMemory;
  volatile Nvff9Typedef NvVideoColormap;
  volatile NvffaTypedef NvVideoSink;
  volatile NvffbTypedef NvPatchcordVideo;
  volatile NvffcTypedef NvContextDmaInMemory;
  volatile NvffdTypedef NvContextDmaToMemory;
  volatile NvffeTypedef NvContextDmaFromMemory;
  volatile NvfffTypedef NvClass;
};

/* 537 */
struct Nv04SubchannelPio
{
  unsigned int SetObject;
  volatile Nv04ControlPio control;
  $E1FF2F4BA603D707671593B57E1055EA ___u2;
};

/* 538 */
struct Nv04ChannelPio
{
  volatile Nv04SubchannelPio subchannel[8];
};

/* 539 */
struct HMONITOR__
{
  int unused;
};

/* 540 */
struct _DSFX_FLANGE_MONO_PARAMS
{
  _DSFX_FLANGE_MONO_STATE State;
  unsigned int dwFeedback;
  unsigned int dwModScale;
};

/* 541 */
struct _OBJECT_DIRECTORY_INFORMATION
{
  _STRING Name;
  unsigned int Type;
};

/* 542 */
struct _RTL_BITMAP
{
  unsigned int SizeOfBitMap;
  unsigned int *Buffer;
};

/* 543 */
struct __declspec(align(8)) _FILE_REPARSE_POINT_INFORMATION
{
  __int64 FileReference;
  unsigned int Tag;
};

/* 544 */
struct __unaligned __declspec(align(1)) _CM_PNP_BIOS_INSTALLATION_CHECK
{
  unsigned __int8 Signature[4];
  unsigned __int8 Revision;
  unsigned __int8 Length;
  unsigned __int16 ControlField;
  unsigned __int8 Checksum;
  unsigned int EventFlagAddress;
  unsigned __int16 RealModeEntryOffset;
  unsigned __int16 RealModeEntrySegment;
  unsigned __int16 ProtectedModeEntryOffset;
  unsigned int ProtectedModeCodeBaseAddress;
  unsigned int OemDeviceId;
  unsigned __int16 RealModeDataBaseAddress;
  unsigned int ProtectedModeDataBaseAddress;
};

/* 545 */
struct _ACL
{
  unsigned __int8 AclRevision;
  unsigned __int8 Sbz1;
  unsigned __int16 AclSize;
  unsigned __int16 AceCount;
  unsigned __int16 Sbz2;
};

/* 546 */
struct _TOKEN_DEFAULT_DACL
{
  _ACL *DefaultDacl;
};

/* 547 */
struct _DSI3DL2OBSTRUCTION
{
  int lHFLevel;
  float flLFRatio;
};

/* 548 */
struct $6E35CCFC02D81E31BD4C6BEDD77CB20A
{
  unsigned __int32 NameOffset : 31;
  unsigned __int32 NameIsString : 1;
};

/* 549 */
union $3CBCE3DF9778201FE28C6C900211BCCA
{
  $6E35CCFC02D81E31BD4C6BEDD77CB20A __s0;
  unsigned int Name;
  unsigned __int16 Id;
};

/* 550 */
struct $B2E03ED94C06E2E681F8D03FF7FF5CB3
{
  unsigned __int32 OffsetToDirectory : 31;
  unsigned __int32 DataIsDirectory : 1;
};

/* 551 */
union $FC2FC1F8891C316996022ACA84F34A1C
{
  unsigned int OffsetToData;
  $B2E03ED94C06E2E681F8D03FF7FF5CB3 __s1;
};

/* 552 */
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY
{
  $3CBCE3DF9778201FE28C6C900211BCCA ___u0;
  $FC2FC1F8891C316996022ACA84F34A1C ___u1;
};

/* 553 */
struct _DSFX_MINIREVERB_STATE
{
  unsigned int dwScratchOffset;
  unsigned int dwScratchLength;
  unsigned int dwYMemoryOffset;
  unsigned int dwYMemoryLength;
  unsigned int dwFlags;
  unsigned int dwInMixbinPtrs[1];
  unsigned int dwOutMixbinPtrs[12];
};

/* 554 */
struct _IMAGE_FILE_HEADER
{
  unsigned __int16 Machine;
  unsigned __int16 NumberOfSections;
  unsigned int TimeDateStamp;
  unsigned int PointerToSymbolTable;
  unsigned int NumberOfSymbols;
  unsigned __int16 SizeOfOptionalHeader;
  unsigned __int16 Characteristics;
};

/* 555 */
struct _IMAGE_OPTIONAL_HEADER
{
  unsigned __int16 Magic;
  unsigned __int8 MajorLinkerVersion;
  unsigned __int8 MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned int BaseOfData;
  unsigned int ImageBase;
  unsigned int SectionAlignment;
  unsigned int FileAlignment;
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
  unsigned __int16 MajorImageVersion;
  unsigned __int16 MinorImageVersion;
  unsigned __int16 MajorSubsystemVersion;
  unsigned __int16 MinorSubsystemVersion;
  unsigned int Win32VersionValue;
  unsigned int SizeOfImage;
  unsigned int SizeOfHeaders;
  unsigned int CheckSum;
  unsigned __int16 Subsystem;
  unsigned __int16 DllCharacteristics;
  unsigned int SizeOfStackReserve;
  unsigned int SizeOfStackCommit;
  unsigned int SizeOfHeapReserve;
  unsigned int SizeOfHeapCommit;
  unsigned int LoaderFlags;
  unsigned int NumberOfRvaAndSizes;
  _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/* 556 */
struct _IMAGE_NT_HEADERS
{
  unsigned int Signature;
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_OPTIONAL_HEADER OptionalHeader;
};

/* 557 */
struct _ADMINISTRATOR_POWER_POLICY
{
  _SYSTEM_POWER_STATE MinSleep;
  _SYSTEM_POWER_STATE MaxSleep;
  unsigned int MinVideoTimeout;
  unsigned int MaxVideoTimeout;
  unsigned int MinSpindownTimeout;
  unsigned int MaxSpindownTimeout;
};

/* 558 */
struct $40942CBCB8F0A1CDBC81269929B28324
{
  float _11;
  float _12;
  float _13;
  float _14;
  float _21;
  float _22;
  float _23;
  float _24;
  float _31;
  float _32;
  float _33;
  float _34;
  float _41;
  float _42;
  float _43;
  float _44;
};

/* 559 */
union $BCC7F4B688DA156EE77C46FF604E9203
{
  $40942CBCB8F0A1CDBC81269929B28324 __s0;
  float m[4][4];
};

/* 560 */
struct _D3DMATRIX
{
  $BCC7F4B688DA156EE77C46FF604E9203 ___u0;
};

/* 561 */
struct HKEY__
{
  int unused;
};

/* 562 */
struct _CM_EISA_SLOT_INFORMATION
{
  unsigned __int8 ReturnCode;
  unsigned __int8 ReturnFlags;
  unsigned __int8 MajorRevision;
  unsigned __int8 MinorRevision;
  unsigned __int16 Checksum;
  unsigned __int8 NumberFunctions;
  unsigned __int8 FunctionInformation;
  unsigned int CompressedId;
};

/* 563 */
struct _DSFX_AMPMOD_STEREO_STATE
{
  unsigned int dwScratchOffset;
  unsigned int dwScratchLength;
  unsigned int dwYMemoryOffset;
  unsigned int dwYMemoryLength;
  unsigned int dwFlags;
  unsigned int dwInMixbinPtrs[3];
  unsigned int dwOutMixbinPtrs[2];
};

/* 564 */
struct _DSFX_AMPMOD_STEREO_PARAMS
{
  _DSFX_AMPMOD_STEREO_STATE State;
};

/* 565 */
struct PROCESSOR_IDLE_HANDLER_INFO
{
  unsigned int HardwareLatency;
  unsigned __int8 (__fastcall *Handler)(PROCESSOR_IDLE_TIMES *);
};

/* 566 */
struct PROCESSOR_STATE_HANDLER
{
  unsigned __int8 ThrottleScale;
  unsigned __int8 ThrottleOnIdle;
  void (__fastcall *SetThrottle)(unsigned __int8);
  unsigned int NumIdleHandlers;
  PROCESSOR_IDLE_HANDLER_INFO IdleHandler[3];
};

/* 567 */
struct _OBJECT_HEADER_NAME_INFO
{
  _OBJECT_HEADER_NAME_INFO *ChainLink;
  _OBJECT_DIRECTORY *Directory;
  _STRING Name;
};

/* 568 */
struct _OBJECT_DIRECTORY
{
  _OBJECT_HEADER_NAME_INFO *HashBuckets[11];
};

/* 569 */
struct __cppobj D3DIndexBuffer : D3DResource
{
};

/* 570 */
struct __cppobj XMediaObject
{
  XMediaObject_vtbl *__vftable /*VFT*/;
};

/* 574 */
struct /*VFT*/ XMediaObject_vtbl
{
  unsigned int (__stdcall *AddRef)(XMediaObject *this);
  unsigned int (__stdcall *Release)(XMediaObject *this);
  int (__stdcall *GetInfo)(XMediaObject *this, _XMEDIAINFO *);
  int (__stdcall *GetStatus)(XMediaObject *this, unsigned int *);
  int (__stdcall *Process)(XMediaObject *this, const _XMEDIAPACKET *, const _XMEDIAPACKET *);
  int (__stdcall *Discontinuity)(XMediaObject *this);
  int (__stdcall *Flush)(XMediaObject *this);
};

/* 571 */
struct _XMEDIAINFO
{
  unsigned int dwFlags;
  unsigned int dwInputSize;
  unsigned int dwOutputSize;
  unsigned int dwMaxLookahead;
};

/* 572 */
union $A7DF648EE11FCF823558C571E76D56F9
{
  void *hCompletionEvent;
  void *pContext;
};

/* 573 */
const struct _XMEDIAPACKET
{
  void *pvBuffer;
  unsigned int dwMaxSize;
  unsigned int *pdwCompletedSize;
  unsigned int *pdwStatus;
  $A7DF648EE11FCF823558C571E76D56F9 ___u4;
  __int64 *prtTimestamp;
};

/* 575 */
struct __cppobj XAc97MediaObject : XMediaObject
{
};

/* 576 */
struct /*VFT*/ XAc97MediaObject_vtbl
{
  unsigned int (__stdcall *AddRef)(XMediaObject *this);
  unsigned int (__stdcall *Release)(XMediaObject *this);
  int (__stdcall *GetInfo)(XMediaObject *this, _XMEDIAINFO *);
  int (__stdcall *GetStatus)(XMediaObject *this, unsigned int *);
  int (__stdcall *Process)(XMediaObject *this, const _XMEDIAPACKET *, const _XMEDIAPACKET *);
  int (__stdcall *Discontinuity)(XMediaObject *this);
  int (__stdcall *Flush)(XMediaObject *this);
  int (__stdcall *SetMode)(XAc97MediaObject *this, unsigned int);
  int (__stdcall *GetCurrentPosition)(XAc97MediaObject *this, unsigned int *);
};

/* 577 */
struct _IMAGE_FUNCTION_ENTRY
{
  unsigned int StartingAddress;
  unsigned int EndingAddress;
  unsigned int EndOfPrologue;
};

/* 578 */
struct __declspec(align(8)) _FILE_FS_CONTROL_INFORMATION
{
  _LARGE_INTEGER FreeSpaceStartFiltering;
  _LARGE_INTEGER FreeSpaceThreshold;
  _LARGE_INTEGER FreeSpaceStopFiltering;
  _LARGE_INTEGER DefaultQuotaThreshold;
  _LARGE_INTEGER DefaultQuotaLimit;
  unsigned int FileSystemControlFlags;
};

/* 579 */
struct _CM_KEYBOARD_DEVICE_DATA
{
  unsigned __int16 Version;
  unsigned __int16 Revision;
  unsigned __int8 Type;
  unsigned __int8 Subtype;
  unsigned __int16 KeyboardFlags;
};

/* 581 */
struct _FX_SAVE_AREA
{
  _FLOATING_SAVE_AREA FloatSave;
  unsigned int Align16Byte[3];
};

/* 582 */
struct _KPRCB
{
  _KTHREAD *CurrentThread;
  _KTHREAD *NextThread;
  _KTHREAD *IdleThread;
  _KTHREAD *NpxThread;
  unsigned int InterruptCount;
  unsigned int DpcTime;
  unsigned int InterruptTime;
  unsigned int DebugDpcTime;
  unsigned int KeContextSwitches;
  unsigned int DpcInterruptRequested;
  _LIST_ENTRY DpcListHead;
  unsigned int DpcRoutineActive;
  void *DpcStack;
  unsigned int QuantumEnd;
  _FX_SAVE_AREA NpxSaveArea;
  void *DmEnetFunc;
  void *DebugMonitorData;
  void *DebugHaltThread;
  void *DebugDoubleFault;
};

/* 580 */
struct _KPCR
{
  _NT_TIB NtTib;
  _KPCR *SelfPcr;
  _KPRCB *Prcb;
  unsigned __int8 Irql;
  _KPRCB PrcbData;
};

/* 583 */
struct _D3DTILE
{
  unsigned int Flags;
  void *pMemory;
  unsigned int Size;
  unsigned int Pitch;
  unsigned int ZStartTag;
  unsigned int ZOffset;
};

/* 584 */
struct _DSFX_IIR2_STATE
{
  unsigned int dwScratchOffset;
  unsigned int dwScratchLength;
  unsigned int dwYMemoryOffset;
  unsigned int dwYMemoryLength;
  unsigned int dwFlags;
  unsigned int dwInMixbinPtrs[1];
  unsigned int dwOutMixbinPtrs[1];
};

/* 585 */
struct _DSFX_IIR2_PARAMS
{
  _DSFX_IIR2_STATE State;
  unsigned int dwFilterB0;
  unsigned int dwFilterB1;
  unsigned int dwFilterB2;
  unsigned int dwFilterA1;
  unsigned int dwFilterA2;
};

/* 586 */
struct _IMAGE_OS2_HEADER
{
  unsigned __int16 ne_magic;
  char ne_ver;
  char ne_rev;
  unsigned __int16 ne_enttab;
  unsigned __int16 ne_cbenttab;
  int ne_crc;
  unsigned __int16 ne_flags;
  unsigned __int16 ne_autodata;
  unsigned __int16 ne_heap;
  unsigned __int16 ne_stack;
  int ne_csip;
  int ne_sssp;
  unsigned __int16 ne_cseg;
  unsigned __int16 ne_cmod;
  unsigned __int16 ne_cbnrestab;
  unsigned __int16 ne_segtab;
  unsigned __int16 ne_rsrctab;
  unsigned __int16 ne_restab;
  unsigned __int16 ne_modtab;
  unsigned __int16 ne_imptab;
  int ne_nrestab;
  unsigned __int16 ne_cmovent;
  unsigned __int16 ne_align;
  unsigned __int16 ne_cres;
  unsigned __int8 ne_exetyp;
  unsigned __int8 ne_flagsothers;
  unsigned __int16 ne_pretthunks;
  unsigned __int16 ne_psegrefbytes;
  unsigned __int16 ne_swaparea;
  unsigned __int16 ne_expver;
};

/* 587 */
struct POWER_ACTION_POLICY
{
  POWER_ACTION Action;
  unsigned int Flags;
  unsigned int EventCode;
};

/* 588 */
struct SYSTEM_POWER_LEVEL
{
  unsigned __int8 Enable;
  unsigned __int8 Spare[3];
  unsigned int BatteryLevel;
  POWER_ACTION_POLICY PowerPolicy;
  _SYSTEM_POWER_STATE MinSystemState;
};

/* 589 */
struct _MESSAGE_RESOURCE_BLOCK
{
  unsigned int LowId;
  unsigned int HighId;
  unsigned int OffsetToEntries;
};

/* 590 */
struct _FP_32
{
  unsigned int W[1];
};

/* 591 */
struct _FP_64
{
  unsigned int W[2];
};

/* 592 */
struct _FP_80
{
  unsigned int W[3];
};

/* 593 */
struct _FP_128
{
  unsigned int W[4];
};

/* 594 */
union $7DA0DCDD7DD25408FBB54445A81F300F
{
  __int16 I16Value;
  unsigned __int16 U16Value;
  int I32Value;
  unsigned int U32Value;
  void *StringValue;
  unsigned int CompareValue;
  _FP_32 Fp32Value;
  _LARGE_INTEGER I64Value;
  _ULARGE_INTEGER U64Value;
  _FP_64 Fp64Value;
  _FP_80 Fp80Value;
  _FP_128 Fp128Value;
};

/* 595 */
struct $DADA9D7EC0A46D58D7765841D7FE87D8
{
  unsigned __int32 RoundingMode : 2;
  unsigned __int32 Inexact : 1;
  unsigned __int32 Underflow : 1;
  unsigned __int32 Overflow : 1;
  unsigned __int32 ZeroDivide : 1;
  unsigned __int32 InvalidOperation : 1;
  unsigned __int32 OperandValid : 1;
  unsigned __int32 Format : 4;
  unsigned __int32 Precision : 4;
  unsigned __int32 Operation : 12;
  unsigned __int32 Spare : 3;
  unsigned __int32 HardwareException : 1;
};

/* 596 */
struct __declspec(align(8)) _FP_IEEE_VALUE
{
  $7DA0DCDD7DD25408FBB54445A81F300F Value;
  $DADA9D7EC0A46D58D7765841D7FE87D8 Control;
};

/* 597 */
struct _FP_IEEE_RECORD
{
  _FP_IEEE_VALUE Operand1;
  _FP_IEEE_VALUE Operand2;
  _FP_IEEE_VALUE Result;
};

/* 598 */
struct _RTL_PERTHREAD_CURDIR
{
  _RTL_DRIVE_LETTER_CURDIR *CurrentDirectories;
  _UNICODE_STRING *ImageName;
  void *Environment;
};

/* 599 */
struct _IO_COMPLETION_BASIC_INFORMATION
{
  int Depth;
};

/* 600 */
struct _ACCESS_ALLOWED_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 601 */
struct _DSFX_FLANGE_STEREO_STATE
{
  unsigned int dwScratchOffset;
  unsigned int dwScratchLength;
  unsigned int dwYMemoryOffset;
  unsigned int dwYMemoryLength;
  unsigned int dwFlags;
  unsigned int dwInMixbinPtrs[3];
  unsigned int dwOutMixbinPtrs[2];
};

/* 602 */
struct _D3DLOCKED_BOX
{
  int RowPitch;
  int SlicePitch;
  void *pBits;
};

/* 603 */
struct LIST_ENTRY32
{
  unsigned int Flink;
  unsigned int Blink;
};

/* 604 */
union $E0927F6BE2F1645595F211B37EFD8766
{
  unsigned __int64 EndOfPrologue;
  unsigned __int64 UnwindInfoAddress;
};

/* 605 */
struct _IMAGE_FUNCTION_ENTRY64
{
  unsigned __int64 StartingAddress;
  unsigned __int64 EndingAddress;
  $E0927F6BE2F1645595F211B37EFD8766 ___u2;
};

/* 606 */
struct __cppobj XFileMediaObject : XMediaObject
{
};

/* 607 */
struct /*VFT*/ XFileMediaObject_vtbl
{
  unsigned int (__stdcall *AddRef)(XMediaObject *this);
  unsigned int (__stdcall *Release)(XMediaObject *this);
  int (__stdcall *GetInfo)(XMediaObject *this, _XMEDIAINFO *);
  int (__stdcall *GetStatus)(XMediaObject *this, unsigned int *);
  int (__stdcall *Process)(XMediaObject *this, const _XMEDIAPACKET *, const _XMEDIAPACKET *);
  int (__stdcall *Discontinuity)(XMediaObject *this);
  int (__stdcall *Flush)(XMediaObject *this);
  int (__stdcall *Seek)(XFileMediaObject *this, int, unsigned int, unsigned int *);
  int (__stdcall *GetLength)(XFileMediaObject *this, unsigned int *);
};

/* 608 */
struct _WMAXMOFileHeader
{
  unsigned int dwVersion;
  unsigned int dwSampleRate;
  unsigned int dwNumChannels;
  unsigned int dwDuration;
  unsigned int dwBitrate;
};

/* 609 */
struct __cppobj XWmaFileMediaObject : XFileMediaObject
{
};

/* 610 */
struct __unaligned __declspec(align(2)) _WMAXMOFileContDesc
{
  unsigned __int16 wTitleLength;
  unsigned __int16 wAuthorLength;
  unsigned __int16 wCopyrightLength;
  unsigned __int16 wDescriptionLength;
  unsigned __int16 wRatingLength;
  unsigned __int16 *pTitle;
  unsigned __int16 *pAuthor;
  unsigned __int16 *pCopyright;
  unsigned __int16 *pDescription;
  unsigned __int16 *pRating;
};

/* 611 */
struct /*VFT*/ XWmaFileMediaObject_vtbl
{
  unsigned int (__stdcall *AddRef)(XMediaObject *this);
  unsigned int (__stdcall *Release)(XMediaObject *this);
  int (__stdcall *GetInfo)(XMediaObject *this, _XMEDIAINFO *);
  int (__stdcall *GetStatus)(XMediaObject *this, unsigned int *);
  int (__stdcall *Process)(XMediaObject *this, const _XMEDIAPACKET *, const _XMEDIAPACKET *);
  int (__stdcall *Discontinuity)(XMediaObject *this);
  int (__stdcall *Flush)(XMediaObject *this);
  int (__stdcall *Seek)(XFileMediaObject *this, int, unsigned int, unsigned int *);
  int (__stdcall *GetLength)(XFileMediaObject *this, unsigned int *);
  int (__stdcall *GetFileHeader)(XWmaFileMediaObject *this, _WMAXMOFileHeader *);
  int (__stdcall *GetFileContentDescription)(XWmaFileMediaObject *this, _WMAXMOFileContDesc *);
};

/* 612 */
struct _COMPOUND_ACCESS_ALLOWED_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned __int16 CompoundAceType;
  unsigned __int16 Reserved;
  unsigned int SidStart;
};

/* 613 */
struct _SYSTEM_VDM_INSTEMUL_INFO
{
  unsigned int SegmentNotPresent;
  unsigned int VdmOpcode0F;
  unsigned int OpcodeESPrefix;
  unsigned int OpcodeCSPrefix;
  unsigned int OpcodeSSPrefix;
  unsigned int OpcodeDSPrefix;
  unsigned int OpcodeFSPrefix;
  unsigned int OpcodeGSPrefix;
  unsigned int OpcodeOPER32Prefix;
  unsigned int OpcodeADDR32Prefix;
  unsigned int OpcodeINSB;
  unsigned int OpcodeINSW;
  unsigned int OpcodeOUTSB;
  unsigned int OpcodeOUTSW;
  unsigned int OpcodePUSHF;
  unsigned int OpcodePOPF;
  unsigned int OpcodeINTnn;
  unsigned int OpcodeINTO;
  unsigned int OpcodeIRET;
  unsigned int OpcodeINBimm;
  unsigned int OpcodeINWimm;
  unsigned int OpcodeOUTBimm;
  unsigned int OpcodeOUTWimm;
  unsigned int OpcodeINB;
  unsigned int OpcodeINW;
  unsigned int OpcodeOUTB;
  unsigned int OpcodeOUTW;
  unsigned int OpcodeLOCKPrefix;
  unsigned int OpcodeREPNEPrefix;
  unsigned int OpcodeREPPrefix;
  unsigned int OpcodeHLT;
  unsigned int OpcodeCLI;
  unsigned int OpcodeSTI;
  unsigned int BopCount;
};

/* 614 */
struct _SYSTEM_LOOKASIDE_INFORMATION
{
  unsigned __int16 CurrentDepth;
  unsigned __int16 MaximumDepth;
  unsigned int TotalAllocates;
  unsigned int AllocateMisses;
  unsigned int TotalFrees;
  unsigned int FreeMisses;
  unsigned int Type;
  unsigned int Tag;
  unsigned int Size;
};

/* 615 */
struct _QUOTA_LIMITS
{
  unsigned int PagedPoolLimit;
  unsigned int NonPagedPoolLimit;
  unsigned int MinimumWorkingSetSize;
  unsigned int MaximumWorkingSetSize;
  unsigned int PagefileLimit;
  _LARGE_INTEGER TimeLimit;
};

/* 616 */
struct _PORT_VIEW
{
  unsigned int Length;
  void *SectionHandle;
  unsigned int SectionOffset;
  unsigned int ViewSize;
  void *ViewBase;
  void *ViewRemoteBase;
};

/* 617 */
struct NvU64
{
  unsigned int low;
  unsigned int high;
};

/* 618 */
struct __declspec(align(4)) _WIN32_FIND_DATAA
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
  unsigned int dwReserved0;
  unsigned int dwReserved1;
  char cFileName[260];
  char cAlternateFileName[14];
};

/* 619 */
struct _XGAME_FIND_DATA
{
  _WIN32_FIND_DATAA wfd;
  char szSaveGameDirectory[260];
  unsigned __int16 szSaveGameName[128];
};

/* 620 */
struct _DSFX_I3DL2REVERB_STATE
{
  unsigned int dwScratchOffset;
  unsigned int dwScratchLength;
  unsigned int dwYMemoryOffset;
  unsigned int dwYMemoryLength;
  unsigned int dwFlags;
  unsigned int dwInMixbinPtrs[2];
  unsigned int dwOutMixbinPtrs[35];
};

/* 621 */
struct /*VFT*/ IDirectSoundStream_vtbl
{
  unsigned int (__stdcall *AddRef)(XMediaObject *this);
  unsigned int (__stdcall *Release)(XMediaObject *this);
  int (__stdcall *GetInfo)(XMediaObject *this, _XMEDIAINFO *);
  int (__stdcall *GetStatus)(XMediaObject *this, unsigned int *);
  int (__stdcall *Process)(XMediaObject *this, const _XMEDIAPACKET *, const _XMEDIAPACKET *);
  int (__stdcall *Discontinuity)(XMediaObject *this);
  int (__stdcall *Flush)(XMediaObject *this);
};

/* 622 */
struct __cppobj IDirectSoundStream : XMediaObject
{
};

/* 623 */
struct $507ECED6EFA5CFD5AC2C04C0BCDE222D
{
  unsigned int Short;
  unsigned int Long;
};

/* 624 */
union $B4C6CF209C831A8A61EEE6AC2E60AD52
{
  unsigned __int8 ShortName[8];
  $507ECED6EFA5CFD5AC2C04C0BCDE222D Name;
  unsigned int LongName[2];
};

/* 625 */
struct __unaligned __declspec(align(2)) _IMAGE_SYMBOL
{
  $B4C6CF209C831A8A61EEE6AC2E60AD52 N;
  unsigned int Value;
  __int16 SectionNumber;
  unsigned __int16 Type;
  unsigned __int8 StorageClass;
  unsigned __int8 NumberOfAuxSymbols;
};

/* 626 */
struct _FILE_ALIGNMENT_INFORMATION
{
  unsigned int AlignmentRequirement;
};

/* 627 */
struct _RTL_BITMAP_RUN
{
  unsigned int StartingIndex;
  unsigned int NumberOfBits;
};

/* 628 */
struct _KiIoAccessMap
{
  unsigned __int8 DirectionMap[32];
  unsigned __int8 IoMap[8196];
};

/* 629 */
struct _KTSS
{
  unsigned __int16 Backlink;
  unsigned __int16 Reserved0;
  unsigned int Esp0;
  unsigned __int16 Ss0;
  unsigned __int16 Reserved1;
  unsigned int Esp1;
  unsigned __int16 Ss1;
  unsigned __int16 Reserved2;
  unsigned int Esp2;
  unsigned __int16 Ss2;
  unsigned __int16 Reserved3;
  unsigned int CR3;
  unsigned int Eip;
  unsigned int EFlags;
  unsigned int Eax;
  unsigned int Ecx;
  unsigned int Edx;
  unsigned int Ebx;
  unsigned int Esp;
  unsigned int Ebp;
  unsigned int Esi;
  unsigned int Edi;
  unsigned __int16 Es;
  unsigned __int16 Reserved4;
  unsigned __int16 Cs;
  unsigned __int16 Reserved5;
  unsigned __int16 Ss;
  unsigned __int16 Reserved6;
  unsigned __int16 Ds;
  unsigned __int16 Reserved7;
  unsigned __int16 Fs;
  unsigned __int16 Reserved8;
  unsigned __int16 Gs;
  unsigned __int16 Reserved9;
  unsigned __int16 LDT;
  unsigned __int16 Reserved10;
  unsigned __int16 Flags;
  unsigned __int16 IoMapBase;
  _KiIoAccessMap IoMaps[1];
  unsigned __int8 IntDirectionMap[32];
};

/* 630 */
struct _FILE_EA_INFORMATION
{
  unsigned int EaSize;
};

/* 631 */
struct _DSFX_FLANGE_STEREO_PARAMS
{
  _DSFX_FLANGE_STEREO_STATE State;
  unsigned int dwFeedback;
  unsigned int dwModScale;
};

/* 632 */
struct _FSCACHE_EXTENSION
{
  _DEVICE_OBJECT *TargetDeviceObject;
  __unaligned __declspec(align(1)) _LARGE_INTEGER PartitionLength;
  unsigned int SectorSize;
};

/* 633 */
struct $E339EC3434257F768F3203BB3C26A88D
{
  unsigned __int32 UsageCount : 8;
  unsigned __int32 ReadInProgress : 1;
  unsigned __int32 ReadWaiters : 1;
  unsigned __int32 DeletePending : 1;
  unsigned __int32 Reserved : 1;
  unsigned __int32 CacheBufferBits : 20;
};

/* 634 */
union $FF1F14BC7A38D7F73B3CFBEE6809FA39
{
  $E339EC3434257F768F3203BB3C26A88D __s0;
  char *CacheBuffer;
};

/* 635 */
struct _FSCACHE_ELEMENT
{
  unsigned int BlockNumber;
  _FSCACHE_EXTENSION *CacheExtension;
  $FF1F14BC7A38D7F73B3CFBEE6809FA39 ___u2;
  _LIST_ENTRY ListEntry;
};

/* 636 */
struct IMAGE_LOAD_CONFIG_DIRECTORY32
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int GlobalFlagsClear;
  unsigned int GlobalFlagsSet;
  unsigned int CriticalSectionDefaultTimeout;
  unsigned int DeCommitFreeBlockThreshold;
  unsigned int DeCommitTotalFreeThreshold;
  unsigned int LockPrefixTable;
  unsigned int MaximumAllocationSize;
  unsigned int VirtualMemoryThreshold;
  unsigned int ProcessHeapFlags;
  unsigned int ProcessAffinityMask;
  unsigned __int16 CSDVersion;
  unsigned __int16 Reserved1;
  unsigned int EditList;
  unsigned int Reserved[1];
};

/* 637 */
struct _ACCESS_DENIED_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 638 */
struct _SYSTEM_PROCESSOR_INFORMATION
{
  unsigned __int16 ProcessorArchitecture;
  unsigned __int16 ProcessorLevel;
  unsigned __int16 ProcessorRevision;
  unsigned __int16 Reserved;
  unsigned int ProcessorFeatureBits;
};

/* 639 */
struct _MEMORY_BASIC_INFORMATION
{
  void *BaseAddress;
  void *AllocationBase;
  unsigned int AllocationProtect;
  unsigned int RegionSize;
  unsigned int State;
  unsigned int Protect;
  unsigned int Type;
};

/* 640 */
struct _RTL_PROCESS_BACKTRACE_INFORMATION
{
  char *SymbolicBackTrace;
  unsigned int TraceCount;
  unsigned __int16 Index;
  unsigned __int16 Depth;
  void *BackTrace[32];
};

/* 641 */
struct _RTL_PROCESS_BACKTRACES
{
  unsigned int CommittedMemory;
  unsigned int ReservedMemory;
  unsigned int NumberOfBackTraceLookups;
  unsigned int NumberOfBackTraces;
  _RTL_PROCESS_BACKTRACE_INFORMATION BackTraces[1];
};

/* 642 */
struct sockaddr_in
{
  __int16 sin_family;
  unsigned __int16 sin_port;
  in_addr sin_addr;
  char sin_zero[8];
};

/* 643 */
struct _KERNEL_USER_TIMES
{
  _LARGE_INTEGER CreateTime;
  _LARGE_INTEGER ExitTime;
  _LARGE_INTEGER KernelTime;
  _LARGE_INTEGER UserTime;
};

/* 644 */
struct _KD_SYMBOLS_INFO
{
  void *BaseOfDll;
  unsigned int ProcessId;
  unsigned int CheckSum;
  unsigned int SizeOfImage;
};

/* 645 */
struct __cppobj ID3DXBaseMesh : IUnknown
{
};

/* 646 */
struct __cppobj D3DDevice
{
};

/* 647 */
struct __cppobj ID3DXMesh : ID3DXBaseMesh
{
};

/* 648 */
struct __cppobj ID3DXBuffer : IUnknown
{
};

/* 649 */
struct /*VFT*/ ID3DXBuffer_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  void *(__stdcall *GetBufferPointer)(ID3DXBuffer *this);
  unsigned int (__stdcall *GetBufferSize)(ID3DXBuffer *this);
};

/* 650 */
struct _D3DXATTRIBUTERANGE
{
  unsigned int AttribId;
  unsigned int FaceStart;
  unsigned int FaceCount;
  unsigned int VertexStart;
  unsigned int VertexCount;
};

/* 651 */
struct /*VFT*/ ID3DXBaseMesh_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *DrawSubset)(ID3DXBaseMesh *this, unsigned int);
  unsigned int (__stdcall *GetNumFaces)(ID3DXBaseMesh *this);
  unsigned int (__stdcall *GetNumVertices)(ID3DXBaseMesh *this);
  unsigned int (__stdcall *GetFVF)(ID3DXBaseMesh *this);
  int (__stdcall *GetDeclaration)(ID3DXBaseMesh *this, unsigned int *);
  unsigned int (__stdcall *GetOptions)(ID3DXBaseMesh *this);
  int (__stdcall *GetDevice)(ID3DXBaseMesh *this, D3DDevice **);
  int (__stdcall *CloneMeshFVF)(ID3DXBaseMesh *this, unsigned int, unsigned int, D3DDevice *, ID3DXMesh **);
  int (__stdcall *CloneMesh)(ID3DXBaseMesh *this, unsigned int, const unsigned int *, D3DDevice *, ID3DXMesh **);
  int (__stdcall *GetVertexBuffer)(ID3DXBaseMesh *this, D3DVertexBuffer **);
  int (__stdcall *GetIndexBuffer)(ID3DXBaseMesh *this, D3DIndexBuffer **);
  int (__stdcall *LockVertexBuffer)(ID3DXBaseMesh *this, unsigned int, unsigned __int8 **);
  int (__stdcall *UnlockVertexBuffer)(ID3DXBaseMesh *this);
  int (__stdcall *LockIndexBuffer)(ID3DXBaseMesh *this, unsigned int, unsigned __int8 **);
  int (__stdcall *UnlockIndexBuffer)(ID3DXBaseMesh *this);
  int (__stdcall *GetAttributeTable)(ID3DXBaseMesh *this, _D3DXATTRIBUTERANGE *, unsigned int *);
};

/* 652 */
struct __declspec(align(8)) _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION
{
  _LARGE_INTEGER IdleTime;
  _LARGE_INTEGER KernelTime;
  _LARGE_INTEGER UserTime;
  _LARGE_INTEGER DpcTime;
  _LARGE_INTEGER InterruptTime;
  unsigned int InterruptCount;
};

/* 653 */
struct _DESCRIPTOR
{
  unsigned __int16 Pad;
  unsigned __int16 Limit;
  unsigned int Base;
};

/* 654 */
struct _KSPECIAL_REGISTERS
{
  unsigned int Cr0;
  unsigned int Cr2;
  unsigned int Cr3;
  unsigned int Cr4;
  unsigned int KernelDr0;
  unsigned int KernelDr1;
  unsigned int KernelDr2;
  unsigned int KernelDr3;
  unsigned int KernelDr6;
  unsigned int KernelDr7;
  _DESCRIPTOR Gdtr;
  _DESCRIPTOR Idtr;
  unsigned __int16 Tr;
  unsigned __int16 Ldtr;
  unsigned int Reserved[6];
};

/* 655 */
struct _KPROCESSOR_STATE
{
  _CONTEXT ContextFrame;
  _KSPECIAL_REGISTERS SpecialRegisters;
};

/* 656 */
struct _DSBPOSITIONNOTIFY
{
  unsigned int dwOffset;
  void *hEventNotify;
};

/* 657 */
struct Nv09fTypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[6];
  unsigned int SyncSetRead;
  unsigned int SyncSetWrite;
  unsigned int SyncSetModulo;
  unsigned int SyncIncrementWrite;
  unsigned int SyncStall;
  unsigned int SyncIncrementReadRange;
  unsigned int Reserved02[18];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextColorKey;
  unsigned int SetContextClipRectangle;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurfaces;
  unsigned int Reserved03[87];
  unsigned int SetOperation;
  unsigned int ControlPointIn;
  unsigned int ControlPointOut;
  unsigned int Size;
  unsigned int Reserved04[1853];
};

/* 658 */
struct _FIBER
{
  void *FiberData;
  _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
  void *StackBase;
  void *StackLimit;
  void *DeallocationStack;
  _CONTEXT FiberContext;
  _Wx86TIB *Wx86Tib;
};

/* 659 */
struct _FILE_COMPLETION_INFORMATION
{
  void *Port;
  void *Key;
};

/* 660 */
struct tagPOINTS
{
  __int16 x;
  __int16 y;
};

/* 661 */
union $C12A6AFDA0A9A59597CE4F2EEE635F70
{
  unsigned __int8 Tag[4];
  unsigned int TagUlong;
  void *ProcessChargedQuota;
};

/* 662 */
struct _SYSTEM_POOL_ENTRY
{
  unsigned __int8 Allocated;
  unsigned __int8 Spare0;
  unsigned __int16 AllocatorBackTraceIndex;
  unsigned int Size;
  $C12A6AFDA0A9A59597CE4F2EEE635F70 ___u4;
};

/* 663 */
struct _SYSTEM_POOL_INFORMATION
{
  unsigned int TotalSize;
  void *FirstEntry;
  unsigned __int16 EntryOverhead;
  unsigned __int8 PoolTagPresent;
  unsigned __int8 Spare0;
  unsigned int NumberOfEntries;
  _SYSTEM_POOL_ENTRY Entries[1];
};

/* 664 */
struct _EISA_MEMORY_TYPE
{
  unsigned __int8 ReadWrite : 1;
  unsigned __int8 Cached : 1;
  unsigned __int8 Reserved0 : 1;
  unsigned __int8 Type : 2;
  unsigned __int8 Shared : 1;
  unsigned __int8 Reserved1 : 1;
  unsigned __int8 MoreEntries : 1;
};

/* 665 */
struct _SHARE_ACCESS
{
  unsigned __int8 OpenCount;
  unsigned __int8 Readers;
  unsigned __int8 Writers;
  unsigned __int8 Deleters;
  unsigned __int8 SharedRead;
  unsigned __int8 SharedWrite;
  unsigned __int8 SharedDelete;
};

/* 666 */
struct _D3DVERTEXBUFFER_DESC
{
  _D3DFORMAT Format;
  _D3DRESOURCETYPE Type;
};

/* 667 */
struct __cppobj D3DXVECTOR2
{
  float x;
  float y;
};

/* 668 */
struct _FILE_ACCESS_INFORMATION
{
  unsigned int AccessFlags;
};

/* 669 */
struct _XINPUT_GAMEPAD
{
  unsigned __int16 wButtons;
  unsigned __int8 bAnalogButtons[8];
  __int16 sThumbLX;
  __int16 sThumbLY;
  __int16 sThumbRX;
  __int16 sThumbRY;
};

/* 670 */
struct __unaligned __declspec(align(2)) _XINPUT_STATE
{
  unsigned int dwPacketNumber;
  _XINPUT_GAMEPAD Gamepad;
};

/* 671 */
struct _DMA_CONFIGURATION_BYTE1
{
  unsigned __int8 Reserved0 : 2;
  unsigned __int8 TransferSize : 2;
  unsigned __int8 Timing : 2;
  unsigned __int8 Reserved1 : 2;
};

/* 672 */
struct $ABF4B44DD569085B52E34E6FCA7E9F7E
{
  unsigned int SectionPointer;
  unsigned int CheckSum;
};

/* 673 */
union $BE6B62DB97B4CE31514C2CAED396422A
{
  LIST_ENTRY32 HashLinks;
  $ABF4B44DD569085B52E34E6FCA7E9F7E __s1;
};

/* 674 */
union $6E759410AF0132AAE81951E96AC43B3B
{
  unsigned int TimeDateStamp;
  unsigned int LoadedImports;
};

/* 675 */
struct _LDR_DATA_TABLE_ENTRY32
{
  LIST_ENTRY32 InLoadOrderLinks;
  LIST_ENTRY32 InMemoryOrderLinks;
  LIST_ENTRY32 InInitializationOrderLinks;
  unsigned int DllBase;
  unsigned int EntryPoint;
  unsigned int SizeOfImage;
  _STRING32 FullDllName;
  _STRING32 BaseDllName;
  unsigned int Flags;
  unsigned __int16 LoadCount;
  unsigned __int16 TlsIndex;
  $BE6B62DB97B4CE31514C2CAED396422A ___u11;
  $6E759410AF0132AAE81951E96AC43B3B ___u12;
};

/* 676 */
struct HPALETTE__
{
  int unused;
};

/* 677 */
struct _SINGLE_LIST_ENTRY
{
  _SINGLE_LIST_ENTRY *Next;
};

/* 678 */
struct _SYSTEM_ALARM_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 679 */
struct $F59D025DCE6468726C92D12B6A64B985
{
  void *OldStackBase;
  void *OldStackLimit;
};

/* 680 */
struct _INITIAL_TEB
{
  $F59D025DCE6468726C92D12B6A64B985 OldInitialTeb;
  void *StackBase;
  void *StackLimit;
  void *StackAllocationBase;
};

/* 681 */
struct _DSLFODESC
{
  unsigned int dwLFO;
  unsigned int dwDelay;
  unsigned int dwDelta;
  int lPitchModulation;
  int lFilterCutOffRange;
  int lAmplitudeModulation;
};

/* 682 */
struct _RTL_HEAP_USAGE_ENTRY
{
  _RTL_HEAP_USAGE_ENTRY *Next;
  void *Address;
  unsigned int Size;
  unsigned __int16 AllocatorBackTraceIndex;
  unsigned __int16 TagIndex;
};

/* 683 */
struct _D3DXRTE_DESC
{
  unsigned int Size;
  _D3DFORMAT Format;
  int DepthStencil;
  _D3DFORMAT DepthStencilFormat;
};

/* 684 */
struct __unaligned __declspec(align(4)) $A6CA2D94E4184152D40466259027C2FF
{
  _LARGE_INTEGER Start;
  unsigned int Length;
};

/* 685 */
struct $B56176FCA237C2B0A687F85299143576
{
  unsigned int Level;
  unsigned int Vector;
  unsigned int Affinity;
};

/* 686 */
struct $72748C417E05990EBECC6BB8D043D8B0
{
  unsigned int Channel;
  unsigned int Port;
  unsigned int Reserved1;
};

/* 687 */
struct $6C467299E1DD150E8FDAFB428553E9E9
{
  unsigned int Start;
  unsigned int Length;
  unsigned int Reserved;
};

/* 688 */
struct $D735038633D506DCA1748B01FF7747C2
{
  unsigned int DataSize;
  unsigned int Reserved1;
  unsigned int Reserved2;
};

/* 689 */
union $CED5B63F747C189EA9189B8F3CBF4659
{
  $A6CA2D94E4184152D40466259027C2FF Generic;
  $A6CA2D94E4184152D40466259027C2FF Port;
  $B56176FCA237C2B0A687F85299143576 Interrupt;
  $A6CA2D94E4184152D40466259027C2FF Memory;
  $72748C417E05990EBECC6BB8D043D8B0 Dma;
  $B14DB811EDFC1214B110A98B000FF49B DevicePrivate;
  $6C467299E1DD150E8FDAFB428553E9E9 BusNumber;
  $D735038633D506DCA1748B01FF7747C2 DeviceSpecificData;
};

/* 690 */
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR
{
  unsigned __int8 Type;
  unsigned __int8 ShareDisposition;
  unsigned __int16 Flags;
  $CED5B63F747C189EA9189B8F3CBF4659 u;
};

/* 691 */
struct _CM_PARTIAL_RESOURCE_LIST
{
  unsigned __int16 Version;
  unsigned __int16 Revision;
  unsigned int Count;
  _CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];
};

/* 692 */
struct _CM_FULL_RESOURCE_DESCRIPTOR
{
  _INTERFACE_TYPE InterfaceType;
  unsigned int BusNumber;
  _CM_PARTIAL_RESOURCE_LIST PartialResourceList;
};

/* 693 */
struct _CM_RESOURCE_LIST
{
  unsigned int Count;
  _CM_FULL_RESOURCE_DESCRIPTOR List[1];
};

/* 694 */
struct $82A2F77DEAB4BF29059E6D80B7046BCB
{
  unsigned __int8 Type;
  unsigned __int8 Absolute;
  unsigned __int8 Size;
  unsigned __int8 Inserted;
  int SignalState;
  _LIST_ENTRY WaitListHead;
};

/* 695 */
union $2EEE18A5A7C440D88043EF8D87A6A87C
{
  $82A2F77DEAB4BF29059E6D80B7046BCB Event;
  unsigned int RawEvent[4];
};

/* 696 */
struct _RTL_CRITICAL_SECTION
{
  $2EEE18A5A7C440D88043EF8D87A6A87C Synchronization;
  int LockCount;
  int RecursionCount;
  void *OwningThread;
};

/* 697 */
struct _KFLOATING_SAVE
{
  unsigned int ControlWord;
  unsigned int StatusWord;
  unsigned int ErrorOffset;
  unsigned int ErrorSelector;
  unsigned int DataOffset;
  unsigned int DataSelector;
  unsigned int Cr0NpxState;
  unsigned int Spare1;
};

/* 698 */
struct _DSFX_DISTORTION_STATE
{
  unsigned int dwScratchOffset;
  unsigned int dwScratchLength;
  unsigned int dwYMemoryOffset;
  unsigned int dwYMemoryLength;
  unsigned int dwFlags;
  unsigned int dwInMixbinPtrs[1];
  unsigned int dwOutMixbinPtrs[1];
};

/* 699 */
struct _DSFX_DISTORTION_PARAMS
{
  _DSFX_DISTORTION_STATE State;
  unsigned int dwGain;
  unsigned int dwPreFilterB0;
  unsigned int dwPreFilterB1;
  unsigned int dwPreFilterB2;
  unsigned int dwPreFilterA1;
  unsigned int dwPreFilterA2;
  unsigned int dwPostFilterB0;
  unsigned int dwPostFilterB1;
  unsigned int dwPostFilterB2;
  unsigned int dwPostFilterA1;
  unsigned int dwPostFilterA2;
};

/* 700 */
struct _IMAGE_ROM_OPTIONAL_HEADER
{
  unsigned __int16 Magic;
  unsigned __int8 MajorLinkerVersion;
  unsigned __int8 MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned int BaseOfData;
  unsigned int BaseOfBss;
  unsigned int GprMask;
  unsigned int CprMask[4];
  unsigned int GpValue;
};

/* 701 */
struct _IMAGE_ROM_HEADERS
{
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
};

/* 702 */
struct __declspec(align(2)) _IMAGE_RESOURCE_DIRECTORY_STRING
{
  unsigned __int16 Length;
  char NameString[1];
};

/* 703 */
struct $51677CB5C800E6FAFB09CCD307A0E6E7
{
  unsigned __int16 Id;
  unsigned __int16 NameIsPresent;
};

/* 704 */
union $E5065335C0B422D6EAA28CB26AAFDCAB
{
  unsigned int NameOrId;
  _IMAGE_RESOURCE_DIRECTORY_STRING *Name;
  $51677CB5C800E6FAFB09CCD307A0E6E7 __s2;
};

/* 705 */
struct _LDR_ENUM_RESOURCE_ENTRY
{
  $E5065335C0B422D6EAA28CB26AAFDCAB Path[3];
  void *Data;
  unsigned int Size;
  unsigned int Reserved;
};

/* 706 */
struct _IMAGE_DEBUG_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int Type;
  unsigned int SizeOfData;
  unsigned int AddressOfRawData;
  unsigned int PointerToRawData;
};

/* 707 */
struct _D3DSTREAM_INPUT
{
  D3DVertexBuffer *VertexBuffer;
  unsigned int Stride;
  unsigned int Offset;
};

/* 708 */
struct _TOKEN_USER
{
  _SID_AND_ATTRIBUTES User;
};

/* 709 */
struct _D3DINDEXBUFFER_DESC
{
  _D3DFORMAT Format;
  _D3DRESOURCETYPE Type;
};

/* 710 */
struct _OBJECT_TYPE
{
  void *(__stdcall *AllocateProcedure)(unsigned int, unsigned int);
  void (__stdcall *FreeProcedure)(void *);
  void (__stdcall *CloseProcedure)(void *, unsigned int);
  void (__stdcall *DeleteProcedure)(void *);
  int (__stdcall *ParseProcedure)(void *, _OBJECT_TYPE *, unsigned int, _STRING *, _STRING *, void *, void **);
  void *DefaultObject;
  unsigned int PoolTag;
};

/* 711 */
struct _VM_COUNTERS
{
  unsigned int PeakVirtualSize;
  unsigned int VirtualSize;
  unsigned int PageFaultCount;
  unsigned int PeakWorkingSetSize;
  unsigned int WorkingSetSize;
  unsigned int QuotaPeakPagedPoolUsage;
  unsigned int QuotaPagedPoolUsage;
  unsigned int QuotaPeakNonPagedPoolUsage;
  unsigned int QuotaNonPagedPoolUsage;
  unsigned int PagefileUsage;
  unsigned int PeakPagefileUsage;
};

/* 712 */
struct _OBJECT_SYMBOLIC_LINK
{
  void *LinkTargetObject;
  _STRING LinkTarget;
};

/* 713 */
struct __declspec(align(4)) _KEY_NAME_INFORMATION
{
  unsigned int NameLength;
  unsigned __int16 Name[1];
};

/* 714 */
union $024A9AD87DA22F97CCD4130050D7BF17
{
  unsigned int SymbolTableIndex;
  unsigned int VirtualAddress;
};

/* 715 */
struct __unaligned __declspec(align(2)) _IMAGE_LINENUMBER
{
  $024A9AD87DA22F97CCD4130050D7BF17 Type;
  unsigned __int16 Linenumber;
};

/* 716 */
struct _RTL_PROCESS_LOCK_INFORMATION
{
  void *Address;
  unsigned __int16 Type;
  unsigned __int16 CreatorBackTraceIndex;
  void *OwningThread;
  int LockCount;
  unsigned int ContentionCount;
  unsigned int EntryCount;
  int RecursionCount;
  unsigned int NumberOfWaitingShared;
  unsigned int NumberOfWaitingExclusive;
};

/* 717 */
struct _OBJECT_HANDLE_TABLE
{
  int HandleCount;
  int FirstFreeTableEntry;
  void *NextHandleNeedingPool;
  void ***RootTable;
  void **BuiltinRootTable[8];
};

/* 718 */
struct __declspec(align(4)) _IMAGE_DEBUG_MISC
{
  unsigned int DataType;
  unsigned int Length;
  unsigned __int8 Unicode;
  unsigned __int8 Reserved[3];
  unsigned __int8 Data[1];
};

/* 719 */
struct HENHMETAFILE__
{
  int unused;
};

/* 720 */
struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
{
  unsigned int BeginAddress;
  unsigned int EndAddress;
  unsigned int ExceptionHandler;
  unsigned int HandlerData;
  unsigned int PrologEndAddress;
};

/* 721 */
struct _EISA_IRQ_DESCRIPTOR
{
  unsigned __int8 Interrupt : 4;
  unsigned __int8 Reserved : 1;
  unsigned __int8 LevelTriggered : 1;
  unsigned __int8 Shared : 1;
  unsigned __int8 MoreEntries : 1;
};

/* 722 */
struct _EISA_IRQ_CONFIGURATION
{
  _EISA_IRQ_DESCRIPTOR ConfigurationByte;
  unsigned __int8 Reserved;
};

/* 723 */
struct $2F02F8D3622EF2F7F7EE8AD809F44174
{
  void *TranslatedAddress;
  unsigned int Length;
};

/* 724 */
union $60756FD0ADF1D8615F13F98F99E5E28E
{
  $2F02F8D3622EF2F7F7EE8AD809F44174 Port;
  $2F02F8D3622EF2F7F7EE8AD809F44174 Memory;
};

/* 725 */
struct _PCI_DEVICE_ADDRESS
{
  unsigned __int8 Type;
  unsigned __int8 Valid;
  unsigned __int8 Reserved[2];
  $60756FD0ADF1D8615F13F98F99E5E28E u;
};

/* 726 */
struct _SYSTEM_CALL_COUNT_INFORMATION
{
  unsigned int Length;
  unsigned int NumberOfTables;
};

/* 727 */
struct _OSVERSIONINFOW
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  unsigned __int16 szCSDVersion[128];
};

/* 728 */
struct _MICROCODE_UPDATE_DATA_BLOCK
{
  unsigned int HeaderVersion;
  unsigned int UpdateRevision;
  unsigned __int16 Year;
  unsigned __int8 Day;
  unsigned __int8 Month;
  unsigned int Processor;
  unsigned int Checksum;
  unsigned int LoaderRevision;
  unsigned int ProcessorFlags;
  unsigned __int8 Reserved[20];
  unsigned __int8 UpdateData[2000];
};

/* 729 */
struct _D3DXIMAGE_INFO
{
  unsigned int Width;
  unsigned int Height;
  unsigned int Depth;
  unsigned int MipLevels;
  _D3DFORMAT Format;
};

/* 730 */
struct _EXCEPTION_RECORD32
{
  int ExceptionCode;
  unsigned int ExceptionFlags;
  unsigned int ExceptionRecord;
  unsigned int ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int ExceptionInformation[15];
};

/* 731 */
struct _SYSTEM_PROCESS_INFORMATION
{
  unsigned int NextEntryOffset;
  unsigned int NumberOfThreads;
  _LARGE_INTEGER SpareLi1;
  _LARGE_INTEGER SpareLi2;
  _LARGE_INTEGER SpareLi3;
  _LARGE_INTEGER CreateTime;
  _LARGE_INTEGER UserTime;
  _LARGE_INTEGER KernelTime;
  _STRING ImageName;
  int BasePriority;
  void *UniqueProcessId;
  void *InheritedFromUniqueProcessId;
  unsigned int HandleCount;
  unsigned int SessionId;
  unsigned int SpareUl3;
  unsigned int PeakVirtualSize;
  unsigned int VirtualSize;
  unsigned int PageFaultCount;
  unsigned int PeakWorkingSetSize;
  unsigned int WorkingSetSize;
  unsigned int QuotaPeakPagedPoolUsage;
  unsigned int QuotaPagedPoolUsage;
  unsigned int QuotaPeakNonPagedPoolUsage;
  unsigned int QuotaNonPagedPoolUsage;
  unsigned int PagefileUsage;
  unsigned int PeakPagefileUsage;
  unsigned int PrivatePageCount;
  _LARGE_INTEGER ReadOperationCount;
  _LARGE_INTEGER WriteOperationCount;
  _LARGE_INTEGER OtherOperationCount;
  _LARGE_INTEGER ReadTransferCount;
  _LARGE_INTEGER WriteTransferCount;
  _LARGE_INTEGER OtherTransferCount;
};

/* 732 */
struct _KEY_VALUE_ENTRY
{
  _UNICODE_STRING *ValueName;
  unsigned int DataLength;
  unsigned int DataOffset;
  unsigned int Type;
};

/* 733 */
struct _EXCEPTION_POINTERS
{
  unsigned int ep_xrecord;
  unsigned int ep_context;
};

/* 734 */
struct _DSI3DL2OCCLUSION
{
  int lHFLevel;
  float flLFRatio;
};

/* 735 */
struct _DSI3DL2BUFFER
{
  int lDirect;
  int lDirectHF;
  int lRoom;
  int lRoomHF;
  float flRoomRolloffFactor;
  _DSI3DL2OBSTRUCTION Obstruction;
  _DSI3DL2OCCLUSION Occlusion;
};

/* 736 */
struct HICON__
{
  int unused;
};

/* 737 */
struct _D3DTRIPATCH_INFO
{
  unsigned int StartVertexOffset;
  unsigned int NumVertices;
  _D3DBASISTYPE Basis;
  _D3DORDERTYPE Order;
};

/* 738 */
struct __declspec(align(8)) _FILE_NETWORK_OPEN_INFORMATION
{
  _LARGE_INTEGER CreationTime;
  _LARGE_INTEGER LastAccessTime;
  _LARGE_INTEGER LastWriteTime;
  _LARGE_INTEGER ChangeTime;
  _LARGE_INTEGER AllocationSize;
  _LARGE_INTEGER EndOfFile;
  unsigned int FileAttributes;
};

/* 739 */
struct __unaligned __declspec(align(1)) $268DBEAF6596FB501CE3FABD445A36C2
{
  unsigned int Vector;
  unsigned int Affinity;
  unsigned __int8 Irql;
};

/* 740 */
struct __unaligned __declspec(align(1)) $7309BF0FDB0170964963A2C705047A9F
{
  _PCI_DEVICE_ADDRESS Address[1];
  $268DBEAF6596FB501CE3FABD445A36C2 Interrupt;
};

/* 741 */
struct __unaligned __declspec(align(1)) _PCI_DEVICE_DESCRIPTOR
{
  unsigned int Bus;
  unsigned int Slot;
  unsigned __int16 VendorID;
  unsigned __int16 DeviceID;
  unsigned __int8 BaseClass;
  unsigned __int8 SubClass;
  unsigned __int8 ProgIf;
  unsigned __int8 Reserved[1];
  $7309BF0FDB0170964963A2C705047A9F ResourceData;
};

/* 742 */
struct __cppobj D3DVolume : D3DPixelContainer
{
  D3DBaseTexture *Parent;
};

/* 743 */
struct _QUAD
{
  long double DoNotUseThisField;
};

/* 744 */
struct _OBJECT_HEADER
{
  int PointerCount;
  int HandleCount;
  _OBJECT_TYPE *Type;
  unsigned int Flags;
  _QUAD Body;
};

/* 745 */
struct HACCEL__
{
  int unused;
};

/* 746 */
union $E6E24A7F5B6F8B597C18331DB62781EC
{
  unsigned int ForwarderString;
  unsigned int Function;
  unsigned int Ordinal;
  unsigned int AddressOfData;
};

/* 747 */
struct _IMAGE_THUNK_DATA32
{
  $E6E24A7F5B6F8B597C18331DB62781EC u1;
};

/* 748 */
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY
{
  unsigned int FuncStart;
  unsigned __int32 PrologLen : 8;
  unsigned __int32 FuncLen : 22;
  unsigned __int32 ThirtyTwoBit : 1;
  unsigned __int32 ExceptionFlag : 1;
};

/* 749 */
struct _LPCSVR_INITIALIZE
{
  unsigned int ContextSize;
  int (__stdcall *ConnectFn)(void *, _PORT_MESSAGE *, unsigned __int8 *);
  int (__stdcall *RequestFn)(void *, _PORT_MESSAGE *, _PORT_MESSAGE *);
  int (__stdcall *RundownFn)(void *, _PORT_MESSAGE *);
  _LPCSVR_FILTER_RESULT (__stdcall *FilterFn)(void *, _PORT_MESSAGE *);
};

/* 750 */
struct _DIRECTORY_ENUM_CONTEXT
{
  unsigned int QueryOffset;
  _STRING TemplateFileName;
};

/* 751 */
struct _DSFX_CHORUS_MONO_STATE
{
  unsigned int dwScratchOffset;
  unsigned int dwScratchLength;
  unsigned int dwYMemoryOffset;
  unsigned int dwYMemoryLength;
  unsigned int dwFlags;
  unsigned int dwInMixbinPtrs[2];
  unsigned int dwOutMixbinPtrs[1];
};

/* 752 */
struct _SECURITY_SEED_AND_LENGTH
{
  unsigned __int8 Length;
  unsigned __int8 Seed;
};

/* 753 */
struct ANON_OBJECT_HEADER
{
  unsigned __int16 Sig1;
  unsigned __int16 Sig2;
  unsigned __int16 Version;
  unsigned __int16 Machine;
  unsigned int TimeDateStamp;
  _GUID ClassID;
  unsigned int SizeOfData;
};

/* 754 */
struct _RTL_PROCESS_MODULE_INFORMATION
{
  void *Section;
  void *MappedBase;
  void *ImageBase;
  unsigned int ImageSize;
  unsigned int Flags;
  unsigned __int16 LoadOrderIndex;
  unsigned __int16 InitOrderIndex;
  unsigned __int16 LoadCount;
  unsigned __int16 OffsetToFileName;
  unsigned __int8 FullPathName[256];
};

/* 755 */
struct _RTL_PROCESS_MODULES
{
  unsigned int NumberOfModules;
  _RTL_PROCESS_MODULE_INFORMATION Modules[1];
};

/* 756 */
struct __declspec(align(8)) _FILE_DIRECTORY_INFORMATION
{
  unsigned int NextEntryOffset;
  unsigned int FileIndex;
  _LARGE_INTEGER CreationTime;
  _LARGE_INTEGER LastAccessTime;
  _LARGE_INTEGER LastWriteTime;
  _LARGE_INTEGER ChangeTime;
  _LARGE_INTEGER EndOfFile;
  _LARGE_INTEGER AllocationSize;
  unsigned int FileAttributes;
  unsigned int FileNameLength;
  char FileName[1];
};

/* 757 */
struct _IMAGE_VXD_HEADER
{
  unsigned __int16 e32_magic;
  unsigned __int8 e32_border;
  unsigned __int8 e32_worder;
  unsigned int e32_level;
  unsigned __int16 e32_cpu;
  unsigned __int16 e32_os;
  unsigned int e32_ver;
  unsigned int e32_mflags;
  unsigned int e32_mpages;
  unsigned int e32_startobj;
  unsigned int e32_eip;
  unsigned int e32_stackobj;
  unsigned int e32_esp;
  unsigned int e32_pagesize;
  unsigned int e32_lastpagesize;
  unsigned int e32_fixupsize;
  unsigned int e32_fixupsum;
  unsigned int e32_ldrsize;
  unsigned int e32_ldrsum;
  unsigned int e32_objtab;
  unsigned int e32_objcnt;
  unsigned int e32_objmap;
  unsigned int e32_itermap;
  unsigned int e32_rsrctab;
  unsigned int e32_rsrccnt;
  unsigned int e32_restab;
  unsigned int e32_enttab;
  unsigned int e32_dirtab;
  unsigned int e32_dircnt;
  unsigned int e32_fpagetab;
  unsigned int e32_frectab;
  unsigned int e32_impmod;
  unsigned int e32_impmodcnt;
  unsigned int e32_impproc;
  unsigned int e32_pagesum;
  unsigned int e32_datapage;
  unsigned int e32_preload;
  unsigned int e32_nrestab;
  unsigned int e32_cbnrestab;
  unsigned int e32_nressum;
  unsigned int e32_autodata;
  unsigned int e32_debuginfo;
  unsigned int e32_debuglen;
  unsigned int e32_instpreload;
  unsigned int e32_instdemand;
  unsigned int e32_heapsize;
  unsigned __int8 e32_res3[12];
  unsigned int e32_winresoff;
  unsigned int e32_winreslen;
  unsigned __int16 e32_devid;
  unsigned __int16 e32_ddkver;
};

/* 758 */
struct Nv06cTypedef
{
  unsigned int Reserved00[1984];
};

/* 759 */
struct _FILE_FS_FULL_SIZE_INFORMATION
{
  _LARGE_INTEGER TotalAllocationUnits;
  _LARGE_INTEGER CallerAvailableAllocationUnits;
  _LARGE_INTEGER ActualAvailableAllocationUnits;
  unsigned int SectorsPerAllocationUnit;
  unsigned int BytesPerSector;
};

/* 760 */
struct _RTL_GENERIC_TABLE
{
  _RTL_SPLAY_LINKS *TableRoot;
  _LIST_ENTRY InsertOrderList;
  _LIST_ENTRY *OrderedPointer;
  unsigned int WhichOrderedElement;
  unsigned int NumberGenericTableElements;
  _RTL_GENERIC_COMPARE_RESULTS (__stdcall *CompareRoutine)(_RTL_GENERIC_TABLE *, void *, void *);
  void *(__stdcall *AllocateRoutine)(_RTL_GENERIC_TABLE *, unsigned int);
  void (__stdcall *FreeRoutine)(_RTL_GENERIC_TABLE *, void *);
  void *TableContext;
};

/* 761 */
struct _D3DVOLUME_DESC
{
  _D3DFORMAT Format;
  _D3DRESOURCETYPE Type;
  unsigned int Usage;
  unsigned int Size;
  unsigned int Width;
  unsigned int Height;
  unsigned int Depth;
};

/* 762 */
struct _D3DBOX
{
  unsigned int Left;
  unsigned int Top;
  unsigned int Right;
  unsigned int Bottom;
  unsigned int Front;
  unsigned int Back;
};

/* 763 */
struct _DSI3DL2LISTENER
{
  int lRoom;
  int lRoomHF;
  float flRoomRolloffFactor;
  float flDecayTime;
  float flDecayHFRatio;
  int lReflections;
  float flReflectionsDelay;
  int lReverb;
  float flReverbDelay;
  float flDiffusion;
  float flDensity;
  float flHFReference;
};

/* 764 */
struct RTL_ACE_DATA
{
  unsigned __int8 AceType;
  unsigned __int8 InheritFlags;
  unsigned __int8 AceFlags;
  unsigned int Mask;
  void **Sid;
};

/* 765 */
struct _D3DXPARAMETER_DESC
{
  unsigned int Name;
  _D3DXPARAMETERTYPE Type;
};

/* 766 */
struct _CM_MCA_POS_DATA
{
  unsigned __int16 AdapterId;
  unsigned __int8 PosData1;
  unsigned __int8 PosData2;
  unsigned __int8 PosData3;
  unsigned __int8 PosData4;
};

/* 767 */
struct _WIN32_FILE_ATTRIBUTE_DATA
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
};

/* 768 */
struct _FILE_MAILSLOT_SET_INFORMATION
{
  _LARGE_INTEGER *ReadTimeout;
};

/* 769 */
struct _OSVERSIONINFOEXA
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  char szCSDVersion[128];
  unsigned __int16 wServicePackMajor;
  unsigned __int16 wServicePackMinor;
  unsigned __int16 wSuiteMask;
  unsigned __int8 wProductType;
  unsigned __int8 wReserved;
};

/* 770 */
struct _IMAGE_COFF_SYMBOLS_HEADER
{
  unsigned int NumberOfSymbols;
  unsigned int LvaToFirstSymbol;
  unsigned int NumberOfLinenumbers;
  unsigned int LvaToFirstLinenumber;
  unsigned int RvaToFirstByteOfCode;
  unsigned int RvaToLastByteOfCode;
  unsigned int RvaToFirstByteOfData;
  unsigned int RvaToLastByteOfData;
};

/* 771 */
struct _ImageArchitectureHeader
{
  unsigned __int32 AmaskValue : 1;
  unsigned __int32 : 7;
  unsigned __int32 AmaskShift : 8;
  unsigned int FirstEntryRVA;
};

/* 772 */
struct _DSFX_CHORUS_STEREO_STATE
{
  unsigned int dwScratchOffset;
  unsigned int dwScratchLength;
  unsigned int dwYMemoryOffset;
  unsigned int dwYMemoryLength;
  unsigned int dwFlags;
  unsigned int dwInMixbinPtrs[3];
  unsigned int dwOutMixbinPtrs[2];
};

/* 773 */
struct _DSFX_ECHO_MONO_STATE
{
  unsigned int dwScratchOffset;
  unsigned int dwScratchLength;
  unsigned int dwYMemoryOffset;
  unsigned int dwYMemoryLength;
  unsigned int dwFlags;
  unsigned int dwInMixbinPtrs[1];
  unsigned int dwOutMixbinPtrs[1];
};

/* 774 */
struct _WSABUF
{
  unsigned int len;
  char *buf;
};

/* 775 */
struct _OBJECT_ATTRIBUTES
{
  void *RootDirectory;
  _STRING *ObjectName;
  unsigned int Attributes;
};

/* 776 */
struct _PROCESS_WS_WATCH_INFORMATION
{
  void *FaultingPc;
  void *FaultingVa;
};

/* 777 */
struct _DMA_CONFIGURATION_BYTE0
{
  unsigned __int8 Channel : 3;
  unsigned __int8 Reserved : 3;
  unsigned __int8 Shared : 1;
  unsigned __int8 MoreEntries : 1;
};

/* 778 */
struct HBRUSH__
{
  int unused;
};

/* 779 */
struct _SYSTEM_CRASH_STATE_INFORMATION
{
  unsigned int ValidCrashDump;
  unsigned int ValidDirectDump;
};

/* 780 */
struct _ACCESS_ALLOWED_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 781 */
struct _HAL_SHUTDOWN_REGISTRATION
{
  void (__stdcall *NotificationRoutine)(_HAL_SHUTDOWN_REGISTRATION *);
  int Priority;
  _LIST_ENTRY ListEntry;
};

/* 782 */
struct __declspec(align(4)) _FILE_FS_LABEL_INFORMATION
{
  unsigned int VolumeLabelLength;
  char VolumeLabel[1];
};

/* 783 */
struct _FILE_FS_OBJECTID_INFORMATION
{
  unsigned __int8 ObjectId[16];
  unsigned __int8 ExtendedInfo[48];
};

/* 784 */
struct _RTL_HEAP_TAG
{
  unsigned int NumberOfAllocations;
  unsigned int NumberOfFrees;
  unsigned int BytesAllocated;
  unsigned __int16 TagIndex;
  unsigned __int16 CreatorBackTraceIndex;
  unsigned __int16 TagName[24];
};

/* 785 */
struct _IO_RESOURCE_LIST
{
  unsigned __int16 Version;
  unsigned __int16 Revision;
  unsigned int Count;
  _IO_RESOURCE_DESCRIPTOR Descriptors[1];
};

/* 786 */
struct $77C145C15E7D366E84B5C843BDB2A2ED
{
  void *SectionPointer;
  unsigned int CheckSum;
};

/* 787 */
union $45BFD1A0B87341EA0583D82B64A04A76
{
  _LIST_ENTRY HashLinks;
  $77C145C15E7D366E84B5C843BDB2A2ED __s1;
};

/* 788 */
union $07E50B91B6BB7B4A220DB818F2334DE2
{
  unsigned int TimeDateStamp;
  void *LoadedImports;
};

/* 789 */
struct _LDR_DATA_TABLE_ENTRY
{
  _LIST_ENTRY InLoadOrderLinks;
  _LIST_ENTRY InMemoryOrderLinks;
  _LIST_ENTRY InInitializationOrderLinks;
  void *DllBase;
  void *EntryPoint;
  unsigned int SizeOfImage;
  _UNICODE_STRING FullDllName;
  _UNICODE_STRING BaseDllName;
  unsigned int Flags;
  unsigned __int16 LoadCount;
  unsigned __int16 TlsIndex;
  $45BFD1A0B87341EA0583D82B64A04A76 ___u11;
  $07E50B91B6BB7B4A220DB818F2334DE2 ___u12;
};

/* 790 */
struct Nv206eTypedef
{
  unsigned int Reserved00[1984];
};

/* 791 */
struct _PREFIX_TABLE_ENTRY
{
  __int16 NodeTypeCode;
  __int16 NameLength;
  _PREFIX_TABLE_ENTRY *NextPrefixTree;
  _RTL_SPLAY_LINKS Links;
  _STRING *Prefix;
};

/* 792 */
struct _PREFIX_TABLE
{
  __int16 NodeTypeCode;
  __int16 NameLength;
  _PREFIX_TABLE_ENTRY *NextPrefixTree;
};

/* 793 */
struct HFONT__
{
  int unused;
};

/* 794 */
struct _D3DVIEWPORT8
{
  unsigned int X;
  unsigned int Y;
  unsigned int Width;
  unsigned int Height;
  float MinZ;
  float MaxZ;
};

/* 795 */
struct _SYSTEM_VERIFIER_INFORMATION
{
  unsigned int NextEntryOffset;
  unsigned int Level;
  _STRING DriverName;
  unsigned int RaiseIrqls;
  unsigned int AcquireSpinLocks;
  unsigned int SynchronizeExecutions;
  unsigned int AllocationsAttempted;
  unsigned int AllocationsSucceeded;
  unsigned int AllocationsSucceededSpecialPool;
  unsigned int AllocationsWithNoTag;
  unsigned int TrimRequests;
  unsigned int Trims;
  unsigned int AllocationsFailed;
  unsigned int AllocationsFailedDeliberately;
  unsigned int Loads;
  unsigned int Unloads;
  unsigned int UnTrackedPool;
  unsigned int CurrentPagedPoolAllocations;
  unsigned int CurrentNonPagedPoolAllocations;
  unsigned int PeakPagedPoolAllocations;
  unsigned int PeakNonPagedPoolAllocations;
  unsigned int PagedPoolUsageInBytes;
  unsigned int NonPagedPoolUsageInBytes;
  unsigned int PeakPagedPoolUsageInBytes;
  unsigned int PeakNonPagedPoolUsageInBytes;
};

/* 796 */
struct _CM_SERIAL_DEVICE_DATA
{
  unsigned __int16 Version;
  unsigned __int16 Revision;
  unsigned int BaudClock;
};

/* 797 */
struct _RTL_HEAP_INFORMATION
{
  void *BaseAddress;
  unsigned int Flags;
  unsigned __int16 EntryOverhead;
  unsigned __int16 CreatorBackTraceIndex;
  unsigned int BytesAllocated;
  unsigned int BytesCommitted;
  unsigned int NumberOfTags;
  unsigned int NumberOfEntries;
  unsigned int NumberOfPseudoTags;
  unsigned int PseudoTagGranularity;
  unsigned int Reserved[5];
  _RTL_HEAP_TAG *Tags;
  _RTL_HEAP_ENTRY *Entries;
};

/* 798 */
struct _RTL_PROCESS_HEAPS
{
  unsigned int NumberOfHeaps;
  _RTL_HEAP_INFORMATION Heaps[1];
};

/* 799 */
struct _RTL_PROCESS_LOCKS
{
  unsigned int NumberOfLocks;
  _RTL_PROCESS_LOCK_INFORMATION Locks[1];
};

/* 800 */
struct _RTL_DEBUG_INFORMATION
{
  void *SectionHandleClient;
  void *ViewBaseClient;
  void *ViewBaseTarget;
  unsigned int ViewBaseDelta;
  void *EventPairClient;
  void *EventPairTarget;
  void *TargetProcessId;
  void *TargetThreadHandle;
  unsigned int Flags;
  unsigned int OffsetFree;
  unsigned int CommitSize;
  unsigned int ViewSize;
  _RTL_PROCESS_MODULES *Modules;
  _RTL_PROCESS_BACKTRACES *BackTraces;
  _RTL_PROCESS_HEAPS *Heaps;
  _RTL_PROCESS_LOCKS *Locks;
  void *SpecificHeap;
  void *TargetProcessHandle;
  void *Reserved[6];
};

/* 801 */
struct Nv06eControl
{
  unsigned int Ignored00[16];
  unsigned int Put;
  unsigned int Get;
  unsigned int Reference;
  unsigned int Ignored01[2029];
};

/* 802 */
struct __unaligned __declspec(align(1)) _EISA_MEMORY_CONFIGURATION
{
  _EISA_MEMORY_TYPE ConfigurationByte;
  unsigned __int8 DataSize;
  unsigned __int16 AddressLowWord;
  unsigned __int8 AddressHighByte;
  unsigned __int16 MemorySize;
};

/* 803 */
struct _D3DXTECHNIQUE_DESC
{
  unsigned int Name;
  unsigned int Passes;
};

/* 804 */
struct _DSFX_I3DL2REVERB_IIR
{
  unsigned int dwDelay;
  unsigned int dwCoefficients[2];
};

/* 805 */
struct __declspec(align(4)) _KEY_VALUE_FULL_INFORMATION
{
  unsigned int TitleIndex;
  unsigned int Type;
  unsigned int DataOffset;
  unsigned int DataLength;
  unsigned int NameLength;
  unsigned __int16 Name[1];
};

/* 806 */
struct __cppobj ID3DXEffect : IUnknown
{
};

/* 807 */
struct __cppobj D3DXVECTOR4
{
  float x;
  float y;
  float z;
  float w;
};

/* 808 */
struct __cppobj D3DXMATRIX : _D3DMATRIX
{
};

/* 809 */
struct __cppobj ID3DXTechnique : IUnknown
{
};

/* 810 */
struct _D3DXPASS_DESC
{
  unsigned int Name;
};

/* 811 */
struct /*VFT*/ ID3DXTechnique_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *GetDevice)(ID3DXTechnique *this, D3DDevice **);
  int (__stdcall *GetDesc)(ID3DXTechnique *this, _D3DXTECHNIQUE_DESC *);
  int (__stdcall *GetPassDesc)(ID3DXTechnique *this, unsigned int, _D3DXPASS_DESC *);
  int (__stdcall *IsParameterUsed)(ID3DXTechnique *this, unsigned int);
  int (__stdcall *Validate)(ID3DXTechnique *this);
  int (__stdcall *Begin)(ID3DXTechnique *this, unsigned int *);
  int (__stdcall *Pass)(ID3DXTechnique *this, unsigned int);
  int (__stdcall *End)(ID3DXTechnique *this);
};

/* 812 */
struct /*VFT*/ ID3DXEffect_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *GetDevice)(ID3DXEffect *this, D3DDevice **);
  int (__stdcall *GetDesc)(ID3DXEffect *this, _D3DXEFFECT_DESC *);
  int (__stdcall *GetParameterDesc)(ID3DXEffect *this, unsigned int, _D3DXPARAMETER_DESC *);
  int (__stdcall *GetTechniqueDesc)(ID3DXEffect *this, unsigned int, _D3DXTECHNIQUE_DESC *);
  int (__stdcall *SetDword)(ID3DXEffect *this, unsigned int, unsigned int);
  int (__stdcall *GetDword)(ID3DXEffect *this, unsigned int, unsigned int *);
  int (__stdcall *SetFloat)(ID3DXEffect *this, unsigned int, float);
  int (__stdcall *GetFloat)(ID3DXEffect *this, unsigned int, float *);
  int (__stdcall *SetVector)(ID3DXEffect *this, unsigned int, D3DXVECTOR4 *);
  int (__stdcall *GetVector)(ID3DXEffect *this, unsigned int, D3DXVECTOR4 *);
  int (__stdcall *SetMatrix)(ID3DXEffect *this, unsigned int, D3DXMATRIX *);
  int (__stdcall *GetMatrix)(ID3DXEffect *this, unsigned int, D3DXMATRIX *);
  int (__stdcall *SetTexture)(ID3DXEffect *this, unsigned int, D3DBaseTexture *);
  int (__stdcall *GetTexture)(ID3DXEffect *this, unsigned int, D3DBaseTexture **);
  int (__stdcall *SetVertexShader)(ID3DXEffect *this, unsigned int, unsigned int);
  int (__stdcall *GetVertexShader)(ID3DXEffect *this, unsigned int, unsigned int *);
  int (__stdcall *SetPixelShader)(ID3DXEffect *this, unsigned int, unsigned int);
  int (__stdcall *GetPixelShader)(ID3DXEffect *this, unsigned int, unsigned int *);
  int (__stdcall *GetTechnique)(ID3DXEffect *this, unsigned int, ID3DXTechnique **);
  int (__stdcall *CloneEffect)(ID3DXEffect *this, D3DDevice *, unsigned int, ID3DXEffect **);
};

/* 813 */
struct _SYSTEM_SESSION_PROCESS_INFORMATION
{
  unsigned int SessionId;
  unsigned int SizeOfBuf;
  void *Buffer;
};

/* 814 */
struct _IMAGE_BASE_RELOCATION
{
  unsigned int VirtualAddress;
  unsigned int SizeOfBlock;
};

/* 815 */
struct _LPC_CLIENT_DIED_MSG
{
  _PORT_MESSAGE PortMsg;
  _LARGE_INTEGER CreateTime;
};

/* 816 */
struct _LD_LAUNCH_DASHBOARD
{
  unsigned int dwReason;
  unsigned int dwContext;
  unsigned int dwParameter1;
  unsigned int dwParameter2;
  unsigned __int8 Reserved[3056];
};

/* 817 */
struct WSAData
{
  unsigned __int16 wVersion;
  unsigned __int16 wHighVersion;
  char szDescription[257];
  char szSystemStatus[129];
  unsigned __int16 iMaxSockets;
  unsigned __int16 iMaxUdpDg;
  char *lpVendorInfo;
};

/* 818 */
struct Nv206eControl
{
  unsigned int Ignored00[16];
  unsigned int Put;
  unsigned int Get;
  unsigned int Reference;
  unsigned int Ignored01[2029];
};

/* 819 */
struct tagSIZE
{
  int cx;
  int cy;
};

/* 820 */
struct HWINEVENTHOOK__
{
  int unused;
};

/* 821 */
struct _DBGKD_CONTROL_SET
{
  unsigned int TraceFlag;
  unsigned int Dr7;
  unsigned int CurrentSymbolStart;
  unsigned int CurrentSymbolEnd;
};

/* 822 */
struct __declspec(align(2)) _MESSAGE_RESOURCE_ENTRY
{
  unsigned __int16 Length;
  unsigned __int16 Flags;
  unsigned __int8 Text[1];
};

/* 823 */
union $22971E98F1DCAE471B592EC18ECB1551
{
  unsigned int PhysicalAddress;
  unsigned int VirtualSize;
};

/* 824 */
struct _IMAGE_SECTION_HEADER
{
  unsigned __int8 Name[8];
  $22971E98F1DCAE471B592EC18ECB1551 Misc;
  unsigned int VirtualAddress;
  unsigned int SizeOfRawData;
  unsigned int PointerToRawData;
  unsigned int PointerToRelocations;
  unsigned int PointerToLinenumbers;
  unsigned __int16 NumberOfRelocations;
  unsigned __int16 NumberOfLinenumbers;
  unsigned int Characteristics;
};

/* 825 */
struct __declspec(align(8)) _FILE_PIPE_REMOTE_INFORMATION
{
  _LARGE_INTEGER CollectDataTime;
  unsigned int MaximumCollectionCount;
};

/* 826 */
struct _SYSTEM_CALL_TIME_INFORMATION
{
  unsigned int Length;
  unsigned int TotalCalls;
  _LARGE_INTEGER TimeOfCalls[1];
};

/* 827 */
struct SYSTEM_BATTERY_STATE
{
  unsigned __int8 AcOnLine;
  unsigned __int8 BatteryPresent;
  unsigned __int8 Charging;
  unsigned __int8 Discharging;
  unsigned __int8 Spare1[4];
  unsigned int MaxCapacity;
  unsigned int RemainingCapacity;
  unsigned int Rate;
  unsigned int EstimatedTime;
  unsigned int DefaultAlert1;
  unsigned int DefaultAlert2;
};

/* 828 */
struct __cppobj D3DPushBuffer : D3DResource
{
  unsigned int Size;
  unsigned int AllocationSize;
};

/* 829 */
struct __cppobj IDirectSoundBuffer
{
};

/* 830 */
struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION
{
  unsigned __int8 KernelDebuggerEnabled;
  unsigned __int8 KernelDebuggerNotPresent;
};

/* 831 */
struct _RTL_HEAP_TAG_INFO
{
  unsigned int NumberOfAllocations;
  unsigned int NumberOfFrees;
  unsigned int BytesAllocated;
};

/* 832 */
struct _DSFX_CHORUS_STEREO_PARAMS
{
  _DSFX_CHORUS_STEREO_STATE State;
  unsigned int dwGain;
  unsigned int dwModScale;
};

/* 833 */
struct __cppobj IDirectXFileDataReference : IDirectXFileObject
{
};

/* 834 */
struct /*VFT*/ IDirectXFileDataReference_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *GetName)(IDirectXFileObject *this, char *, unsigned int *);
  int (__stdcall *GetId)(IDirectXFileObject *this, _GUID *);
  int (__stdcall *Resolve)(IDirectXFileDataReference *this, IDirectXFileData **);
};

/* 835 */
struct _IMAGE_RESOURCE_DATA_ENTRY
{
  unsigned int OffsetToData;
  unsigned int Size;
  unsigned int CodePage;
  unsigned int Reserved;
};

/* 836 */
struct Nv06eTypedef
{
  unsigned int Reserved00[1984];
};

/* 837 */
struct _ImageArchitectureEntry
{
  unsigned int FixupInstRVA;
  unsigned int NewInst;
};

/* 838 */
union $4CFA15F5CE489CDF0BD78DFB308FEF36
{
  unsigned __int16 Ordinal;
  unsigned __int16 Hint;
};

/* 839 */
struct IMPORT_OBJECT_HEADER
{
  unsigned __int16 Sig1;
  unsigned __int16 Sig2;
  unsigned __int16 Version;
  unsigned __int16 Machine;
  unsigned int TimeDateStamp;
  unsigned int SizeOfData;
  $4CFA15F5CE489CDF0BD78DFB308FEF36 ___u6;
  unsigned __int16 Type : 2;
  unsigned __int16 NameType : 3;
  unsigned __int16 Reserved : 11;
};

/* 840 */
struct _LAUNCH_DATA
{
  unsigned __int8 Data[3072];
};

/* 841 */
struct _SEMAPHORE_BASIC_INFORMATION
{
  int CurrentCount;
  int MaximumCount;
};

/* 842 */
struct _DSFX_AMPMOD_MONO_STATE
{
  unsigned int dwScratchOffset;
  unsigned int dwScratchLength;
  unsigned int dwYMemoryOffset;
  unsigned int dwYMemoryLength;
  unsigned int dwFlags;
  unsigned int dwInMixbinPtrs[2];
  unsigned int dwOutMixbinPtrs[1];
};

/* 843 */
struct __cppobj D3DFixup : D3DResource
{
  unsigned int Run;
  unsigned int Next;
  unsigned int Size;
};

/* 844 */
struct _D3DDISPLAYMODE
{
  unsigned int Width;
  unsigned int Height;
  unsigned int RefreshRate;
  unsigned int Flags;
  _D3DFORMAT Format;
};

/* 845 */
struct __declspec(align(8)) _HARDERROR_MSG
{
  _PORT_MESSAGE h;
  int Status;
  _LARGE_INTEGER ErrorTime;
  unsigned int ValidResponseOptions;
  unsigned int Response;
  unsigned int NumberOfParameters;
  unsigned int UnicodeStringParameterMask;
  unsigned int Parameters[5];
};

/* 846 */
struct __declspec(align(4)) _KEY_VALUE_PARTIAL_INFORMATION
{
  unsigned int TitleIndex;
  unsigned int Type;
  unsigned int DataLength;
  unsigned __int8 Data[1];
};

/* 847 */
struct HTASK__
{
  int unused;
};

/* 848 */
union $38D1D3CEFEA79A062605ED460CC21E5F
{
  _XINPUT_GAMEPAD Gamepad;
};

/* 849 */
union $E722DFD651283FBC507C91EC74E38FED
{
  _XINPUT_RUMBLE Rumble;
};

/* 850 */
struct __unaligned __declspec(align(1)) _XINPUT_CAPABILITIES
{
  unsigned __int8 SubType;
  unsigned __int16 Reserved;
  $38D1D3CEFEA79A062605ED460CC21E5F In;
  $E722DFD651283FBC507C91EC74E38FED Out;
};

/* 851 */
struct _DSSTREAMDESC
{
  unsigned int dwFlags;
  unsigned int dwMaxAttachedPackets;
  tWAVEFORMATEX *lpwfxFormat;
  void (__stdcall *lpfnCallback)(void *, void *, unsigned int);
  void *lpvContext;
  unsigned int dwMixBinMask;
};

/* 852 */
struct HMENU__
{
  int unused;
};

/* 853 */
struct _EISA_DMA_CONFIGURATION
{
  _DMA_CONFIGURATION_BYTE0 ConfigurationByte0;
  _DMA_CONFIGURATION_BYTE1 ConfigurationByte1;
};

/* 854 */
struct _EISA_PORT_DESCRIPTOR
{
  unsigned __int8 NumberPorts : 5;
  unsigned __int8 Reserved : 1;
  unsigned __int8 Shared : 1;
  unsigned __int8 MoreEntries : 1;
};

/* 855 */
struct __unaligned __declspec(align(1)) _EISA_PORT_CONFIGURATION
{
  _EISA_PORT_DESCRIPTOR Configuration;
  unsigned __int16 PortAddress;
};

/* 856 */
struct _CM_EISA_FUNCTION_INFORMATION
{
  unsigned int CompressedId;
  unsigned __int8 IdSlotFlags1;
  unsigned __int8 IdSlotFlags2;
  unsigned __int8 MinorRevision;
  unsigned __int8 MajorRevision;
  unsigned __int8 Selections[26];
  unsigned __int8 FunctionFlags;
  unsigned __int8 TypeString[80];
  _EISA_MEMORY_CONFIGURATION EisaMemory[9];
  _EISA_IRQ_CONFIGURATION EisaIrq[7];
  _EISA_DMA_CONFIGURATION EisaDma[4];
  _EISA_PORT_CONFIGURATION EisaPort[20];
  unsigned __int8 InitializationData[60];
};

/* 857 */
struct __cppobj D3DXPLANE
{
  float a;
  float b;
  float c;
  float d;
};

/* 858 */
struct _D3DCAPS8
{
  _D3DDEVTYPE DeviceType;
  unsigned int AdapterOrdinal;
  unsigned int Caps;
  unsigned int Caps2;
  unsigned int Caps3;
  unsigned int PresentationIntervals;
  unsigned int CursorCaps;
  unsigned int DevCaps;
  unsigned int PrimitiveMiscCaps;
  unsigned int RasterCaps;
  unsigned int ZCmpCaps;
  unsigned int SrcBlendCaps;
  unsigned int DestBlendCaps;
  unsigned int AlphaCmpCaps;
  unsigned int ShadeCaps;
  unsigned int TextureCaps;
  unsigned int TextureFilterCaps;
  unsigned int CubeTextureFilterCaps;
  unsigned int VolumeTextureFilterCaps;
  unsigned int TextureAddressCaps;
  unsigned int VolumeTextureAddressCaps;
  unsigned int LineCaps;
  unsigned int MaxTextureWidth;
  unsigned int MaxTextureHeight;
  unsigned int MaxVolumeExtent;
  unsigned int MaxTextureRepeat;
  unsigned int MaxTextureAspectRatio;
  unsigned int MaxAnisotropy;
  float MaxVertexW;
  float GuardBandLeft;
  float GuardBandTop;
  float GuardBandRight;
  float GuardBandBottom;
  float ExtentsAdjust;
  unsigned int StencilCaps;
  unsigned int FVFCaps;
  unsigned int TextureOpCaps;
  unsigned int MaxTextureBlendStages;
  unsigned int MaxSimultaneousTextures;
  unsigned int VertexProcessingCaps;
  unsigned int MaxActiveLights;
  unsigned int MaxUserClipPlanes;
  unsigned int MaxVertexBlendMatrices;
  unsigned int MaxVertexBlendMatrixIndex;
  float MaxPointSize;
  unsigned int MaxPrimitiveCount;
  unsigned int MaxVertexIndex;
  unsigned int MaxStreams;
  unsigned int MaxStreamStride;
  unsigned int VertexShaderVersion;
  unsigned int MaxVertexShaderConst;
  unsigned int PixelShaderVersion;
  float MaxPixelShaderValue;
};

/* 859 */
struct Nv03ControlPio
{
  unsigned int Reserved00[3];
  unsigned __int16 Free;
  unsigned __int16 Zero[3];
  unsigned int Reserved01[58];
};

/* 860 */
struct NvP64
{
  unsigned int offset;
  unsigned __int16 selector;
  unsigned __int16 reserved;
};

/* 861 */
union $66A2FC5ED47CB5912809650DAB14E256
{
  unsigned int VirtualAddress;
  unsigned int RelocCount;
};

/* 862 */
struct __unaligned __declspec(align(2)) _IMAGE_RELOCATION
{
  $66A2FC5ED47CB5912809650DAB14E256 ___u0;
  unsigned int SymbolTableIndex;
  unsigned __int16 Type;
};

/* 863 */
struct __cppobj D3DXQUATERNION
{
  float x;
  float y;
  float z;
  float w;
};

/* 864 */
struct _KSYSTEM_TIME
{
  unsigned int LowPart;
  int High1Time;
  int High2Time;
};

/* 865 */
struct __declspec(align(4)) _SYSTEM_BASIC_INFORMATION
{
  unsigned int Reserved;
  unsigned int TimerResolution;
  unsigned int PageSize;
  unsigned int NumberOfPhysicalPages;
  unsigned int LowestPhysicalPageNumber;
  unsigned int HighestPhysicalPageNumber;
  unsigned int AllocationGranularity;
  unsigned int MinimumUserModeAddress;
  unsigned int MaximumUserModeAddress;
  unsigned int ActiveProcessorsAffinityMask;
  char NumberOfProcessors;
};

/* 866 */
struct __cppobj ID3DXSPMesh : IUnknown
{
};

/* 867 */
struct __cppobj ID3DXPMesh : ID3DXBaseMesh
{
};

/* 868 */
struct __cppobj ISequentialStream : IUnknown
{
};

/* 869 */
struct /*VFT*/ ISequentialStream_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *Read)(ISequentialStream *this, void *, unsigned int, unsigned int *);
  int (__stdcall *Write)(ISequentialStream *this, const void *, unsigned int, unsigned int *);
};

/* 870 */
struct __cppobj IStream : ISequentialStream
{
};

/* 871 */
struct tagSTATSTG
{
  unsigned __int16 *pwcsName;
  unsigned int type;
  _ULARGE_INTEGER cbSize;
  _FILETIME mtime;
  _FILETIME ctime;
  _FILETIME atime;
  unsigned int grfMode;
  unsigned int grfLocksSupported;
  _GUID clsid;
  unsigned int grfStateBits;
  unsigned int reserved;
};

/* 872 */
struct /*VFT*/ IStream_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *Read)(ISequentialStream *this, void *, unsigned int, unsigned int *);
  int (__stdcall *Write)(ISequentialStream *this, const void *, unsigned int, unsigned int *);
  int (__stdcall *Seek)(IStream *this, _LARGE_INTEGER, unsigned int, _ULARGE_INTEGER *);
  int (__stdcall *SetSize)(IStream *this, _ULARGE_INTEGER);
  int (__stdcall *CopyTo)(IStream *this, IStream *, _ULARGE_INTEGER, _ULARGE_INTEGER *, _ULARGE_INTEGER *);
  int (__stdcall *Commit)(IStream *this, unsigned int);
  int (__stdcall *Revert)(IStream *this);
  int (__stdcall *LockRegion)(IStream *this, _ULARGE_INTEGER, _ULARGE_INTEGER, unsigned int);
  int (__stdcall *UnlockRegion)(IStream *this, _ULARGE_INTEGER, _ULARGE_INTEGER, unsigned int);
  int (__stdcall *Stat)(IStream *this, tagSTATSTG *, unsigned int);
  int (__stdcall *Clone)(IStream *this, IStream **);
};

/* 873 */
struct _D3DMATERIAL8
{
  _D3DCOLORVALUE Diffuse;
  _D3DCOLORVALUE Ambient;
  _D3DCOLORVALUE Specular;
  _D3DCOLORVALUE Emissive;
  float Power;
};

/* 874 */
struct D3DXMATERIAL
{
  _D3DMATERIAL8 MatD3D;
  char *pTextureFilename;
};

/* 875 */
struct /*VFT*/ ID3DXPMesh_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *DrawSubset)(ID3DXBaseMesh *this, unsigned int);
  unsigned int (__stdcall *GetNumFaces)(ID3DXBaseMesh *this);
  unsigned int (__stdcall *GetNumVertices)(ID3DXBaseMesh *this);
  unsigned int (__stdcall *GetFVF)(ID3DXBaseMesh *this);
  int (__stdcall *GetDeclaration)(ID3DXBaseMesh *this, unsigned int *);
  unsigned int (__stdcall *GetOptions)(ID3DXBaseMesh *this);
  int (__stdcall *GetDevice)(ID3DXBaseMesh *this, D3DDevice **);
  int (__stdcall *CloneMeshFVF)(ID3DXBaseMesh *this, unsigned int, unsigned int, D3DDevice *, ID3DXMesh **);
  int (__stdcall *CloneMesh)(ID3DXBaseMesh *this, unsigned int, const unsigned int *, D3DDevice *, ID3DXMesh **);
  int (__stdcall *GetVertexBuffer)(ID3DXBaseMesh *this, D3DVertexBuffer **);
  int (__stdcall *GetIndexBuffer)(ID3DXBaseMesh *this, D3DIndexBuffer **);
  int (__stdcall *LockVertexBuffer)(ID3DXBaseMesh *this, unsigned int, unsigned __int8 **);
  int (__stdcall *UnlockVertexBuffer)(ID3DXBaseMesh *this);
  int (__stdcall *LockIndexBuffer)(ID3DXBaseMesh *this, unsigned int, unsigned __int8 **);
  int (__stdcall *UnlockIndexBuffer)(ID3DXBaseMesh *this);
  int (__stdcall *GetAttributeTable)(ID3DXBaseMesh *this, _D3DXATTRIBUTERANGE *, unsigned int *);
  int (__stdcall *ClonePMeshFVF)(ID3DXPMesh *this, unsigned int, unsigned int, D3DDevice *, ID3DXPMesh **);
  int (__stdcall *ClonePMesh)(ID3DXPMesh *this, unsigned int, const unsigned int *, D3DDevice *, ID3DXPMesh **);
  int (__stdcall *SetNumFaces)(ID3DXPMesh *this, unsigned int);
  int (__stdcall *SetNumVertices)(ID3DXPMesh *this, unsigned int);
  unsigned int (__stdcall *GetMaxFaces)(ID3DXPMesh *this);
  unsigned int (__stdcall *GetMinFaces)(ID3DXPMesh *this);
  unsigned int (__stdcall *GetMaxVertices)(ID3DXPMesh *this);
  unsigned int (__stdcall *GetMinVertices)(ID3DXPMesh *this);
  int (__stdcall *Save)(ID3DXPMesh *this, IStream *, D3DXMATERIAL *, unsigned int);
  int (__stdcall *Optimize)(ID3DXPMesh *this, unsigned int, unsigned int *, unsigned int *, ID3DXBuffer **, ID3DXMesh **);
  int (__stdcall *GetAdjacency)(ID3DXPMesh *this, unsigned int *);
};

/* 876 */
struct /*VFT*/ ID3DXSPMesh_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  unsigned int (__stdcall *GetNumFaces)(ID3DXSPMesh *this);
  unsigned int (__stdcall *GetNumVertices)(ID3DXSPMesh *this);
  unsigned int (__stdcall *GetFVF)(ID3DXSPMesh *this);
  int (__stdcall *GetDeclaration)(ID3DXSPMesh *this, unsigned int *);
  unsigned int (__stdcall *GetOptions)(ID3DXSPMesh *this);
  int (__stdcall *GetDevice)(ID3DXSPMesh *this, D3DDevice **);
  int (__stdcall *CloneMeshFVF)(ID3DXSPMesh *this, unsigned int, unsigned int, D3DDevice *, unsigned int *, unsigned int *, ID3DXMesh **);
  int (__stdcall *CloneMesh)(ID3DXSPMesh *this, unsigned int, const unsigned int *, D3DDevice *, unsigned int *, unsigned int *, ID3DXMesh **);
  int (__stdcall *ClonePMeshFVF)(ID3DXSPMesh *this, unsigned int, unsigned int, D3DDevice *, unsigned int *, ID3DXPMesh **);
  int (__stdcall *ClonePMesh)(ID3DXSPMesh *this, unsigned int, const unsigned int *, D3DDevice *, unsigned int *, ID3DXPMesh **);
  int (__stdcall *ReduceFaces)(ID3DXSPMesh *this, unsigned int);
  int (__stdcall *ReduceVertices)(ID3DXSPMesh *this, unsigned int);
  unsigned int (__stdcall *GetMaxFaces)(ID3DXSPMesh *this);
  unsigned int (__stdcall *GetMaxVertices)(ID3DXSPMesh *this);
};

/* 877 */
struct __declspec(align(4)) _FILE_MOVE_CLUSTER_INFORMATION
{
  unsigned int ClusterCount;
  void *RootDirectory;
  unsigned int FileNameLength;
  char FileName[1];
};

/* 878 */
struct XNKID
{
  unsigned __int8 ab[8];
};

/* 879 */
struct __cppobj Direct3D
{
};

/* 880 */
struct APU_EP_CREATE
{
  unsigned int pioBase;
};

/* 881 */
struct tagRECT
{
  int left;
  int top;
  int right;
  int bottom;
};

/* 882 */
struct _IMAGE_SEPARATE_DEBUG_HEADER
{
  unsigned __int16 Signature;
  unsigned __int16 Flags;
  unsigned __int16 Machine;
  unsigned __int16 Characteristics;
  unsigned int TimeDateStamp;
  unsigned int CheckSum;
  unsigned int ImageBase;
  unsigned int SizeOfImage;
  unsigned int NumberOfSections;
  unsigned int ExportedNamesSize;
  unsigned int DebugDirectorySize;
  unsigned int SectionAlignment;
  unsigned int Reserved[2];
};

/* 883 */
struct __declspec(align(4)) _FILE_LINK_INFORMATION
{
  unsigned __int8 ReplaceIfExists;
  void *RootDirectory;
  unsigned int FileNameLength;
  char FileName[1];
};

/* 884 */
struct __cppobj IClassFactory : IUnknown
{
};

/* 885 */
struct /*VFT*/ IClassFactory_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *CreateInstance)(IClassFactory *this, IUnknown *, const _GUID *, void **);
  int (__stdcall *LockServer)(IClassFactory *this, int);
};

/* 886 */
struct _OSVERSIONINFOA
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  char szCSDVersion[128];
};

/* 887 */
struct _DEBUG_PARAMETERS
{
  unsigned int CommunicationPort;
  unsigned int BaudRate;
};

/* 888 */
struct _MESSAGE_RESOURCE_DATA
{
  unsigned int NumberOfBlocks;
  _MESSAGE_RESOURCE_BLOCK Blocks[1];
};

/* 889 */
struct _FILE_ATTRIBUTE_TAG_INFORMATION
{
  unsigned int FileAttributes;
  unsigned int ReparseTag;
};

/* 890 */
struct $B7F46BB786DBC9BB8392420E08779350
{
  _SINGLE_LIST_ENTRY Next;
  unsigned __int16 Depth;
  unsigned __int16 Sequence;
};

/* 891 */
union _SLIST_HEADER
{
  unsigned __int64 Alignment;
  $B7F46BB786DBC9BB8392420E08779350 __s1;
};

/* 893 */
union $A378218A1A9542F8D3C7E6BB2102491A
{
  unsigned int Flags;
  _RTL_HANDLE_TABLE_ENTRY *NextFree;
};

/* 892 */
struct _RTL_HANDLE_TABLE_ENTRY
{
  $A378218A1A9542F8D3C7E6BB2102491A ___u0;
};

/* 894 */
struct _RTL_HANDLE_TABLE
{
  unsigned int MaximumNumberOfHandles;
  unsigned int SizeOfHandleTableEntry;
  unsigned int Reserved[2];
  _RTL_HANDLE_TABLE_ENTRY *FreeHandles;
  _RTL_HANDLE_TABLE_ENTRY *CommittedHandles;
  _RTL_HANDLE_TABLE_ENTRY *UnCommittedHandles;
  _RTL_HANDLE_TABLE_ENTRY *MaxReservedHandles;
};

/* 895 */
struct _SYSTEMTIME
{
  unsigned __int16 wYear;
  unsigned __int16 wMonth;
  unsigned __int16 wDayOfWeek;
  unsigned __int16 wDay;
  unsigned __int16 wHour;
  unsigned __int16 wMinute;
  unsigned __int16 wSecond;
  unsigned __int16 wMilliseconds;
};

/* 896 */
struct _FILE_ALLOCATION_INFORMATION
{
  _LARGE_INTEGER AllocationSize;
};

/* 897 */
struct $EAAABE2F6366F8F0768FFC7445AD35AB
{
  unsigned __int8 hour;
  unsigned __int8 min;
  unsigned __int8 sec;
  unsigned __int8 frame;
  unsigned __int8 fps;
  unsigned __int8 dummy;
  unsigned __int8 pad[2];
};

/* 898 */
struct $34B59DAB5B49726BB742663EC7E89904
{
  unsigned int songptrpos;
};

/* 899 */
union $F3BE21BCDA8D0152723AF09DDCBEF3D2
{
  unsigned int ms;
  unsigned int sample;
  unsigned int cb;
  unsigned int ticks;
  $EAAABE2F6366F8F0768FFC7445AD35AB smpte;
  $34B59DAB5B49726BB742663EC7E89904 midi;
};

/* 900 */
struct mmtime_tag
{
  unsigned int wType;
  $F3BE21BCDA8D0152723AF09DDCBEF3D2 u;
};

/* 901 */
struct _DEVICE_FLAGS
{
  unsigned __int32 Failed : 1;
  unsigned __int32 ReadOnly : 1;
  unsigned __int32 Removable : 1;
  unsigned __int32 ConsoleIn : 1;
  unsigned __int32 ConsoleOut : 1;
  unsigned __int32 Input : 1;
  unsigned __int32 Output : 1;
};

/* 902 */
struct __cppobj D3DSurface : D3DPixelContainer
{
  D3DBaseTexture *Parent;
};

/* 903 */
struct _CM_INT13_DRIVE_PARAMETER
{
  unsigned __int16 DriveSelect;
  __unaligned __declspec(align(1)) unsigned int MaxCylinders;
  unsigned __int16 SectorsPerTrack;
  unsigned __int16 MaxHeads;
  unsigned __int16 NumberDrives;
};

/* 904 */
struct _MEMORYSTATUS
{
  unsigned int dwLength;
  unsigned int dwMemoryLoad;
  unsigned int dwTotalPhys;
  unsigned int dwAvailPhys;
  unsigned int dwTotalPageFile;
  unsigned int dwAvailPageFile;
  unsigned int dwTotalVirtual;
  unsigned int dwAvailVirtual;
};

/* 905 */
struct _IMAGE_ARCHIVE_MEMBER_HEADER
{
  unsigned __int8 Name[16];
  unsigned __int8 Date[12];
  unsigned __int8 UserID[6];
  unsigned __int8 GroupID[6];
  unsigned __int8 Mode[8];
  unsigned __int8 Size[10];
  unsigned __int8 EndHeader[2];
};

/* 906 */
struct _XTHREAD_NOTIFICATION
{
  _LIST_ENTRY ListEntry;
  void (__stdcall *pfnNotifyRoutine)(int);
};

/* 907 */
struct _OBJECT_NAME_INFORMATION
{
  _STRING Name;
};

/* 908 */
struct __declspec(align(4)) _REG_NOTIFY_INFORMATION
{
  unsigned int NextEntryOffset;
  _REG_ACTION Action;
  unsigned int KeyLength;
  unsigned __int16 Key[1];
};

/* 909 */
struct _PROCESS_PRIORITY_CLASS
{
  unsigned __int8 Foreground;
  unsigned __int8 PriorityClass;
};

/* 910 */
struct _EVENT_BASIC_INFORMATION
{
  _EVENT_TYPE EventType;
  int EventState;
};

/* 911 */
struct _XBOX_KRNL_VERSION
{
  unsigned __int16 Major;
  unsigned __int16 Minor;
  unsigned __int16 Build;
  unsigned __int16 Qfe;
};

/* 912 */
struct _IMAGE_EXPORT_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int Name;
  unsigned int Base;
  unsigned int NumberOfFunctions;
  unsigned int NumberOfNames;
  unsigned int AddressOfFunctions;
  unsigned int AddressOfNames;
  unsigned int AddressOfNameOrdinals;
};

/* 913 */
struct _FSCTL_VOLUME_METADATA
{
  unsigned int ByteOffset;
  unsigned int TransferLength;
  void *TransferBuffer;
};

/* 914 */
union _POWER_STATE
{
  _SYSTEM_POWER_STATE SystemState;
  _DEVICE_POWER_STATE DeviceState;
};

/* 915 */
struct _MM_STATISTICS
{
  unsigned int Length;
  unsigned int TotalPhysicalPages;
  unsigned int AvailablePages;
  unsigned int VirtualMemoryBytesCommitted;
  unsigned int VirtualMemoryBytesReserved;
  unsigned int CachePagesCommitted;
  unsigned int PoolPagesCommitted;
  unsigned int StackPagesCommitted;
  unsigned int ImagePagesCommitted;
};

/* 916 */
struct _CLIENT_ID64
{
  unsigned __int64 UniqueProcess;
  unsigned __int64 UniqueThread;
};

/* 917 */
struct _SYSTEM_CONTEXT_SWITCH_INFORMATION
{
  unsigned int ContextSwitches;
  unsigned int FindAny;
  unsigned int FindLast;
  unsigned int FindIdeal;
  unsigned int IdleAny;
  unsigned int IdleCurrent;
  unsigned int IdleLast;
  unsigned int IdleIdeal;
  unsigned int PreemptAny;
  unsigned int PreemptCurrent;
  unsigned int PreemptLast;
  unsigned int SwitchToIdle;
};

/* 918 */
struct _PROCESSOR_POWER_INFORMATION
{
  unsigned int Number;
  unsigned int MaxMhz;
  unsigned int CurrentMhz;
  unsigned int MhzLimit;
  unsigned int MaxIdleState;
  unsigned int CurrentIdleState;
};

/* 919 */
struct _div_t
{
  int quot;
  int rem;
};

/* 920 */
struct _XSOUNDTRACK_DATA
{
  unsigned int uSoundtrackId;
  unsigned int uSongCount;
  unsigned int uSoundtrackLength;
  unsigned __int16 szName[32];
};

/* 921 */
struct _FILE_END_OF_FILE_INFORMATION
{
  _LARGE_INTEGER EndOfFile;
};

/* 922 */
union $20D28E87CBE02F7753425DB0D02DFDC3
{
  unsigned __int8 u8;
  unsigned __int16 u16;
  unsigned int u32;
};

/* 923 */
struct CODEC_ACCESS_PARAMS
{
  unsigned int uDeviceRef;
  unsigned int BaseAddr;
  unsigned int Offset;
  unsigned int AccessType;
  $20D28E87CBE02F7753425DB0D02DFDC3 Val;
};

/* 924 */
struct __cppobj ID3DXRenderToEnvMap : IUnknown
{
};

/* 925 */
struct __cppobj D3DCubeTexture : D3DBaseTexture
{
};

/* 926 */
struct __cppobj D3DTexture : D3DBaseTexture
{
};

/* 927 */
struct /*VFT*/ ID3DXRenderToEnvMap_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *GetDevice)(ID3DXRenderToEnvMap *this, D3DDevice **);
  int (__stdcall *GetDesc)(ID3DXRenderToEnvMap *this, _D3DXRTE_DESC *);
  int (__stdcall *BeginCube)(ID3DXRenderToEnvMap *this, D3DCubeTexture *);
  int (__stdcall *BeginSphere)(ID3DXRenderToEnvMap *this, D3DTexture *);
  int (__stdcall *BeginHemisphere)(ID3DXRenderToEnvMap *this, D3DTexture *, D3DTexture *);
  int (__stdcall *BeginParabolic)(ID3DXRenderToEnvMap *this, D3DTexture *, D3DTexture *);
  int (__stdcall *Face)(ID3DXRenderToEnvMap *this, _D3DCUBEMAP_FACES);
  int (__stdcall *End)(ID3DXRenderToEnvMap *this);
};

/* 928 */
struct Nv0FFTypedef
{
  unsigned int Reserved00[1984];
};

/* 929 */
struct _XCALCSIG_SIGNATURE
{
  unsigned __int8 Signature[20];
};

/* 930 */
struct _PORT_DATA_ENTRY
{
  void *Base;
  unsigned int Size;
};

/* 931 */
struct _D3DXATTRIBUTEWEIGHTS
{
  float Position;
  float Boundary;
  float Normal;
  float Diffuse;
  float Specular;
  float Tex[8];
};

/* 932 */
struct __declspec(align(4)) _FILE_NAMES_INFORMATION
{
  unsigned int NextEntryOffset;
  unsigned int FileIndex;
  unsigned int FileNameLength;
  char FileName[1];
};

/* 933 */
struct HBITMAP__
{
  int unused;
};

/* 934 */
struct _CM_COMPONENT_INFORMATION
{
  _DEVICE_FLAGS Flags;
  unsigned int Version;
  unsigned int Key;
  unsigned int AffinityMask;
};

/* 935 */
struct _HARDWARE_PTE
{
  unsigned __int32 Valid : 1;
  unsigned __int32 Write : 1;
  unsigned __int32 Owner : 1;
  unsigned __int32 WriteThrough : 1;
  unsigned __int32 CacheDisable : 1;
  unsigned __int32 Accessed : 1;
  unsigned __int32 Dirty : 1;
  unsigned __int32 LargePage : 1;
  unsigned __int32 Global : 1;
  unsigned __int32 GuardOrEndOfAllocation : 1;
  unsigned __int32 PersistAllocation : 1;
  unsigned __int32 reserved : 1;
  unsigned __int32 PageFrameNumber : 20;
};

/* 936 */
struct _SECURITY_DESCRIPTOR_RELATIVE
{
  unsigned __int8 Revision;
  unsigned __int8 Sbz1;
  unsigned __int16 Control;
  unsigned int Owner;
  unsigned int Group;
  unsigned int Sacl;
  unsigned int Dacl;
};

/* 937 */
struct _RTL_RANGE_LIST
{
  _LIST_ENTRY ListHead;
  unsigned int Flags;
  unsigned int Count;
  unsigned int Stamp;
};

/* 938 */
struct _TOKEN_STATISTICS
{
  _LUID TokenId;
  _LUID AuthenticationId;
  _LARGE_INTEGER ExpirationTime;
  _TOKEN_TYPE TokenType;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  unsigned int DynamicCharged;
  unsigned int DynamicAvailable;
  unsigned int GroupCount;
  unsigned int PrivilegeCount;
  _LUID ModifiedId;
};

/* 939 */
struct __declspec(align(4)) _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64
{
  unsigned int Type;
  unsigned int DataLength;
  unsigned __int8 Data[1];
};

/* 940 */
struct _KGDTENTRY
{
  unsigned __int16 LimitLow;
  unsigned __int16 BaseLow;
  $FD960E9338373C28903161EF2E75E310 HighWord;
};

/* 941 */
struct _PRIVILEGE_SET
{
  unsigned int PrivilegeCount;
  unsigned int Control;
  _LUID_AND_ATTRIBUTES Privilege[1];
};

/* 942 */
struct _OVERLAPPED
{
  unsigned int Internal;
  unsigned int InternalHigh;
  unsigned int Offset;
  unsigned int OffsetHigh;
  void *hEvent;
};

/* 943 */
struct NVDE_REGISTER_DEBUGGER_PARAMETERS
{
  unsigned int TrapEvent;
};

/* 944 */
struct __declspec(align(4)) _KEY_VALUE_BASIC_INFORMATION
{
  unsigned int TitleIndex;
  unsigned int Type;
  unsigned int NameLength;
  unsigned __int16 Name[1];
};

/* 945 */
struct _D3DDEVICE_CREATION_PARAMETERS
{
  unsigned int AdapterOrdinal;
  _D3DDEVTYPE DeviceType;
  HWND__ *hFocusWindow;
  unsigned int BehaviorFlags;
};

/* 946 */
struct _TIME_FIELDS
{
  __int16 Year;
  __int16 Month;
  __int16 Day;
  __int16 Hour;
  __int16 Minute;
  __int16 Second;
  __int16 Milliseconds;
  __int16 Weekday;
};

/* 947 */
struct __cppobj ID3DXMatrixStack : IUnknown
{
};

/* 948 */
struct /*VFT*/ ID3DXMatrixStack_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *Pop)(ID3DXMatrixStack *this);
  int (__stdcall *Push)(ID3DXMatrixStack *this);
  int (__stdcall *LoadIdentity)(ID3DXMatrixStack *this);
  int (__stdcall *LoadMatrix)(ID3DXMatrixStack *this, const D3DXMATRIX *);
  int (__stdcall *MultMatrix)(ID3DXMatrixStack *this, const D3DXMATRIX *);
  int (__stdcall *MultMatrixLocal)(ID3DXMatrixStack *this, const D3DXMATRIX *);
  int (__stdcall *RotateAxis)(ID3DXMatrixStack *this, const D3DXVECTOR3 *, float);
  int (__stdcall *RotateAxisLocal)(ID3DXMatrixStack *this, const D3DXVECTOR3 *, float);
  int (__stdcall *RotateYawPitchRoll)(ID3DXMatrixStack *this, float, float, float);
  int (__stdcall *RotateYawPitchRollLocal)(ID3DXMatrixStack *this, float, float, float);
  int (__stdcall *Scale)(ID3DXMatrixStack *this, float, float, float);
  int (__stdcall *ScaleLocal)(ID3DXMatrixStack *this, float, float, float);
  int (__stdcall *Translate)(ID3DXMatrixStack *this, float, float, float);
  int (__stdcall *TranslateLocal)(ID3DXMatrixStack *this, float, float, float);
  D3DXMATRIX *(__stdcall *GetTop)(ID3DXMatrixStack *this);
};

/* 949 */
struct _IMAGE_TLS_DIRECTORY32
{
  unsigned int StartAddressOfRawData;
  unsigned int EndAddressOfRawData;
  unsigned int AddressOfIndex;
  unsigned int AddressOfCallBacks;
  unsigned int SizeOfZeroFill;
  unsigned int Characteristics;
};

/* 950 */
struct Nv0A0Typedef
{
  unsigned int Reserved00[1984];
};

/* 951 */
struct XNetStartupParams
{
  unsigned __int8 cfgSizeOfStruct;
  unsigned __int8 cfgFlags;
  unsigned __int8 cfgPrivatePoolSizeInPages;
  unsigned __int8 cfgEnetReceiveQueueLength;
  unsigned __int8 cfgIpFragMaxSimultaneous;
  unsigned __int8 cfgIpFragMaxPacketDiv256;
  unsigned __int8 cfgSockMaxSockets;
  unsigned __int8 cfgSockDefaultRecvBufsizeInK;
  unsigned __int8 cfgSockDefaultSendBufsizeInK;
  unsigned __int8 cfgKeyRegMax;
  unsigned __int8 cfgSecRegMax;
};

/* 952 */
struct HRSRC__
{
  int unused;
};

/* 953 */
struct __cppobj D3DPalette : D3DResource
{
};

/* 954 */
struct _ACL_SIZE_INFORMATION
{
  unsigned int AceCount;
  unsigned int AclBytesInUse;
  unsigned int AclBytesFree;
};

/* 955 */
struct _SYSTEM_PERFORMANCE_INFORMATION
{
  _LARGE_INTEGER IdleProcessTime;
  _LARGE_INTEGER IoReadTransferCount;
  _LARGE_INTEGER IoWriteTransferCount;
  _LARGE_INTEGER IoOtherTransferCount;
  unsigned int IoReadOperationCount;
  unsigned int IoWriteOperationCount;
  unsigned int IoOtherOperationCount;
  unsigned int AvailablePages;
  unsigned int CommittedPages;
  unsigned int CommitLimit;
  unsigned int PeakCommitment;
  unsigned int PageFaultCount;
  unsigned int CopyOnWriteCount;
  unsigned int TransitionCount;
  unsigned int CacheTransitionCount;
  unsigned int DemandZeroCount;
  unsigned int PageReadCount;
  unsigned int PageReadIoCount;
  unsigned int CacheReadCount;
  unsigned int CacheIoCount;
  unsigned int DirtyPagesWriteCount;
  unsigned int DirtyWriteIoCount;
  unsigned int MappedPagesWriteCount;
  unsigned int MappedWriteIoCount;
  unsigned int PagedPoolPages;
  unsigned int NonPagedPoolPages;
  unsigned int PagedPoolAllocs;
  unsigned int PagedPoolFrees;
  unsigned int NonPagedPoolAllocs;
  unsigned int NonPagedPoolFrees;
  unsigned int FreeSystemPtes;
  unsigned int ResidentSystemCodePage;
  unsigned int TotalSystemDriverPages;
  unsigned int TotalSystemCodePages;
  unsigned int NonPagedPoolLookasideHits;
  unsigned int PagedPoolLookasideHits;
  unsigned int Spare3Count;
  unsigned int ResidentSystemCachePage;
  unsigned int ResidentPagedPoolPage;
  unsigned int ResidentSystemDriverPage;
  unsigned int CcFastReadNoWait;
  unsigned int CcFastReadWait;
  unsigned int CcFastReadResourceMiss;
  unsigned int CcFastReadNotPossible;
  unsigned int CcFastMdlReadNoWait;
  unsigned int CcFastMdlReadWait;
  unsigned int CcFastMdlReadResourceMiss;
  unsigned int CcFastMdlReadNotPossible;
  unsigned int CcMapDataNoWait;
  unsigned int CcMapDataWait;
  unsigned int CcMapDataNoWaitMiss;
  unsigned int CcMapDataWaitMiss;
  unsigned int CcPinMappedDataCount;
  unsigned int CcPinReadNoWait;
  unsigned int CcPinReadWait;
  unsigned int CcPinReadNoWaitMiss;
  unsigned int CcPinReadWaitMiss;
  unsigned int CcCopyReadNoWait;
  unsigned int CcCopyReadWait;
  unsigned int CcCopyReadNoWaitMiss;
  unsigned int CcCopyReadWaitMiss;
  unsigned int CcMdlReadNoWait;
  unsigned int CcMdlReadWait;
  unsigned int CcMdlReadNoWaitMiss;
  unsigned int CcMdlReadWaitMiss;
  unsigned int CcReadAheadIos;
  unsigned int CcLazyWriteIos;
  unsigned int CcLazyWritePages;
  unsigned int CcDataFlushes;
  unsigned int CcDataPages;
  unsigned int ContextSwitches;
  unsigned int FirstLevelTbFills;
  unsigned int SecondLevelTbFills;
  unsigned int SystemCalls;
};

/* 956 */
struct __declspec(align(4)) _CM_FLOPPY_DEVICE_DATA
{
  unsigned __int16 Version;
  unsigned __int16 Revision;
  char Size[8];
  unsigned int MaxDensity;
  unsigned int MountDensity;
  unsigned __int8 StepRateHeadUnloadTime;
  unsigned __int8 HeadLoadTime;
  unsigned __int8 MotorOffTime;
  unsigned __int8 SectorLengthCode;
  unsigned __int8 SectorPerTrack;
  unsigned __int8 ReadWriteGapLength;
  unsigned __int8 DataTransferLength;
  unsigned __int8 FormatGapLength;
  unsigned __int8 FormatFillCharacter;
  unsigned __int8 HeadSettleTime;
  unsigned __int8 MotorSettleTime;
  unsigned __int8 MaximumTrackValue;
  unsigned __int8 DataTransferRate;
};

/* 957 */
struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
{
  unsigned __int64 BeginAddress;
  unsigned __int64 EndAddress;
  unsigned __int64 ExceptionHandler;
  unsigned __int64 HandlerData;
  unsigned __int64 PrologEndAddress;
};

/* 958 */
struct _FILE_RENAME_INFORMATION
{
  unsigned __int8 ReplaceIfExists;
  void *RootDirectory;
  _STRING FileName;
};

/* 959 */
struct NvV64
{
  unsigned int low;
  unsigned int high;
};

/* 960 */
struct __cppobj ID3DXRenderToSurface : IUnknown
{
};

/* 961 */
struct _D3DXRTS_DESC
{
  unsigned int Width;
  unsigned int Height;
  _D3DFORMAT Format;
  int DepthStencil;
  _D3DFORMAT DepthStencilFormat;
};

/* 962 */
struct /*VFT*/ ID3DXRenderToSurface_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *GetDevice)(ID3DXRenderToSurface *this, D3DDevice **);
  int (__stdcall *GetDesc)(ID3DXRenderToSurface *this, _D3DXRTS_DESC *);
  int (__stdcall *BeginScene)(ID3DXRenderToSurface *this, D3DSurface *, const _D3DVIEWPORT8 *);
  int (__stdcall *EndScene)(ID3DXRenderToSurface *this);
};

/* 963 */
struct _SYSTEM_FLAGS_INFORMATION
{
  unsigned int Flags;
};

/* 964 */
struct $2B5B3004EA38C9713AA7A291F048C9C2
{
  unsigned int size;
  unsigned int monochrome[31];
};

/* 965 */
struct _LDT_SIZE
{
  unsigned int Length;
};

/* 966 */
struct _PROCESS_ACCESS_TOKEN
{
  void *Token;
  void *Thread;
};

/* 967 */
struct $B262B5F723D73C839CA3FF07CA63F3D8
{
  unsigned int S;
  unsigned int T;
  unsigned int R;
  unsigned int Q;
};

/* 968 */
struct $E2C366DBC04E99CA355412F7F3681228
{
  float AmbientColor[3];
  float DiffuseColor[3];
  float SpecularColor[3];
  float LocalRange;
  float InfiniteHalfVector[3];
  float InfiniteDirection[3];
  float SpotFalloff[3];
  float SpotDirection[4];
  float LocalPosition[3];
  float LocalAttenuation[3];
  unsigned int Reserved0c[3];
};

/* 969 */
struct Nv12CelsiusPrimitive
{
  unsigned int ctx_Switch;
  unsigned int Reserved00[63];
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int SetWarningEnable;
  unsigned int GetState;
  unsigned int WaitForIdle;
  unsigned int Reserved01[3];
  unsigned int SyncSetRead;
  unsigned int SyncSetWrite;
  unsigned int SyncSetModulo;
  unsigned int SyncIncrementWrite;
  unsigned int SyncStall;
  unsigned int Reserved17[3];
  unsigned int PmTrigger;
  unsigned int Reserved02[15];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaA;
  unsigned int SetContextDmaB;
  unsigned int SetContextDmaVertex;
  unsigned int SetContextDmaState;
  unsigned int SetContextDmaColor;
  unsigned int SetContextDmaZeta;
  unsigned int Reserved03[25];
  unsigned int SetSurfaceClipHorizontal;
  unsigned int SetSurfaceClipVertical;
  unsigned int SetSurfaceFormat;
  unsigned int SetSurfacePitch;
  unsigned int SetSurfaceColorOffset;
  unsigned int SetSurfaceZetaOffset;
  unsigned int SetTextureOffset[2];
  unsigned int SetTextureFormat[2];
  unsigned int SetTextureControl0[2];
  unsigned int SetTextureControl1[2];
  unsigned int SetTextureControl2[2];
  unsigned int SetTextureImageRect[2];
  unsigned int SetTextureFilter[2];
  unsigned int SetTexturePalette[2];
  unsigned int Reserved04[2];
  unsigned int SetCombinerAlphaICW[2];
  unsigned int SetCombinerColorICW[2];
  unsigned int SetCombineFactor[2];
  unsigned int SetCombinerAlphaOCW[2];
  unsigned int SetCombiner0ColorOCW;
  unsigned int SetCombiner1ColorOCW;
  unsigned int SetCombinerSpecularFogCW0;
  unsigned int SetCombinerSpecularFogCW1;
  unsigned int SetControl0;
  unsigned int SetLightControl;
  unsigned int SetColorMaterial;
  unsigned int SetFogMode;
  unsigned int SetFogGenMode;
  unsigned int SetFogEnable;
  unsigned int SetFogColor;
  unsigned int SetColorKeyColor[2];
  unsigned int SetWindowClipType;
  unsigned int Reserved05[2];
  unsigned int SetWindowClipHorizontal[8];
  unsigned int SetWindowClipVertical[8];
  unsigned int SetAlphaTestEnable;
  unsigned int SetBlendEnable;
  unsigned int SetCullFaceEnable;
  unsigned int SetDepthTestEnable;
  unsigned int SetDitherEnable;
  unsigned int SetLightingEnable;
  unsigned int SetPointParamsEnable;
  unsigned int SetPointSmoothEnable;
  unsigned int SetLineSmoothEnable;
  unsigned int SetPolySmoothEnable;
  unsigned int SetSkinEnable;
  unsigned int SetStencilTestEnable;
  unsigned int SetPolyOffsetPointEnable;
  unsigned int SetPolyOffsetLineEnable;
  unsigned int SetPolyOffsetFillEnable;
  unsigned int SetAlphaFunc;
  unsigned int SetAlphaRef;
  unsigned int SetBlendFuncSfactor;
  unsigned int SetBlendFuncDfactor;
  unsigned int SetBlendColor;
  unsigned int SetBlendEquation;
  unsigned int SetDepthFunc;
  unsigned int SetColorMask;
  unsigned int SetDepthMask;
  unsigned int SetStencilMask;
  unsigned int SetStencilFunc;
  unsigned int SetStencilFuncRef;
  unsigned int SetStencilFuncMask;
  unsigned int SetStencilOpFail;
  unsigned int SetStencilOpZfail;
  unsigned int SetStencilOpZpass;
  unsigned int SetShadeMode;
  unsigned int SetLineWidth;
  float SetPolygonOffsetScaleFactor;
  float SetPolygonOffsetBias;
  unsigned int SetFrontPolygonMode;
  unsigned int SetBackPolygonMode;
  float SetClipMin;
  float SetClipMax;
  unsigned int SetCullFace;
  unsigned int SetFrontFace;
  unsigned int SetNormalizationEnable;
  unsigned int SetMaterialEmission[3];
  unsigned int SetMaterialAlpha;
  unsigned int SetSpecularEnable;
  unsigned int SetLightEnableMask;
  $B262B5F723D73C839CA3FF07CA63F3D8 SetTexgen[2];
  unsigned int SetTextureMatrix0Enable;
  unsigned int SetTextureMatrix1Enable;
  unsigned int SetTLMode;
  unsigned int SetPointSize;
  unsigned int SetSwathWidth;
  unsigned int SetFlatShadeOp;
  unsigned int Reserved06[2];
  float SetModelViewMatrix0[16];
  float SetModelViewMatrix1[16];
  float SetInverseModelViewMatrix0[16];
  float SetInverseModelViewMatrix1[16];
  float SetCompositeMatrix[16];
  float SetTextureMatrix0[16];
  float SetTextureMatrix1[16];
  unsigned int Reserved07[16];
  float SetTexgenSPlane0[4];
  float SetTexgenTPlane0[4];
  float SetTexgenRPlane0[4];
  float SetTexgenQPlane0[4];
  float SetTexgenSPlane1[4];
  float SetTexgenTPlane1[4];
  float SetTexgenRPlane1[4];
  float SetTexgenQPlane1[4];
  float SetFogParams[3];
  float SetFogPlane[4];
  unsigned int Reserved08[1];
  float SetSpecularParams[6];
  unsigned int Reserved09[3];
  float SetSceneAmbientColor[3];
  unsigned int Reserved0a[6];
  float SetViewportOffset[4];
  float SetPointParams[8];
  float SetEyePosition[4];
  unsigned int Flush;
  float SetEyeDirectionSW[3];
  unsigned int Reserved0b[50];
  $E2C366DBC04E99CA355412F7F3681228 SetLight[8];
  float SetVertex3f[3];
  unsigned int Reserved0d[3];
  float SetVertex4f[4];
  __int16 SetVertex4s[4];
  float SetNormal3f[3];
  unsigned int Reserved0e[1];
  __int16 SetNormal3s[3];
  unsigned __int16 Reserved0f[5];
  float SetDiffuseColor4f[4];
  float SetDiffuseColor3f[3];
  unsigned int SetDiffuseColor4ub;
  float SetSpecularColor4f[4];
  float SetSpecularColor3f[3];
  unsigned int SetSpecularColor4ub;
  float SetTexcoord0_2f[2];
  __int16 SetTexcoord0_2s[2];
  unsigned int Reserved10[1];
  float SetTexcoord0_4f[4];
  __int16 SetTexcoord0_4s[4];
  float SetTexcoord1_2f[2];
  __int16 SetTexcoord1_2s[2];
  unsigned int Reserved11[1];
  float SetTexcoord1_4f[4];
  __int16 SetTexcoord1_4s[4];
  float SetFog1f;
  float SetWeight1f;
  unsigned int Reserved12[1];
  unsigned int SetEdgeFlag;
  unsigned int InvalidateVertexCacheFile;
  unsigned int InvalidateVertexFile;
  unsigned int TlNop;
  unsigned int TlSync;
  unsigned int SetVertexArrayOffset;
  unsigned int SetVertexArrayFormat;
  unsigned int SetDiffuseArrayOffset;
  unsigned int SetDiffuseArrayFormat;
  unsigned int SetSpecularArrayOffset;
  unsigned int SetSpecularArrayFormat;
  unsigned int SetTexCoord0ArrayOffset;
  unsigned int SetTexCoord0ArrayFormat;
  unsigned int SetTexCoord1ArrayOffset;
  unsigned int SetTexCoord1ArrayFormat;
  unsigned int SetNormalArrayOffset;
  unsigned int SetNormalArrayFormat;
  unsigned int SetWeightArrayOffset;
  unsigned int SetWeightArrayFormat;
  unsigned int SetFogArrayOffset;
  unsigned int SetFogArrayFormat;
  unsigned int Reserved13[47];
  unsigned int SetBeginEnd;
  unsigned __int16 ArrayElement16[256];
  unsigned int Reserved14[63];
  unsigned int SetBeginEnd2;
  unsigned int ArrayElement32[64];
  unsigned int Reserved15[127];
  unsigned int SetBeginEnd3;
  unsigned int DrawArrays[128];
  unsigned int DebugInit[10];
  unsigned int Reserved1628[117];
  unsigned int SetBeginEnd4;
  unsigned int InlineArray[512];
};

/* 970 */
struct _OBJECTID
{
  _GUID Lineage;
  unsigned int Uniquifier;
};

/* 971 */
struct _SYSTEM_ALARM_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 972 */
struct IMAGE_LOAD_CONFIG_DIRECTORY64
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int GlobalFlagsClear;
  unsigned int GlobalFlagsSet;
  unsigned int CriticalSectionDefaultTimeout;
  unsigned int DeCommitFreeBlockThreshold;
  unsigned int DeCommitTotalFreeThreshold;
  unsigned __int64 LockPrefixTable;
  unsigned int MaximumAllocationSize;
  unsigned int VirtualMemoryThreshold;
  unsigned int ProcessHeapFlags;
  unsigned int ProcessAffinityMask;
  unsigned __int16 CSDVersion;
  unsigned __int16 Reserved1;
  __unaligned __declspec(align(1)) unsigned __int64 EditList;
  unsigned int Reserved[1];
};

/* 973 */
struct LIST_ENTRY64
{
  unsigned __int64 Flink;
  unsigned __int64 Blink;
};

/* 974 */
struct __unaligned __declspec(align(4)) $380DC85CBB6A4E9213A1E6EDAA45C4A6
{
  unsigned __int64 SectionPointer;
  unsigned int CheckSum;
};

/* 975 */
union $8E6DB3DCAB35EC9EBE2AB9D0EDC6393C
{
  LIST_ENTRY64 HashLinks;
  $380DC85CBB6A4E9213A1E6EDAA45C4A6 __s1;
};

/* 976 */
union $9C844D1DD620CC8F98347FFE33D7B4A3
{
  unsigned int TimeDateStamp;
  unsigned __int64 LoadedImports;
};

/* 977 */
struct _LDR_DATA_TABLE_ENTRY64
{
  LIST_ENTRY64 InLoadOrderLinks;
  LIST_ENTRY64 InMemoryOrderLinks;
  LIST_ENTRY64 InInitializationOrderLinks;
  unsigned __int64 DllBase;
  unsigned __int64 EntryPoint;
  unsigned int SizeOfImage;
  _STRING64 FullDllName;
  _STRING64 BaseDllName;
  unsigned int Flags;
  unsigned __int16 LoadCount;
  unsigned __int16 TlsIndex;
  $8E6DB3DCAB35EC9EBE2AB9D0EDC6393C ___u11;
  $9C844D1DD620CC8F98347FFE33D7B4A3 ___u12;
};

/* 978 */
struct _SYSTEM_MEMORY_INFO
{
  unsigned __int8 *StringOffset;
  unsigned __int16 ValidCount;
  unsigned __int16 TransitionCount;
  unsigned __int16 ModifiedCount;
  unsigned __int16 PageTableCount;
};

/* 979 */
struct linger
{
  unsigned __int16 l_onoff;
  unsigned __int16 l_linger;
};

/* 980 */
struct $2C6C91A4B6D3372EAE7210E9B80886C9
{
  float AmbientColor[3];
  float DiffuseColor[3];
  float SpecularColor[3];
  float LocalRange;
  float InfiniteHalfVector[3];
  float InfiniteDirection[3];
  float SpotFalloff[3];
  float SpotDirection[4];
  float LocalPosition[3];
  float LocalAttenuation[3];
  unsigned int Reserved0874[3];
};

/* 981 */
struct Nv11CelsiusPrimitive
{
  unsigned int ctx_Switch;
  unsigned int Reserved0004[63];
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int SetWarningEnable;
  unsigned int GetState;
  unsigned int WaitForIdle;
  unsigned int Reserved0114[3];
  unsigned int SetFlipRead;
  unsigned int SetFlipWrite;
  unsigned int SetFlipModulo;
  unsigned int FlipIncrementWrite;
  unsigned int FlipStall;
  unsigned int Reserved0134[3];
  unsigned int PmTrigger;
  unsigned int Reserved0144[15];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaA;
  unsigned int SetContextDmaB;
  unsigned int SetContextDmaVertex;
  unsigned int SetContextDmaState;
  unsigned int SetContextDmaColor;
  unsigned int SetContextDmaZeta;
  unsigned int Reserved019c[25];
  unsigned int SetSurfaceClipHorizontal;
  unsigned int SetSurfaceClipVertical;
  unsigned int SetSurfaceFormat;
  unsigned int SetSurfacePitch;
  unsigned int SetSurfaceColorOffset;
  unsigned int SetSurfaceZetaOffset;
  unsigned int SetTextureOffset[2];
  unsigned int SetTextureFormat[2];
  unsigned int SetTextureControl0[2];
  unsigned int SetTextureControl1[2];
  unsigned int SetTextureControl2[2];
  unsigned int SetTextureImageRect[2];
  unsigned int SetTextureFilter[2];
  unsigned int SetTexturePalette[2];
  unsigned int Reserved0258[2];
  unsigned int SetCombinerAlphaICW[2];
  unsigned int SetCombinerColorICW[2];
  unsigned int SetCombineFactor[2];
  unsigned int SetCombinerAlphaOCW[2];
  unsigned int SetCombiner0ColorOCW;
  unsigned int SetCombiner1ColorOCW;
  unsigned int SetCombinerSpecularFogCW0;
  unsigned int SetCombinerSpecularFogCW1;
  unsigned int SetControl0;
  unsigned int SetLightControl;
  unsigned int SetColorMaterial;
  unsigned int SetFogMode;
  unsigned int SetFogGenMode;
  unsigned int SetFogEnable;
  unsigned int SetFogColor;
  unsigned int SetColorKeyColor[2];
  unsigned int SetWindowClipType;
  unsigned int Reserved02b8[2];
  unsigned int SetWindowClipHorizontal[8];
  unsigned int SetWindowClipVertical[8];
  unsigned int SetAlphaTestEnable;
  unsigned int SetBlendEnable;
  unsigned int SetCullFaceEnable;
  unsigned int SetDepthTestEnable;
  unsigned int SetDitherEnable;
  unsigned int SetLightingEnable;
  unsigned int SetPointParamsEnable;
  unsigned int SetPointSmoothEnable;
  unsigned int SetLineSmoothEnable;
  unsigned int SetPolySmoothEnable;
  unsigned int SetSkinEnable;
  unsigned int SetStencilTestEnable;
  unsigned int SetPolyOffsetPointEnable;
  unsigned int SetPolyOffsetLineEnable;
  unsigned int SetPolyOffsetFillEnable;
  unsigned int SetAlphaFunc;
  unsigned int SetAlphaRef;
  unsigned int SetBlendFuncSfactor;
  unsigned int SetBlendFuncDfactor;
  unsigned int SetBlendColor;
  unsigned int SetBlendEquation;
  unsigned int SetDepthFunc;
  unsigned int SetColorMask;
  unsigned int SetDepthMask;
  unsigned int SetStencilMask;
  unsigned int SetStencilFunc;
  unsigned int SetStencilFuncRef;
  unsigned int SetStencilFuncMask;
  unsigned int SetStencilOpFail;
  unsigned int SetStencilOpZfail;
  unsigned int SetStencilOpZpass;
  unsigned int SetShadeMode;
  unsigned int SetLineWidth;
  float SetPolygonOffsetScaleFactor;
  float SetPolygonOffsetBias;
  unsigned int SetFrontPolygonMode;
  unsigned int SetBackPolygonMode;
  float SetClipMin;
  float SetClipMax;
  unsigned int SetCullFace;
  unsigned int SetFrontFace;
  unsigned int SetNormalizationEnable;
  float SetMaterialEmission[3];
  float SetMaterialAlpha;
  unsigned int SetSpecularEnable;
  unsigned int SetLightEnableMask;
  $B262B5F723D73C839CA3FF07CA63F3D8 SetTexgen[2];
  unsigned int SetTextureMatrix0Enable;
  unsigned int SetTextureMatrix1Enable;
  unsigned int SetTLMode;
  unsigned int SetPointSize;
  unsigned int SetSwathWidth;
  unsigned int SetFlatShadeOp;
  unsigned int Reserved03f8[2];
  float SetModelViewMatrix0[16];
  float SetModelViewMatrix1[16];
  float SetInverseModelViewMatrix0[16];
  float SetInverseModelViewMatrix1[16];
  float SetCompositeMatrix[16];
  float SetTextureMatrix0[16];
  float SetTextureMatrix1[16];
  unsigned int Reserved05c0[16];
  float SetTexgenSPlane0[4];
  float SetTexgenTPlane0[4];
  float SetTexgenRPlane0[4];
  float SetTexgenQPlane0[4];
  float SetTexgenSPlane1[4];
  float SetTexgenTPlane1[4];
  float SetTexgenRPlane1[4];
  float SetTexgenQPlane1[4];
  float SetFogParams[3];
  float SetFogPlane[4];
  unsigned int Reserved069c[1];
  float SetSpecularParams[6];
  unsigned int Reserved06b8[3];
  float SetSceneAmbientColor[3];
  unsigned int Reserved06d0[6];
  float SetViewportOffset[4];
  float SetPointParams[8];
  float SetEyePosition[4];
  unsigned int Flush;
  float SetEyeDirectionSW[3];
  unsigned int Reserved0738[50];
  $2C6C91A4B6D3372EAE7210E9B80886C9 SetLight[8];
  float SetVertex3f[3];
  unsigned int Reserved0c0c[3];
  float SetVertex4f[4];
  int SetVertex4s[2];
  float SetNormal3f[3];
  unsigned int Reserved0c3c[1];
  int SetNormal3s[2];
  unsigned int Reserved0c48[2];
  float SetDiffuseColor4f[4];
  float SetDiffuseColor3f[3];
  unsigned int SetDiffuseColor4ub;
  float SetSpecularColor4f[4];
  float SetSpecularColor3f[3];
  unsigned int SetSpecularColor4ub;
  float SetTexcoord0_2f[2];
  int SetTexcoord0_2s;
  unsigned int Reserved0c9c[1];
  float SetTexcoord0_4f[4];
  int SetTexcoord0_4s[2];
  float SetTexcoord1_2f[2];
  int SetTexcoord1_2s;
  unsigned int Reserved0cc4[1];
  float SetTexcoord1_4f[4];
  int SetTexcoord1_4s[2];
  float SetFog1f;
  float SetWeight1f;
  unsigned int Reserved0ce8[1];
  unsigned int SetEdgeFlag;
  unsigned int InvalidateVertexCacheFile;
  unsigned int InvalidateVertexFile;
  unsigned int TlNop;
  unsigned int TlSync;
  unsigned int SetVertexArrayOffset;
  unsigned int SetVertexArrayFormat;
  unsigned int SetDiffuseArrayOffset;
  unsigned int SetDiffuseArrayFormat;
  unsigned int SetSpecularArrayOffset;
  unsigned int SetSpecularArrayFormat;
  unsigned int SetTexCoord0ArrayOffset;
  unsigned int SetTexCoord0ArrayFormat;
  unsigned int SetTexCoord1ArrayOffset;
  unsigned int SetTexCoord1ArrayFormat;
  unsigned int SetNormalArrayOffset;
  unsigned int SetNormalArrayFormat;
  unsigned int SetWeightArrayOffset;
  unsigned int SetWeightArrayFormat;
  unsigned int SetFogArrayOffset;
  unsigned int SetFogArrayFormat;
  unsigned int SetLogicOpEnable;
  unsigned int SetLogicOp;
  unsigned int Reserved0d48[45];
  unsigned int SetBeginEnd;
  unsigned int ArrayElement16[128];
  unsigned int Reserved1000[63];
  unsigned int SetBeginEnd2;
  unsigned int ArrayElement32[64];
  unsigned int Reserved1200[127];
  unsigned int SetBeginEnd3;
  unsigned int DrawArrays[128];
  unsigned int DebugInit[10];
  unsigned int Reserved1628[117];
  unsigned int SetBeginEnd4;
  unsigned int InlineArray[512];
};

/* 982 */
struct _SYSTEM_INTERRUPT_INFORMATION
{
  unsigned int ContextSwitches;
  unsigned int DpcCount;
  unsigned int DpcRate;
  unsigned int TimeIncrement;
  unsigned int DpcBypassCount;
  unsigned int ApcBypassCount;
};

/* 983 */
struct __declspec(align(8)) _RTL_RANGE
{
  unsigned __int64 Start;
  unsigned __int64 End;
  void *UserData;
  void *Owner;
  unsigned __int8 Attributes;
  unsigned __int8 Flags;
};

/* 984 */
struct _SECURITY_TOKEN_AUDIT_DATA
{
  unsigned int Length;
  unsigned int GrantMask;
  unsigned int DenyMask;
};

/* 985 */
struct timeval
{
  int tv_sec;
  int tv_usec;
};

/* 986 */
struct _DSFX_ECHO_MONO_PARAMS
{
  _DSFX_ECHO_MONO_STATE State;
  unsigned int dwGain;
};

/* 987 */
struct __declspec(align(4)) _SYSTEM_QUERY_TIME_ADJUST_INFORMATION
{
  unsigned int TimeAdjustment;
  unsigned int TimeIncrement;
  unsigned __int8 Enable;
};

/* 988 */
struct HMETAFILE__
{
  int unused;
};

/* 989 */
struct _TOKEN_OWNER
{
  void *Owner;
};

/* 990 */
struct _RTL_HEAP_PARAMETERS
{
  unsigned int Length;
  unsigned int SegmentReserve;
  unsigned int SegmentCommit;
  unsigned int DeCommitFreeBlockThreshold;
  unsigned int DeCommitTotalFreeThreshold;
  unsigned int MaximumAllocationSize;
  unsigned int VirtualMemoryThreshold;
  unsigned int InitialCommit;
  unsigned int InitialReserve;
  int (__stdcall *CommitRoutine)(void *, void **, unsigned int *);
  unsigned int Reserved[2];
};

/* 991 */
struct __declspec(align(8)) _FILE_BASIC_INFORMATION
{
  _LARGE_INTEGER CreationTime;
  _LARGE_INTEGER LastAccessTime;
  _LARGE_INTEGER LastWriteTime;
  _LARGE_INTEGER ChangeTime;
  unsigned int FileAttributes;
};

/* 992 */
struct __declspec(align(4)) _FILE_STANDARD_INFORMATION
{
  _LARGE_INTEGER AllocationSize;
  _LARGE_INTEGER EndOfFile;
  unsigned int NumberOfLinks;
  unsigned __int8 DeletePending;
  unsigned __int8 Directory;
};

/* 993 */
struct _FILE_INTERNAL_INFORMATION
{
  _LARGE_INTEGER IndexNumber;
};

/* 994 */
struct _FILE_POSITION_INFORMATION
{
  _LARGE_INTEGER CurrentByteOffset;
};

/* 995 */
struct __declspec(align(4)) _FILE_NAME_INFORMATION
{
  unsigned int FileNameLength;
  char FileName[1];
};

/* 996 */
struct _FILE_ALL_INFORMATION
{
  _FILE_BASIC_INFORMATION BasicInformation;
  _FILE_STANDARD_INFORMATION StandardInformation;
  _FILE_INTERNAL_INFORMATION InternalInformation;
  _FILE_EA_INFORMATION EaInformation;
  _FILE_ACCESS_INFORMATION AccessInformation;
  _FILE_POSITION_INFORMATION PositionInformation;
  _FILE_MODE_INFORMATION ModeInformation;
  _FILE_ALIGNMENT_INFORMATION AlignmentInformation;
  _FILE_NAME_INFORMATION NameInformation;
};

/* 997 */
struct _ACCESS_DENIED_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 998 */
struct _IMAGE_DOS_HEADER
{
  unsigned __int16 e_magic;
  unsigned __int16 e_cblp;
  unsigned __int16 e_cp;
  unsigned __int16 e_crlc;
  unsigned __int16 e_cparhdr;
  unsigned __int16 e_minalloc;
  unsigned __int16 e_maxalloc;
  unsigned __int16 e_ss;
  unsigned __int16 e_sp;
  unsigned __int16 e_csum;
  unsigned __int16 e_ip;
  unsigned __int16 e_cs;
  unsigned __int16 e_lfarlc;
  unsigned __int16 e_ovno;
  unsigned __int16 e_res[4];
  unsigned __int16 e_oemid;
  unsigned __int16 e_oeminfo;
  unsigned __int16 e_res2[10];
  int e_lfanew;
};

/* 999 */
struct _DSCAPS
{
  unsigned int dwFree2DBuffers;
  unsigned int dwFree3DBuffers;
  unsigned int dwFreeBufferSGEs;
  unsigned int dwMemoryAllocated;
};

/* 1000 */
struct _CM_ROM_BLOCK
{
  unsigned int Address;
  unsigned int Size;
};

/* 1001 */
struct _FILE_PIPE_INFORMATION
{
  unsigned int ReadMode;
  unsigned int CompletionMode;
};

/* 1002 */
struct NVDE_TEST_PARAMETERS
{
  unsigned int CallBackAddress;
};

/* 1003 */
struct __declspec(align(4)) _SYSTEM_POWER_INFORMATION
{
  unsigned int MaxIdlenessAllowed;
  unsigned int Idleness;
  unsigned int TimeRemaining;
  unsigned __int8 CoolingMode;
};

/* 1004 */
struct __cppobj IPersist : IUnknown
{
};

/* 1005 */
struct /*VFT*/ IPersist_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *GetClassID)(IPersist *this, _GUID *);
};

/* 1006 */
struct _LAST_EXCEPTION_LOG
{
  _EXCEPTION_RECORD ExceptionRecord;
  _CONTEXT ContextRecord;
  unsigned int ControlPc;
  _EXCEPTION_DISPOSITION Disposition;
  unsigned int HandlerData[5];
};

/* 1007 */
struct HINSTANCE__
{
  int unused;
};

/* 1008 */
struct _DXFILELOADRESOURCE
{
  HINSTANCE__ *hModule;
  const unsigned __int16 *lpName;
  const unsigned __int16 *lpType;
};

/* 1009 */
struct _KTRAP_FRAME
{
  unsigned int DbgEbp;
  unsigned int DbgEip;
  unsigned int DbgArgMark;
  unsigned int DbgArgPointer;
  unsigned int TempSegCs;
  unsigned int TempEsp;
  unsigned int Edx;
  unsigned int Ecx;
  unsigned int Eax;
  _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Ebx;
  unsigned int Ebp;
  unsigned int ErrCode;
  unsigned int Eip;
  unsigned int SegCs;
  unsigned int EFlags;
  unsigned int HardwareEsp;
  unsigned int HardwareSegSs;
};

/* 1010 */
struct _DSFX_AMPMOD_MONO_PARAMS
{
  _DSFX_AMPMOD_MONO_STATE State;
};

/* 1011 */
struct _DSENVELOPEDESC
{
  unsigned int dwEG;
  unsigned int dwMode;
  unsigned int dwDelay;
  unsigned int dwAttack;
  unsigned int dwHold;
  unsigned int dwDecay;
  unsigned int dwRelease;
  unsigned int dwSustain;
  int lPitchScale;
  int lFilterCutOff;
};

/* 1012 */
struct _FPO_DATA
{
  unsigned int ulOffStart;
  unsigned int cbProcSize;
  unsigned int cdwLocals;
  unsigned __int16 cdwParams;
  unsigned __int16 cbProlog : 8;
  unsigned __int16 cbRegs : 3;
  unsigned __int16 fHasSEH : 1;
  unsigned __int16 fUseBP : 1;
  unsigned __int16 reserved : 1;
  unsigned __int16 cbFrame : 2;
};

/* 1013 */
struct _D3DGAMMARAMP
{
  unsigned __int8 red[256];
  unsigned __int8 green[256];
  unsigned __int8 blue[256];
};

/* 1014 */
struct _CSTRING
{
  unsigned __int16 Length;
  unsigned __int16 MaximumLength;
  const char *Buffer;
};

/* 1015 */
struct $A2E0EF4B814F6ABA6C22D3CE7EF3495E
{
  unsigned int size;
  unsigned int monochrome[63];
};

/* 1016 */
struct __declspec(align(4)) _FILE_TRACKING_INFORMATION
{
  void *DestinationFile;
  unsigned int ObjectInformationLength;
  char ObjectInformation[1];
};

/* 1017 */
struct _PROCESS_SESSION_INFORMATION
{
  unsigned int SessionId;
};

/* 1018 */
struct _DSFILTERDESC
{
  unsigned int dwMode;
  unsigned int dwQCoefficient;
  unsigned int adwCoefficients[4];
};

/* 1019 */
struct $410D9883537241CF15ED774E1E5362B1
{
  unsigned int Settable;
  unsigned __int16 TagIndex;
  unsigned __int16 AllocatorBackTraceIndex;
  unsigned int Reserved[2];
};

/* 1020 */
struct $9982DB339D027BF9D9C73E7D57B25DEC
{
  unsigned int CommittedSize;
  unsigned int UnCommittedSize;
  void *FirstEntry;
  void *LastEntry;
};

/* 1021 */
union $20341FD23CAB3CE3858926F0426E2A30
{
  $410D9883537241CF15ED774E1E5362B1 Block;
  $9982DB339D027BF9D9C73E7D57B25DEC Segment;
};

/* 1022 */
struct _RTL_HEAP_WALK_ENTRY
{
  void *DataAddress;
  unsigned int DataSize;
  unsigned __int8 OverheadBytes;
  unsigned __int8 SegmentIndex;
  unsigned __int16 Flags;
  $20341FD23CAB3CE3858926F0426E2A30 ___u5;
};

/* 1023 */
struct _SYSTEM_DEVICE_INFORMATION
{
  unsigned int NumberOfDisks;
  unsigned int NumberOfFloppies;
  unsigned int NumberOfCdRoms;
  unsigned int NumberOfTapes;
  unsigned int NumberOfSerialPorts;
  unsigned int NumberOfParallelPorts;
};

/* 1024 */
struct __cppobj ID3DXSkinMesh : IUnknown
{
};

/* 1025 */
struct /*VFT*/ ID3DXSkinMesh_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  unsigned int (__stdcall *GetNumFaces)(ID3DXSkinMesh *this);
  unsigned int (__stdcall *GetNumVertices)(ID3DXSkinMesh *this);
  unsigned int (__stdcall *GetFVF)(ID3DXSkinMesh *this);
  int (__stdcall *GetDeclaration)(ID3DXSkinMesh *this, unsigned int *);
  unsigned int (__stdcall *GetOptions)(ID3DXSkinMesh *this);
  int (__stdcall *GetDevice)(ID3DXSkinMesh *this, D3DDevice **);
  int (__stdcall *GetVertexBuffer)(ID3DXSkinMesh *this, D3DVertexBuffer **);
  int (__stdcall *GetIndexBuffer)(ID3DXSkinMesh *this, D3DIndexBuffer **);
  int (__stdcall *LockVertexBuffer)(ID3DXSkinMesh *this, unsigned int, unsigned __int8 **);
  int (__stdcall *UnlockVertexBuffer)(ID3DXSkinMesh *this);
  int (__stdcall *LockIndexBuffer)(ID3DXSkinMesh *this, unsigned int, unsigned __int8 **);
  int (__stdcall *UnlockIndexBuffer)(ID3DXSkinMesh *this);
  int (__stdcall *LockAttributeBuffer)(ID3DXSkinMesh *this, unsigned int, unsigned int **);
  int (__stdcall *UnlockAttributeBuffer)(ID3DXSkinMesh *this);
  unsigned int (__stdcall *GetNumBones)(ID3DXSkinMesh *this);
  int (__stdcall *GetOriginalMesh)(ID3DXSkinMesh *this, ID3DXMesh **);
  int (__stdcall *SetBoneInfluence)(ID3DXSkinMesh *this, unsigned int, unsigned int, const unsigned int *, const float *);
  unsigned int (__stdcall *GetNumBoneInfluences)(ID3DXSkinMesh *this, unsigned int);
  int (__stdcall *GetBoneInfluence)(ID3DXSkinMesh *this, unsigned int, unsigned int *, float *);
  int (__stdcall *GetMaxVertexInfluences)(ID3DXSkinMesh *this, unsigned int *);
  int (__stdcall *GetMaxFaceInfluences)(ID3DXSkinMesh *this, unsigned int *);
  int (__stdcall *ConvertToBlendedMesh)(ID3DXSkinMesh *this, unsigned int, unsigned int *const, unsigned int *, unsigned int *, ID3DXBuffer **, ID3DXMesh **);
  int (__stdcall *ConvertToIndexedBlendedMesh)(ID3DXSkinMesh *this, unsigned int, unsigned int *const, unsigned int, unsigned int *, unsigned int *, ID3DXBuffer **, ID3DXMesh **);
  int (__stdcall *GenerateSkinnedMesh)(ID3DXSkinMesh *this, unsigned int, float, unsigned int *const, unsigned int *, ID3DXMesh **);
  int (__stdcall *UpdateSkinnedMesh)(ID3DXSkinMesh *this, const D3DXMATRIX *, ID3DXMesh *);
};

/* 1026 */
struct _DESCRIPTOR_TABLE_ENTRY
{
  unsigned int Selector;
  _LDT_ENTRY Descriptor;
};

/* 1027 */
struct _DSFX_MINIREVERB_PARAMS
{
  _DSFX_MINIREVERB_STATE State;
  unsigned int dwDelayLineLengths[8];
  unsigned int dwReflectionTaps[8];
  unsigned int dwReflectionGains[8];
  unsigned int dwInputIIRCoefficients[2];
  unsigned int dwInputIIRDelay;
  unsigned int dwOutputIIRCoefficients[2];
  unsigned int dwOutputIIRDelay;
};

/* 1028 */
struct _s__ThrowInfo
{
  unsigned int attributes;
  void (__stdcall *pmfnUnwind)();
  int (*pForwardCompat)(...);
  const _s__CatchableTypeArray *pCatchableTypeArray;
};

/* 1029 */
struct __cppobj ID3DXSprite : IUnknown
{
};

/* 1030 */
struct /*VFT*/ ID3DXSprite_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *GetDevice)(ID3DXSprite *this, D3DDevice **);
  int (__stdcall *Begin)(ID3DXSprite *this);
  int (__stdcall *Draw)(ID3DXSprite *this, D3DTexture *, const tagRECT *, const D3DXVECTOR2 *, const D3DXVECTOR2 *, float, const D3DXVECTOR2 *, unsigned int);
  int (__stdcall *DrawTransform)(ID3DXSprite *this, D3DTexture *, const tagRECT *, const D3DXMATRIX *, unsigned int);
  int (__stdcall *End)(ID3DXSprite *this);
};

/* 1031 */
struct _SYSTEM_POWER_POLICY
{
  unsigned int Revision;
  POWER_ACTION_POLICY PowerButton;
  POWER_ACTION_POLICY SleepButton;
  POWER_ACTION_POLICY LidClose;
  _SYSTEM_POWER_STATE LidOpenWake;
  unsigned int Reserved;
  POWER_ACTION_POLICY Idle;
  unsigned int IdleTimeout;
  unsigned __int8 IdleSensitivity;
  unsigned __int8 Spare2[3];
  _SYSTEM_POWER_STATE MinSleep;
  _SYSTEM_POWER_STATE MaxSleep;
  _SYSTEM_POWER_STATE ReducedLatencySleep;
  unsigned int WinLogonFlags;
  unsigned int Spare3;
  unsigned int DozeS4Timeout;
  unsigned int BroadcastCapacityResolution;
  SYSTEM_POWER_LEVEL DischargePolicy[4];
  unsigned int VideoTimeout;
  unsigned __int8 VideoDimDisplay;
  unsigned int VideoReserved[3];
  unsigned int SpindownTimeout;
  unsigned __int8 OptimizeForPower;
  unsigned __int8 FanThrottleTolerance;
  unsigned __int8 ForcedThrottle;
  unsigned __int8 MinThrottle;
  POWER_ACTION_POLICY OverThrottled;
};

/* 1032 */
struct __cppobj D3DVolumeTexture : D3DBaseTexture
{
};

/* 1033 */
struct _IMAGE_RESOURCE_DIR_STRING_U
{
  unsigned __int16 Length;
  unsigned __int16 NameString[1];
};

/* 1034 */
struct _POOLED_USAGE_AND_LIMITS
{
  unsigned int PeakPagedPoolUsage;
  unsigned int PagedPoolUsage;
  unsigned int PagedPoolLimit;
  unsigned int PeakNonPagedPoolUsage;
  unsigned int NonPagedPoolUsage;
  unsigned int NonPagedPoolLimit;
  unsigned int PeakPagefileUsage;
  unsigned int PagefileUsage;
  unsigned int PagefileLimit;
};

/* 1035 */
struct __declspec(align(2)) _CM_SCSI_DEVICE_DATA
{
  unsigned __int16 Version;
  unsigned __int16 Revision;
  unsigned __int8 HostIdentifier;
};

/* 1036 */
struct BATTERY_REPORTING_SCALE
{
  unsigned int Granularity;
  unsigned int Capacity;
};

/* 1037 */
struct _complex
{
  long double x;
  long double y;
};

/* 1038 */
struct _SYSTEM_AUDIT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int SidStart;
};

/* 1039 */
struct _RTL_TIME_ZONE_INFORMATION
{
  int Bias;
  unsigned __int16 StandardName[32];
  _TIME_FIELDS StandardStart;
  int StandardBias;
  unsigned __int16 DaylightName[32];
  _TIME_FIELDS DaylightStart;
  int DaylightBias;
};

/* 1040 */
struct _exception
{
  int type;
  char *name;
  long double arg1;
  long double arg2;
  long double retval;
};

/* 1041 */
struct _SYSTEM_OBJECT_INFORMATION
{
  unsigned int NextEntryOffset;
  void *Object;
  void *CreatorUniqueProcess;
  unsigned __int16 CreatorBackTraceIndex;
  unsigned __int16 Flags;
  int PointerCount;
  int HandleCount;
  unsigned int PagedPoolCharge;
  unsigned int NonPagedPoolCharge;
  void *ExclusiveProcessId;
  void *SecurityDescriptor;
  _OBJECT_NAME_INFORMATION NameInfo;
};

/* 1042 */
struct _FILE_FS_SIZE_INFORMATION
{
  _LARGE_INTEGER TotalAllocationUnits;
  _LARGE_INTEGER AvailableAllocationUnits;
  unsigned int SectorsPerAllocationUnit;
  unsigned int BytesPerSector;
};

/* 1043 */
struct _SYSTEM_AUDIT_OBJECT_ACE
{
  _ACE_HEADER Header;
  unsigned int Mask;
  unsigned int Flags;
  _GUID ObjectType;
  _GUID InheritedObjectType;
  unsigned int SidStart;
};

/* 1044 */
struct _D3DRASTER_STATUS
{
  int InVBlank;
  unsigned int ScanLine;
};

/* 1045 */
struct _DSFX_CHORUS_MONO_PARAMS
{
  _DSFX_CHORUS_MONO_STATE State;
  unsigned int dwGain;
  unsigned int dwModScale;
};

/* 1046 */
struct _D3DPixelShaderDef
{
  unsigned int PSAlphaInputs[8];
  unsigned int PSFinalCombinerInputsABCD;
  unsigned int PSFinalCombinerInputsEFG;
  unsigned int PSConstant0[8];
  unsigned int PSConstant1[8];
  unsigned int PSAlphaOutputs[8];
  unsigned int PSRGBInputs[8];
  unsigned int PSCompareMode;
  unsigned int PSFinalCombinerConstant0;
  unsigned int PSFinalCombinerConstant1;
  unsigned int PSRGBOutputs[8];
  unsigned int PSCombinerCount;
  unsigned int PSTextureModes;
  unsigned int PSDotMapping;
  unsigned int PSInputTexture;
  unsigned int PSC0Mapping;
  unsigned int PSC1Mapping;
  unsigned int PSFinalCombinerConstants;
};

/* 1047 */
struct _D3DPixelShaderDefFile
{
  unsigned int FileID;
  _D3DPixelShaderDef Psd;
};

/* 1048 */
struct _DBGKD_CONTROL_REPORT
{
  unsigned int Dr6;
  unsigned int Dr7;
  unsigned __int16 InstructionCount;
  unsigned __int16 ReportFlags;
  unsigned __int8 InstructionStream[16];
  unsigned __int16 SegCs;
  unsigned __int16 SegDs;
  unsigned __int16 SegEs;
  unsigned __int16 SegFs;
  unsigned int EFlags;
};

/* 1049 */
struct _SECURITY_ADVANCED_QUALITY_OF_SERVICE
{
  unsigned int Length;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  unsigned __int8 ContextTrackingMode;
  unsigned __int8 EffectiveOnly;
  _SECURITY_TOKEN_PROXY_DATA *ProxyData;
  _SECURITY_TOKEN_AUDIT_DATA *AuditData;
};

/* 1050 */
struct _SYSTEM_REGISTRY_QUOTA_INFORMATION
{
  unsigned int RegistryQuotaAllowed;
  unsigned int RegistryQuotaUsed;
  unsigned int PagedPoolSize;
};

/* 1051 */
struct HCOLORSPACE__
{
  int unused;
};

/* 1052 */
struct _LD_FROM_DASHBOARD
{
  unsigned int dwContext;
  unsigned __int8 Reserved[3068];
};

/* 1053 */
struct _DSFX_I3DL2REVERB_DELAYLINE
{
  unsigned int dwBase;
  unsigned int dwLength;
};

/* 1054 */
struct NvGraphicsState::_PerFragmentState
{
  unsigned __int32 pad0 : 8;
  unsigned __int32 alphaFunc : 4;
  unsigned __int32 pad1 : 4;
  unsigned __int32 depthFunc : 4;
  unsigned __int32 pad2 : 4;
  unsigned __int32 depthMask : 1;
  unsigned __int32 pad3 : 1;
  unsigned __int32 alphaMask : 1;
  unsigned __int32 redMask : 1;
  unsigned __int32 greenMask : 1;
  unsigned __int32 blueMask : 1;
  unsigned __int32 pad4 : 2;
  unsigned __int32 pad5 : 4;
  unsigned __int32 stencilFunc : 4;
  unsigned __int32 stencilRef : 8;
  unsigned __int32 pad6 : 8;
  unsigned __int32 stencilMask : 8;
  unsigned __int32 sfailOp : 4;
  unsigned __int32 zfailOp : 4;
  unsigned __int32 zpassOp : 4;
  unsigned __int32 pad7 : 20;
  unsigned __int32 blendEquation : 3;
  unsigned __int32 pad8 : 1;
  unsigned __int32 srcBlend : 4;
  unsigned __int32 destBlend : 4;
  unsigned __int32 pad9 : 20;
};

/* 1055 */
struct NvGraphicsState::_PerVertexState
{
  float pad0[4];
  float primaryColor[4];
  float secondaryColor[3];
  float fogCoord;
  float texCoord[2][4];
  float normal[3];
  float pad1;
  float vertexWeight;
  unsigned int pad2[7];
  unsigned int pad3;
  unsigned __int32 edgeFlag : 8;
  unsigned __int32 pad4 : 24;
  unsigned int pad5[2];
};

/* 1056 */
struct NvGraphicsState::_VertexArrayState
{
  unsigned int vertexOffset;
  unsigned int vertexFormat;
  unsigned int diffuseOffset;
  unsigned int diffuseFormat;
  unsigned int specularOffset;
  unsigned int specularFormat;
  unsigned int texCoord0Offset;
  unsigned int texCoord0Format;
  unsigned int texCoord1Offset;
  unsigned int texCoord1Format;
  unsigned int normalOffset;
  unsigned int normalFormat;
  unsigned int weightOffset;
  unsigned int weightFormat;
  unsigned int fogOffset;
  unsigned int fogFormat;
};

/* 1057 */
struct NvGraphicsState::_PrimitiveAssmState
{
  unsigned int primAssm[48];
};

/* 1058 */
struct NvGraphicsState
{
  NvGraphicsState::_PerFragmentState PerFragmentState;
  NvGraphicsState::_PerVertexState PerVertexState;
  NvGraphicsState::_VertexArrayState VertexArrayState;
  NvGraphicsState::_PrimitiveAssmState PrimitiveAssmState;
};

/* 1059 */
struct _PROCESS_BASIC_INFORMATION
{
  int ExitStatus;
  _PEB *PebBaseAddress;
  unsigned int AffinityMask;
  int BasePriority;
  unsigned int UniqueProcessId;
  unsigned int InheritedFromUniqueProcessId;
};

/* 1060 */
struct NvS64
{
  unsigned int low;
  int high;
};

/* 1061 */
struct __declspec(align(8)) _KEY_NODE_INFORMATION
{
  _LARGE_INTEGER LastWriteTime;
  unsigned int TitleIndex;
  unsigned int ClassOffset;
  unsigned int ClassLength;
  unsigned int NameLength;
  unsigned __int16 Name[1];
};

/* 1062 */
struct _CM_PCCARD_DEVICE_DATA
{
  unsigned __int8 Flags;
  unsigned __int8 ErrorCode;
  unsigned __int16 Reserved;
  unsigned int BusData;
  unsigned int DeviceId;
  unsigned int LegacyBaseAddress;
  unsigned __int8 IRQMap[16];
};

/* 1063 */
struct XNKEY
{
  unsigned __int8 ab[16];
};

/* 1064 */
struct _TOKEN_GROUPS
{
  unsigned int GroupCount;
  _SID_AND_ATTRIBUTES Groups[1];
};

/* 1065 */
struct __declspec(align(4)) _FILE_NOTIFY_INFORMATION
{
  unsigned int NextEntryOffset;
  unsigned int Action;
  unsigned int FileNameLength;
  char FileName[1];
};

/* 1066 */
struct __declspec(align(8)) _TIMER_BASIC_INFORMATION
{
  _LARGE_INTEGER RemainingTime;
  unsigned __int8 TimerState;
};

/* 1067 */
struct _IO_RESOURCE_REQUIREMENTS_LIST
{
  unsigned int ListSize;
  _INTERFACE_TYPE InterfaceType;
  unsigned int BusNumber;
  unsigned int SlotNumber;
  unsigned int Reserved[3];
  unsigned int AlternativeLists;
  _IO_RESOURCE_LIST List[1];
};

/* 1068 */
struct _IMAGE_RESOURCE_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned __int16 NumberOfNamedEntries;
  unsigned __int16 NumberOfIdEntries;
};

/* 1069 */
struct _UNICODE_PREFIX_TABLE
{
  __int16 NodeTypeCode;
  __int16 NameLength;
  _UNICODE_PREFIX_TABLE_ENTRY *NextPrefixTree;
  _UNICODE_PREFIX_TABLE_ENTRY *LastNextEntry;
};

/* 1070 */
struct _CM_SONIC_DEVICE_DATA
{
  unsigned __int16 Version;
  unsigned __int16 Revision;
  unsigned __int16 DataConfigurationRegister;
  unsigned __int8 EthernetAddress[8];
};

/* 1071 */
struct AUDIO_ALLOC_MEMORY
{
  unsigned int uSize;
  unsigned int uAlignMask;
  unsigned int pLinearAddress;
  unsigned int uRef;
};

/* 1072 */
struct _ldiv_t
{
  int quot;
  int rem;
};

/* 1073 */
struct _IMAGE_NT_HEADERS64
{
  unsigned int Signature;
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_OPTIONAL_HEADER64 OptionalHeader;
};

/* 1074 */
struct _iobuf
{
  char *_ptr;
  int _cnt;
  char *_base;
  int _flag;
  int _file;
  int _charbuf;
  int _bufsiz;
  char *_tmpfname;
};

/* 1075 */
struct _IMAGE_TLS_DIRECTORY64
{
  unsigned __int64 StartAddressOfRawData;
  unsigned __int64 EndAddressOfRawData;
  unsigned __int64 AddressOfIndex;
  unsigned __int64 AddressOfCallBacks;
  unsigned int SizeOfZeroFill;
  unsigned int Characteristics;
};

/* 1076 */
struct __cppobj _DS3DLISTENER
{
  unsigned int dwSize;
  D3DXVECTOR3 vPosition;
  D3DXVECTOR3 vVelocity;
  D3DXVECTOR3 vOrientFront;
  D3DXVECTOR3 vOrientTop;
  float flDistanceFactor;
  float flRolloffFactor;
  float flDopplerFactor;
};

/* 1077 */
struct _SE_IMPERSONATION_STATE
{
  void *Token;
  unsigned __int8 CopyOnOpen;
  unsigned __int8 EffectiveOnly;
  _SECURITY_IMPERSONATION_LEVEL Level;
};

/* 1078 */
struct _FILE_COMPRESSION_INFORMATION
{
  _LARGE_INTEGER CompressedFileSize;
  unsigned __int16 CompressionFormat;
  unsigned __int8 CompressionUnitShift;
  unsigned __int8 ChunkShift;
  unsigned __int8 ClusterShift;
  unsigned __int8 Reserved[3];
};

/* 1079 */
struct _KSWITCHFRAME
{
  unsigned int ExceptionList;
  unsigned int Eflags;
  unsigned int RetAddr;
};

/* 1080 */
struct _DSFX_I3DL2REVERB_PARAMS
{
  _DSFX_I3DL2REVERB_STATE State;
  _DSFX_I3DL2REVERB_DELAYLINE DelayLines[14];
  unsigned int dwReflectionsInputDelay[5];
  unsigned int dwShortReverbInputDelay;
  unsigned int dwLongReverbInputDelay[8];
  unsigned int dwReflectionsFeedbackDelay[4];
  unsigned int dwLongReverbFeedbackDelay;
  unsigned int dwShortReverbInputGain[8];
  unsigned int dwLongReverbInputGain;
  unsigned int dwLongReverbCrossfeedGain;
  unsigned int dwReflectionsOutputGain[4];
  unsigned int dwShortReverbOutputGain;
  unsigned int dwLongReverbOutputGain;
  unsigned int dwChannelCount;
  _DSFX_I3DL2REVERB_IIR IIR[10];
};

/* 1081 */
struct D3DK::PixelShader
{
  unsigned int Signature;
  unsigned int RefCount;
  unsigned int D3DOwned;
  _D3DPixelShaderDef *pPSDef;
};

/* 1082 */
union D3DK::_HWREG
{
  volatile unsigned int Reg032[1];
};

/* 1083 */
struct D3DK::InlineAttributeData
{
  unsigned int UP_Count;
  unsigned int UP_Delta;
};

/* 1084 */
struct D3DK::_D3DOVERRIDERENDERSTATE
{
  int Override;
  unsigned int Value;
};

/* 1085 */
struct __declspec(align(4)) D3DK::_FieldDescription
{
  unsigned int Method;
  char *MethodName;
  unsigned int ReplicationCount[2];
  unsigned int ReplicationStride[2];
  char *FieldName;
  unsigned int FieldHighBit;
  unsigned int FieldLowBit;
  char FieldType;
};

/* 1086 */
union $D6B556A9AFDE3CAF1E77DC02DF7440F1
{
  unsigned int m_SetColorClearCommand1;
  unsigned int m_WaitForIdleCommand;
};

/* 1087 */
union $E6706222EC420BBF8706936B9B25F0F8
{
  unsigned int m_SetColorClearArgument1;
  unsigned int m_WaitForIdleArgument;
};

/* 1088 */
union $1B695396A10AA3A427310D7B894553D2
{
  unsigned int m_SetColorClearCommand2;
  unsigned int m_NoOperationCommand;
};

/* 1089 */
union $1941C7CA0E8E825CAEE44AE58A4C82C3
{
  unsigned int m_SetColorClearArgument2;
  unsigned int m_FenceCommand;
};

/* 1090 */
struct D3DK::FenceEncoding
{
  unsigned int m_SemaphoreCommand;
  unsigned int m_Time;
  $D6B556A9AFDE3CAF1E77DC02DF7440F1 ___u2;
  $E6706222EC420BBF8706936B9B25F0F8 ___u3;
  $1B695396A10AA3A427310D7B894553D2 ___u4;
  $1941C7CA0E8E825CAEE44AE58A4C82C3 ___u5;
};

/* 1091 */
struct D3DK::Fence
{
  unsigned int Time;
  D3DK::FenceEncoding *pEncoding;
  unsigned int Distance;
};

/* 1092 */
struct __declspec(align(4)) D3DK::VertexShaderSlot
{
  unsigned int StreamIndex;
  unsigned int Offset;
  unsigned int SizeAndType;
  unsigned __int8 Flags;
  unsigned __int8 Source;
};

/* 1093 */
struct D3DK::VertexShader
{
  unsigned int Signature;
  unsigned int RefCount;
  unsigned int Flags;
  unsigned int MaxSlot;
  unsigned int TextureCount;
  unsigned int ProgramSize;
  unsigned int ProgramAndConstantsDwords;
  unsigned int Dimensionality[4];
  D3DK::VertexShaderSlot Slot[20];
  unsigned int ProgramAndConstants[1];
};

/* 1094 */
struct D3DK::Light
{
  _D3DLIGHT8 Light8;
  unsigned int Flags;
  _D3DVECTOR Direction;
  float Falloff_L;
  float Falloff_M;
  float Falloff_N;
  float Scale;
  float W;
  D3DK::Light *pNext;
};

/* 1095 */
struct _D3DRECT
{
  int x1;
  int y1;
  int x2;
  int y2;
};

/* 1096 */
struct D3DK::CMiniport::GENERALINFO
{
  unsigned int ChipId;
  unsigned int VideoRamSize;
  unsigned int VideoRamType;
  unsigned int ChipIntrEn0;
  unsigned int MpVIPSlavePresent;
  unsigned int CrystalFreq;
  unsigned int MaskRevision;
};

/* 1097 */
struct D3DK::CMiniport::DACINFO
{
  unsigned int MClk;
  unsigned int VClk;
  unsigned int NVClk;
  unsigned int MPllM;
  unsigned int MPllN;
  unsigned int MPllO;
  unsigned int MPllP;
  unsigned int VPllM;
  unsigned int VPllN;
  unsigned int VPllO;
  unsigned int VPllP;
  unsigned int NVPllM;
  unsigned int NVPllN;
  unsigned int NVPllO;
  unsigned int NVPllP;
};

/* 1098 */
struct D3DK::CMiniport::HALINFO
{
  int FifoChID;
  unsigned int FifoMode;
  int FifoInUse;
  unsigned int FifoInstance;
  unsigned int FifoAllocCount;
  int FifoCacheDepth;
  unsigned int FifoObjectCount;
  unsigned int FifoIntrEn0;
  unsigned int FifoRetryCount;
  unsigned int FifoUserBase;
  unsigned int FifoContextAddr1;
  unsigned int FifoContextAddr2;
  unsigned int HashTableAddr;
  unsigned int GrChID;
  unsigned int GrCtxTable[2];
  unsigned int GrCtxTableBase;
  unsigned int GrCurrentObjects3d[2];
  unsigned int FbSave0;
  unsigned int FbSave1;
  unsigned int McSave;
  unsigned int McSaveIntrEn0;
};

/* 1099 */
struct D3DK::CMiniport::VIDEOMODETIMING
{
  unsigned int HorizontalVisible;
  unsigned int VerticalVisible;
  unsigned int Refresh;
  unsigned int HorizontalTotal;
  unsigned int HorizontalBlankStart;
  unsigned int HorizontalRetraceStart;
  unsigned int HorizontalRetraceEnd;
  unsigned int HorizontalBlankEnd;
  unsigned int VerticalTotal;
  unsigned int VerticalBlankStart;
  unsigned int VerticalRetraceStart;
  unsigned int VerticalRetraceEnd;
  unsigned int VerticalBlankEnd;
  unsigned int PixelClock;
  unsigned int HorizontalSyncPolarity;
  unsigned int VerticalSyncPolarity;
};

/* 1100 */
struct D3DK::CMiniport::VBLANKFLIPS
{
  int Pending;
  unsigned int Offset;
};

/* 1101 */
struct D3DK::CMiniport
{
  void *m_RegisterBase;
  unsigned int m_PresentationInterval;
  unsigned int m_SurfacePitch;
  unsigned int m_DisplayMode;
  unsigned int m_Format;
  void *m_InstMem;
  _KINTERRUPT m_InterruptObject;
  _KDPC m_Dpc;
  int m_InterruptsEnabled;
  D3DK::CMiniport::GENERALINFO m_GenInfo;
  D3DK::CMiniport::DACINFO m_DacInfo;
  D3DK::CMiniport::HALINFO m_HalInfo;
  D3DK::CMiniport::VIDEOMODETIMING m_VideoModeTiming;
  unsigned int m_VideoModeDepth;
  unsigned int m_FreeInstAddr;
  _HAL_SHUTDOWN_REGISTRATION m_ShutdownRegistration;
  D3DK::CMiniport::VBLANKFLIPS m_VBlankFlips[5];
  unsigned int m_VBlankFlipNext;
  unsigned int m_VBlankQueueNext;
  void (__cdecl *m_pVerticalBlankCallback)(unsigned int);
  _KEVENT m_VerticalBlankEvent;
  _KEVENT m_BusyBlockEvent;
  unsigned int m_CurrentAvInfo;
  int m_FirstFlip;
  volatile unsigned int m_VBlankFlipCount;
  _D3DGAMMARAMP m_GammaRamp[2];
  int m_GammaUpdated[2];
  unsigned int m_GammaCurrentIndex;
  volatile unsigned int m_VBlankCount;
  unsigned int m_OverlayVBlank;
  unsigned int m_DebugRegister[11];
  unsigned int m_PusherGetRunSize;
};

/* 1102 */
struct NvNotification
{
  $3CE0C3254588E91A04747A534C068EA8 timeStamp;
  unsigned int info32;
  unsigned __int16 info16;
  unsigned __int16 status;
};

/* 1103 */
struct __cppobj D3DK::CDevice : D3DDevice
{
  _XMETAL_PushBuffer m_Pusher;
  unsigned int m_DirtyFlags;
  unsigned int m_StateFlags;
  unsigned int *m_pPushBase;
  unsigned int *m_pPushLimit;
  unsigned int *m_pKickOff;
  unsigned int m_CpuTime;
  unsigned int m_PusherLastSegment;
  D3DK::Fence m_PusherSegment[16];
  D3DK::Fence m_PusherFence[64];
  unsigned int m_PusherPutRunSize;
  unsigned int m_PusherLastSize;
  unsigned int m_LastRunPushBufferTime;
  volatile unsigned int *m_pGpuTime;
  D3DPushBuffer *m_pPushBufferRecordResource;
  unsigned int m_PushBufferRecordWrapSize;
  unsigned int *m_pPushBufferRecordSavedThreshold;
  unsigned int *m_pPushBufferRecordSavedPut;
  D3DK::_HWREG *m_NvBase;
  unsigned int m_cRefs;
  D3DSurface *m_pRenderTarget;
  D3DSurface *m_pZBuffer;
  D3DK::PixelShader *m_pPixelShader;
  unsigned int m_ShaderUsesSpecFog;
  unsigned int m_ShaderAdjustsTexMode;
  unsigned int m_PSShaderStageProgram;
  unsigned int m_pPixelShaderConstants[16];
  D3DK::PixelShader m_UserPixelShader;
  D3DK::VertexShader *m_pVertexShader;
  unsigned int m_VertexShaderHandle;
  unsigned int m_IndexBase;
  D3DIndexBuffer *m_pIndexBuffer;
  D3DK::Light *m_pLights;
  unsigned int m_LightCount;
  D3DK::Light *m_pActiveLights;
  void *m_ReportAllocations[16];
  unsigned int m_TextureControl0Enabled[4];
  unsigned int m_TextureCubemapAndDimension[4];
  float m_WNear;
  float m_WFar;
  float m_InverseWFar;
  float m_ZScale;
  unsigned int m_TexGenInverseNeeded;
  float m_SuperSampleScaleX;
  float m_SuperSampleScaleY;
  float m_SuperSampleScale;
  float m_SuperSampleLODBias;
  unsigned int m_AlphaICW[8];
  unsigned int m_AlphaOCW[8];
  unsigned int m_ColorICW[8];
  unsigned int m_ColorOCW[8];
  unsigned int m_CombinerFlags;
  unsigned int m_ActiveCombinerStagesCount;
  unsigned int m_CachedIndexBase;
  _D3DMATRIX m_ProjectionViewportTransform;
  _D3DMATRIX m_ModelViewTransform[4];
  _D3DMATRIX m_ProjectionViewport;
  unsigned int m_VertexShaderInputHandle;
  unsigned int m_VertexShaderInputCount;
  _D3DSTREAM_INPUT m_VertexShaderInputStream[16];
  unsigned int m_InlineVertexDwords;
  unsigned int m_InlineStartOffset;
  unsigned int m_InlineDelta;
  D3DK::InlineAttributeData m_InlineAttributeData[16];
  unsigned int m_InlineAttributeCount;
  __declspec(align(16)) _D3DMATRIX m_Transform[10];
  _D3DVIEWPORT8 m_Viewport;
  _D3DMATERIAL8 m_Material;
  _D3DMATERIAL8 m_BackMaterial;
  D3DBaseTexture *m_Textures[4];
  D3DPalette *m_Palettes[4];
  float m_PixelShaderConstants[16][4];
  float m_VertexShaderConstants[192][4];
  unsigned int m_VertexShaderProgramSlots[136][4];
  unsigned int m_ConstantMode;
  void *m_pFrameBufferBase;
  void *m_pAntiAliasBufferBase;
  unsigned int m_FrameBufferCount;
  D3DSurface m_FrameBufferSurfaces[3];
  void *m_pAutoDepthBuffer;
  D3DSurface m_AutoDepthSurface;
  unsigned int m_DisplayWidth;
  unsigned int m_DisplayHeight;
  _D3DTILE m_Tile[8];
  _D3DRECT m_ScissorsRects[8];
  unsigned int m_ScissorsCount;
  int m_ScissorsExclusive;
  volatile Nv206eControl *m_pControlDma;
  D3DK::CMiniport m_Miniport;
  unsigned int m_PresentCount;
  unsigned int m_PresentationInterval;
  unsigned int m_dwOpcode;
  unsigned int m_dwSnapshot;
  unsigned int *m_pShaderCaptureBuffer;
  unsigned int *m_pShaderCapturePtr;
  unsigned int m_ColorContextDmaInstance;
  unsigned int m_ZetaContextDmaInstance;
  unsigned int m_CopyContextDmaInstance;
  unsigned __int8 *m_pCachedContiguousMemoryBase;
  volatile NvNotification *m_pMemCopyNotifiers;
  volatile NvNotification *m_pKelvinNotifiers;
};

/* 1104 */
struct D3DK::NV_PATCH_CURVE_INFO
{
  int order;
  int pad[3];
  float coeffs[16][4];
};

/* 1105 */
struct D3DK::NV_PATCH_FRAC_GUARD_INFO
{
  D3DK::NV_PATCH_CURVE_INFO *guardU0;
  D3DK::NV_PATCH_CURVE_INFO *guardV0;
  D3DK::NV_PATCH_CURVE_INFO *guardUCenter;
  D3DK::NV_PATCH_CURVE_INFO *guardVCenter;
  float *uMid;
  float *vMid;
  float *center;
};

/* 1106 */
struct D3DK::_D3DSTATENAME
{
  unsigned int m_State;
  char *m_Name;
};

/* 1107 */
struct D3DK::_D3DPERFNAMES
{
  char *m_PerformanceCounterNames[30];
  char *m_APICounterNames[235];
  D3DK::_D3DSTATENAME m_RenderStateNames[144];
  D3DK::_D3DSTATENAME m_TextureStateNames[32];
};

/* 1108 */
struct D3DK::NV_PATCH_FRAC_QUAD_GUARD_INFO
{
  D3DK::NV_PATCH_CURVE_INFO guardU00;
  D3DK::NV_PATCH_CURVE_INFO guardU01;
  D3DK::NV_PATCH_CURVE_INFO guardU10;
  D3DK::NV_PATCH_CURVE_INFO guardU11;
  D3DK::NV_PATCH_CURVE_INFO guardV00;
  D3DK::NV_PATCH_CURVE_INFO guardV01;
  D3DK::NV_PATCH_CURVE_INFO guardV10;
  D3DK::NV_PATCH_CURVE_INFO guardV11;
  D3DK::NV_PATCH_CURVE_INFO guardUCenter0;
  D3DK::NV_PATCH_CURVE_INFO guardUCenter1;
  D3DK::NV_PATCH_CURVE_INFO guardVCenter0;
  D3DK::NV_PATCH_CURVE_INFO guardVCenter1;
  float u0Mid[4];
  float v0Mid[4];
  float u1Mid[4];
  float v1Mid[4];
  float center[4];
};

/* 1109 */
struct $340E2339B6F20638ECF078A9232A2A6D
{
  float nu0;
  float nu1;
  float nv0;
  float nv1;
};

/* 1110 */
struct $0A6A20524125CC5CCD75B5DB45446513
{
  float n1;
  float n2;
  float n3;
};

/* 1111 */
union $B35083A97CF6D1D8D8983999B885FD38
{
  $340E2339B6F20638ECF078A9232A2A6D tensor;
  $0A6A20524125CC5CCD75B5DB45446513 tri;
};

/* 1112 */
struct D3DK::NV_PATCH_MAP_INFO
{
  unsigned int uorder;
  unsigned int vorder;
  float *rawData;
  int stride;
  int pitch;
  int ufStride;
  int vfStride;
  D3DK::NV_PATCH_VERTEX_FORMAT_TYPE maptype;
  D3DK::NV_PATCH_VERTEX_FORMAT_TYPE Originaltype;
  unsigned int dirtyFlags;
};

/* 1113 */
struct D3DK::NV_PATCH_ALLOC_CACHE
{
  void *pBaseCache;
  int bytesAllocCache;
  int countFreeCheck;
  int inUse;
  void *contextCache;
};

/* 1114 */
struct D3DK::FDMatrix
{
  int rows;
  int columns;
  int pad[2];
  float data[16][16][4];
};

/* 1115 */
struct D3DK::NV_PATCH_CORNER_INFO
{
  float corners[2][2][4];
};

/* 1116 */
struct D3DK::NV_PATCH_EVAL_OUTPUT
{
  float vertexAttribs[43][16][4];
};

/* 1117 */
struct D3DK::NV_PATCH_FRAC_TRI_GUARD_INFO
{
  D3DK::NV_PATCH_CURVE_INFO guard[3][2];
  D3DK::NV_PATCH_CURVE_INFO guardCenter[3];
  float mid[3][4];
  float center[4];
};

/* 1118 */
struct D3DK::NV_PATCH_QUAD_INFO
{
  D3DK::NV_PATCH_CURVE_INFO *pU0[16];
  D3DK::NV_PATCH_CURVE_INFO *pU1[16];
  D3DK::NV_PATCH_CURVE_INFO *pV0[16];
  D3DK::NV_PATCH_CURVE_INFO *pV1[16];
  D3DK::NV_PATCH_CURVE_INFO *pUInner[16];
  D3DK::NV_PATCH_CURVE_INFO *pVInner[16];
  D3DK::NV_PATCH_CORNER_INFO cornAttr[16];
  float *pCorners[16][2][2];
  int nu0;
  int nu1;
  int nv0;
  int nv1;
  int uMaxSegs;
  int vMaxSegs;
  int uMinSegs;
  int vMinSegs;
  int needUInner;
  int needVInner;
  int stitchTop;
  int stitchRight;
  int stitchBottom;
  int stitchLeft;
  int stitchUBegin;
  int stitchUEnd;
  int stitchVBegin;
  int stitchVEnd;
  int u0Dir;
  int v0Dir;
  int u1Dir;
  int v1Dir;
  int uMaxDir;
  int vMaxDir;
  float du0;
  float du1;
  float dv0;
  float dv1;
  float duMax;
  float dvMax;
  D3DK::NV_PATCH_CURVE_INFO *(*pSwatchUBegin)[16];
  D3DK::NV_PATCH_CURVE_INFO *(*pSwatchUEnd)[16];
  D3DK::NV_PATCH_CURVE_INFO *(*pSwatchVBegin)[16];
  D3DK::NV_PATCH_CURVE_INFO *(*pSwatchVEnd)[16];
  D3DK::NV_PATCH_CURVE_INFO *(*pCurvesTop)[16];
  D3DK::NV_PATCH_CURVE_INFO *(*pCurvesBot)[16];
  D3DK::NV_PATCH_EVAL_OUTPUT *pOut1;
  D3DK::NV_PATCH_EVAL_OUTPUT *pOut2;
  D3DK::FDMatrix *m00[16];
  D3DK::FDMatrix *m01[16];
  D3DK::FDMatrix *m10[16];
  D3DK::FDMatrix *m11[16];
  D3DK::NV_PATCH_FRAC_QUAD_GUARD_INFO *guardQF[16];
  D3DK::NV_PATCH_FRAC_TRI_GUARD_INFO *guardTF[16];
};

/* 1119 */
struct D3DK::NV_PATCH_INFO
{
  unsigned int evalEnables;
  unsigned int swEnables;
  int nAttr;
  int maxAttr;
  int firstAttr;
  unsigned int maxOrder;
  int maxSwatch;
  int nSwatchU;
  int nSwatchV;
  int fracSwatchU;
  int fracSwatchV;
  int swatchFlags;
  unsigned int flags;
  int flipT;
  int flipU;
  int flipV;
  int flipUV;
  int flipTUV;
  unsigned __int8 *cachedPB;
  unsigned int cachedPBSize;
  unsigned int cachedPBCounter;
  int reverse;
  $B35083A97CF6D1D8D8983999B885FD38 tess;
  $B35083A97CF6D1D8D8983999B885FD38 originaltess;
  D3DK::NV_PATCH_BASIS_TYPE basis;
  int srcNormal;
  int dstNormal;
  int rational;
  float startu;
  float endu;
  float startv;
  float endv;
  int srcUV[8];
  int dstUV[8];
  D3DK::NV_PATCH_MAP_INFO maps[16];
  D3DK::NV_PATCH_BACKEND_TYPE backendType;
  unsigned __int8 *buffer;
  unsigned int bufferLength;
  int vertexSize;
  void *context;
  D3DK::NV_PATCH_ALLOC_CACHE *pCache[10];
  unsigned int retVal;
  float *normalPatch;
  float *UVPatch;
  float *pSwatchCorner[16][2][2];
  float gridCorner[16][2][2][4];
  int setGridCorner;
  D3DK::NV_PATCH_CURVE_INFO tempCurve;
  D3DK::FDMatrix tempMatrix;
  D3DK::FDMatrix reparam;
  D3DK::FDMatrix *reduceTri[16];
  int bytesGuardCurve;
  int bytesGuardCurveAllAttr;
  D3DK::NV_PATCH_QUAD_INFO *quadInfo;
  void *pScratchBase;
  D3DK::FDMatrix *ppMatrixSetSS0[16];
  D3DK::NV_PATCH_CURVE_INFO *tempVBegin[16];
  D3DK::NV_PATCH_CURVE_INFO *tempVEnd[16];
  D3DK::NV_PATCH_CURVE_INFO *guardSetUInnerFrac[16];
  D3DK::NV_PATCH_CURVE_INFO *guardSetVInnerFrac[16];
  D3DK::NV_PATCH_CURVE_INFO *(*ppGuardSetUInnerFrac1[1])[16];
  D3DK::NV_PATCH_CURVE_INFO *(*ppGuardSetVInnerFrac1[1])[16];
  D3DK::NV_PATCH_CURVE_INFO *(**ppGuardSetUInnerFrac)[16];
  D3DK::NV_PATCH_CURVE_INFO *(**ppGuardSetVInnerFrac)[16];
};

/* 1120 */
struct D3DK::CMiniport::HW_HASHENTRY
{
  unsigned int ht_ObjectHandle;
  unsigned int ht_Context;
};

/* 1121 */
struct D3DK::CMiniport::OBJECTINFO
{
  unsigned int Handle;
  unsigned __int16 SubChannel;
  unsigned __int16 Engine;
  unsigned int ClassNum;
  unsigned int Instance;
};

/* 1122 */
struct D3DK::CMiniport::PUSHBUFFERFIXUPINFO
{
  unsigned int *pFixup;
  unsigned __int8 *pStart;
  unsigned int ReturnOffset;
  unsigned int *ReturnAddress;
};

/* 1123 */
struct D3DK::VGATBL::SEQ
{
  unsigned __int8 ClockMode;
  unsigned __int8 MapMask;
  unsigned __int8 FontAddr;
  unsigned __int8 MemMode;
};

/* 1124 */
struct D3DK::VGATBL::CRTC
{
  unsigned __int8 HTotal;
  unsigned __int8 HDispEnd;
  unsigned __int8 HBlankS;
  unsigned __int8 HBlankE;
  unsigned __int8 HSyncS;
  unsigned __int8 HSyncE;
  unsigned __int8 VTotal;
  unsigned __int8 Overflow;
  unsigned __int8 PresetRowScan;
  unsigned __int8 CellHeight;
  unsigned __int8 CursorS;
  unsigned __int8 CursorE;
  unsigned __int8 RegenSHigh;
  unsigned __int8 RegenSLow;
  unsigned __int8 CursorPosHigh;
  unsigned __int8 CursorPosLow;
  unsigned __int8 VSyncS;
  unsigned __int8 VSyncE;
  unsigned __int8 VDispE;
  unsigned __int8 RowOffset;
  unsigned __int8 ULineRow;
  unsigned __int8 VBlankS;
  unsigned __int8 VBlandE;
  unsigned __int8 Mode;
  unsigned __int8 LineCompare;
};

/* 1125 */
struct D3DK::VGATBL::GR
{
  unsigned __int8 SetReset;
  unsigned __int8 EnableSetReset;
  unsigned __int8 ColorCmp;
  unsigned __int8 ROP;
  unsigned __int8 ReadMap;
  unsigned __int8 Mode;
  unsigned __int8 Misc;
  unsigned __int8 CDC;
  unsigned __int8 BitMask;
};

/* 1126 */
struct __declspec(align(2)) D3DK::VGATBL
{
  unsigned __int8 columns;
  unsigned __int8 rows;
  unsigned __int8 char_height;
  unsigned __int16 RegenLenght;
  D3DK::VGATBL::SEQ seq_regs;
  unsigned __int8 PT_Misc;
  D3DK::VGATBL::CRTC crtc_regs;
  unsigned __int8 PT_ATC[20];
  D3DK::VGATBL::GR gr_regs;
};

/* 1127 */
struct __cppobj D3DK::CEnum : Direct3D
{
};

/* 1128 */
struct D3DK::CPatch
{
  unsigned int m_dwFlags;
  unsigned int m_dwHandle;
  unsigned int m_subpatchcount;
  unsigned int m_dwHeight;
  unsigned int m_dwWidth;
  unsigned int m_dwOrder;
  unsigned int m_dwStride;
  unsigned int m_dwVertexOffset;
  D3DK::NV_PATCH_VERTEX_FORMAT_TYPE m_dwTypes[16];
  D3DK::FDMatrix **m00;
  D3DK::FDMatrix **m10;
  D3DK::FDMatrix **m01;
  D3DK::FDMatrix **m11;
  D3DK::NV_PATCH_FRAC_QUAD_GUARD_INFO **guardQF;
  D3DK::NV_PATCH_QUAD_INFO **cachedQuadInfo;
  D3DK::NV_PATCH_FRAC_TRI_GUARD_INFO **guardTF;
  D3DK::NV_PATCH_INFO m_PatchData;
};

/* 1129 */
struct D3DK::_D3DPUSHBUFFERINFO
{
  unsigned int PushBufferSize;
  unsigned int PushSegmentSize;
  unsigned int PushSegmentCount;
  unsigned int *pPushBase;
  unsigned int *pPushLimit;
  unsigned __int64 PushBufferBytesWritten;
};

/* 1130 */
struct D3DK::_D3DWAITINFO
{
  unsigned int Count;
  unsigned __int64 Cycles;
};

/* 1131 */
struct D3DK::NV_PATCH_STATIC_DATA
{
  unsigned int RetessFDtag[2][2];
  D3DK::FDMatrix *RetessFDCache[2];
  int RetessFDMRU;
  D3DK::NV_PATCH_ALLOC_CACHE pCache[10];
};

/* 1132 */
struct D3DK::Stream
{
  unsigned int Stride;
  unsigned int Offset;
  D3DVertexBuffer *pVertexBuffer;
};

/* 1133 */
struct __declspec(align(8)) D3DK::_D3DPERF
{
  unsigned __int64 m_TSCLastResetVal;
  unsigned __int64 m_TSCLastPresentVal;
  D3DK::_D3DWAITINFO m_FrameTimeMin;
  D3DK::_D3DWAITINFO m_FrameTimeMax;
  unsigned int m_BreakCount;
  D3DK::_D3DPERF_PerformanceCounters m_Breakperfctr;
  unsigned int *m_pPutLocationAtReset;
  unsigned __int64 m_PushBufferEndDwordsSkipped;
  unsigned int m_FrameRateIntervalTime;
  unsigned int m_dwDumpFPSInfoMask;
  void (__stdcall *m_pfnDumpFrameRateInfoHandler)();
  unsigned int m_DumpWaitCycleTimesThreshold;
  void (__stdcall *m_pfnCycleThresholdHandler)(D3DK::_D3DPERF_PerformanceCounters, unsigned __int64);
  int m_SetRenderStateOverridesOnReset;
  unsigned int m_ProfileSamples;
  unsigned __int64 m_TSCProfileStartTime;
  unsigned __int16 m_ProfileData[105000];
  unsigned int m_ProfileBusyCounts[3];
  D3DK::_D3DOVERRIDERENDERSTATE m_RenderStateOverrides[144];
  D3DK::_D3DWAITINFO m_PerformanceCounters[30];
  unsigned int m_APICounters[235];
  unsigned int m_RenderStateCounters[144];
  unsigned int m_TextureStateCounters[32];
};

/* 1134 */
struct D3DK::PAGE_ZERO
{
  unsigned int m_PushBufferJump;
};

/* 1135 */
struct D3DK::NV_PATCH_ALLOC_CONTROL
{
  void *context;
  void *pBase;
  void *pAvail;
  void *pAllocatedBase;
  int bytesAlloc;
  int bytesUsed;
  D3DK::NV_PATCH_ALLOC_CACHE *pCache;
};

/* 1136 */
struct __cppobj __declspec(align(8)) D3DK::___D3DCYCLETIMER
{
  unsigned __int64 m_CycleStart;
  D3DK::_D3DPERF_PerformanceCounters m_perfctr;
};

/* 1137 */
struct D3DK::DISPLAYMODE
{
  unsigned int AvInfo;
  unsigned __int16 Width;
  unsigned __int16 Height;
  unsigned int DisplayMode;
};

/* 1138 */
struct _KEY_WRITE_TIME_INFORMATION
{
  _LARGE_INTEGER LastWriteTime;
};

/* 1139 */
struct HHOOK__
{
  int unused;
};

/* 1140 */
struct _PS_STATISTICS
{
  unsigned int Length;
  unsigned int ThreadCount;
  unsigned int HandleCount;
};

/* 1141 */
struct _SECURITY_DESCRIPTOR
{
  unsigned __int8 Revision;
  unsigned __int8 Sbz1;
  unsigned __int16 Control;
  void *Owner;
  void *Group;
  _ACL *Sacl;
  _ACL *Dacl;
};

/* 1142 */
struct $8B262EFF8EC72F64D2C5468A0D13607E
{
  unsigned __int32 : 31;
  unsigned __int32 ISO : 1;
};

/* 1143 */
union APU_AP_FLAGS
{
  $8B262EFF8EC72F64D2C5468A0D13607E fields;
  unsigned int uValue;
};

/* 1144 */
struct _KIDTENTRY
{
  unsigned __int16 Offset;
  unsigned __int16 Selector;
  unsigned __int16 Access;
  unsigned __int16 ExtendedOffset;
};

/* 1145 */
struct XNADDR
{
  unsigned __int8 bSizeOfStruct;
  unsigned __int8 bFlags;
  unsigned __int8 abEnet[6];
  in_addr ina;
};

/* 1146 */
struct NV07C_ALLOCATION_PARAMETERS
{
  unsigned int version;
  NvP64 pInfo;
  unsigned int logicalHeadId;
};

/* 1147 */
struct _D3DFIELD_STATUS
{
  _D3DFIELDTYPE Field;
  unsigned int VBlankCount;
};

/* 1148 */
struct _CM_PNP_BIOS_DEVICE_NODE
{
  unsigned __int16 Size;
  unsigned __int8 Node;
  __unaligned __declspec(align(1)) unsigned int ProductId;
  unsigned __int8 DeviceType[3];
  unsigned __int16 DeviceAttributes;
};

/* 1149 */
struct _SYSTEM_MEMORY_INFORMATION
{
  unsigned int InfoSize;
  unsigned int StringStart;
  _SYSTEM_MEMORY_INFO Memory[1];
};

/* 1150 */
struct $E99977354E4E248416B819669842BEC7
{
  void *DirectoryHandle;
};

/* 1151 */
struct $41A141D0CA77064BDD428D6B0F6EC2F2
{
  unsigned int DriveMap;
  unsigned __int8 DriveType[32];
};

/* 1152 */
union $68E88B10EE1201EEEF5919CE32334A31
{
  $E99977354E4E248416B819669842BEC7 Set;
  $41A141D0CA77064BDD428D6B0F6EC2F2 Query;
};

/* 1153 */
struct _PROCESS_DEVICEMAP_INFORMATION
{
  $68E88B10EE1201EEEF5919CE32334A31 ___u0;
};

/* 1154 */
struct _RANGE_LIST_ITERATOR
{
  _LIST_ENTRY *RangeListHead;
  _LIST_ENTRY *MergedHead;
  void *Current;
  unsigned int Stamp;
};

/* 1155 */
struct Nv04ControlDma
{
  unsigned int Ignored00[16];
  unsigned int Put;
  unsigned int Get;
  unsigned int Ignored01[2];
  unsigned int StallNotifier;
  unsigned int StallChannel;
  unsigned int Ignored02[2026];
};

/* 1156 */
struct HPEN__
{
  int unused;
};

/* 1157 */
struct _CURDIR
{
  _UNICODE_STRING DosPath;
  void *Handle;
};

/* 1158 */
struct __declspec(align(4)) _SECURITY_QUALITY_OF_SERVICE
{
  unsigned int Length;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  unsigned __int8 ContextTrackingMode;
  unsigned __int8 EffectiveOnly;
};

/* 1159 */
struct _LDT_INFORMATION
{
  unsigned int Start;
  unsigned int Length;
  _LDT_ENTRY LdtEntries[1];
};

/* 1160 */
struct _CM_MONITOR_DEVICE_DATA
{
  unsigned __int16 Version;
  unsigned __int16 Revision;
  unsigned __int16 HorizontalScreenSize;
  unsigned __int16 VerticalScreenSize;
  unsigned __int16 HorizontalResolution;
  unsigned __int16 VerticalResolution;
  unsigned __int16 HorizontalDisplayTimeLow;
  unsigned __int16 HorizontalDisplayTime;
  unsigned __int16 HorizontalDisplayTimeHigh;
  unsigned __int16 HorizontalBackPorchLow;
  unsigned __int16 HorizontalBackPorch;
  unsigned __int16 HorizontalBackPorchHigh;
  unsigned __int16 HorizontalFrontPorchLow;
  unsigned __int16 HorizontalFrontPorch;
  unsigned __int16 HorizontalFrontPorchHigh;
  unsigned __int16 HorizontalSyncLow;
  unsigned __int16 HorizontalSync;
  unsigned __int16 HorizontalSyncHigh;
  unsigned __int16 VerticalBackPorchLow;
  unsigned __int16 VerticalBackPorch;
  unsigned __int16 VerticalBackPorchHigh;
  unsigned __int16 VerticalFrontPorchLow;
  unsigned __int16 VerticalFrontPorch;
  unsigned __int16 VerticalFrontPorchHigh;
  unsigned __int16 VerticalSyncLow;
  unsigned __int16 VerticalSync;
  unsigned __int16 VerticalSyncHigh;
};

/* 1161 */
struct _PORT_DATA_INFORMATION
{
  unsigned int CountDataEntries;
  _PORT_DATA_ENTRY DataEntries[1];
};

/* 1162 */
struct _D3DXBONECOMBINATION
{
  unsigned int AttribId;
  unsigned int FaceStart;
  unsigned int FaceCount;
  unsigned int VertexStart;
  unsigned int VertexCount;
  unsigned int *BoneId;
};

/* 1163 */
struct $D19FE64D675A740147AEFFB064D80ACE
{
  unsigned int size;
  unsigned int monochrome[127];
};

/* 1164 */
struct _RTL_HEAP_USAGE
{
  unsigned int Length;
  unsigned int BytesAllocated;
  unsigned int BytesCommitted;
  unsigned int BytesReserved;
  unsigned int BytesReservedMaximum;
  _RTL_HEAP_USAGE_ENTRY *Entries;
  _RTL_HEAP_USAGE_ENTRY *AddedEntries;
  _RTL_HEAP_USAGE_ENTRY *RemovedEntries;
  unsigned int Reserved[8];
};

/* 1165 */
struct __declspec(align(4)) _KEY_FULL_INFORMATION
{
  _LARGE_INTEGER LastWriteTime;
  unsigned int TitleIndex;
  unsigned int ClassOffset;
  unsigned int ClassLength;
  unsigned int SubKeys;
  unsigned int MaxNameLen;
  unsigned int MaxClassLen;
  unsigned int Values;
  unsigned int MaxValueNameLen;
  unsigned int MaxValueDataLen;
  unsigned __int16 Class[1];
};

/* 1166 */
struct _ERWLOCK
{
  int LockCount;
  unsigned int WritersWaitingCount;
  unsigned int ReadersWaitingCount;
  unsigned int ReadersEntryCount;
  _KEVENT WriterEvent;
  _KSEMAPHORE ReaderSemaphore;
};

/* 1167 */
struct _D3DRECTPATCH_INFO
{
  unsigned int StartVertexOffsetWidth;
  unsigned int StartVertexOffsetHeight;
  unsigned int Width;
  unsigned int Height;
  unsigned int Stride;
  _D3DBASISTYPE Basis;
  _D3DORDERTYPE Order;
};

/* 1168 */
struct AUDIO_FREE_MEMORY
{
  unsigned int pLinearAddress;
  unsigned int uRef;
};

/* 1169 */
struct _TOKEN_PRIVILEGES
{
  unsigned int PrivilegeCount;
  _LUID_AND_ATTRIBUTES Privileges[1];
};

/* 1170 */
struct Nv06bTypedef
{
  unsigned int Reserved00[1984];
};

/* 1171 */
struct __declspec(align(4)) _FILE_FS_ATTRIBUTE_INFORMATION
{
  unsigned int FileSystemAttributes;
  int MaximumComponentNameLength;
  unsigned int FileSystemNameLength;
  char FileSystemName[1];
};

/* 1172 */
struct _SYSTEM_DPC_BEHAVIOR_INFORMATION
{
  unsigned int Spare;
  unsigned int DpcQueueDepth;
  unsigned int MinimumDpcRate;
  unsigned int AdjustDpcThreshold;
  unsigned int IdealDpcRate;
};

/* 1173 */
struct SYSTEM_POWER_CAPABILITIES
{
  unsigned __int8 PowerButtonPresent;
  unsigned __int8 SleepButtonPresent;
  unsigned __int8 LidPresent;
  unsigned __int8 SystemS1;
  unsigned __int8 SystemS2;
  unsigned __int8 SystemS3;
  unsigned __int8 SystemS4;
  unsigned __int8 SystemS5;
  unsigned __int8 HiberFilePresent;
  unsigned __int8 FullWake;
  unsigned __int8 VideoDimPresent;
  unsigned __int8 ApmPresent;
  unsigned __int8 UpsPresent;
  unsigned __int8 ThermalControl;
  unsigned __int8 ProcessorThrottle;
  unsigned __int8 ProcessorMinThrottle;
  unsigned __int8 ProcessorThrottleScale;
  unsigned __int8 spare2[4];
  unsigned __int8 DiskSpinDown;
  unsigned __int8 spare3[8];
  unsigned __int8 SystemBatteriesPresent;
  unsigned __int8 BatteriesAreShortTerm;
  BATTERY_REPORTING_SCALE BatteryScale[3];
  _SYSTEM_POWER_STATE AcOnLineWake;
  _SYSTEM_POWER_STATE SoftLidWake;
  _SYSTEM_POWER_STATE RtcWake;
  _SYSTEM_POWER_STATE MinDeviceWakeState;
  _SYSTEM_POWER_STATE DefaultLowLatencyWake;
};

/* 1174 */
struct __declspec(align(4)) _MUTANT_BASIC_INFORMATION
{
  int CurrentCount;
  unsigned __int8 OwnedByCaller;
  unsigned __int8 AbandonedState;
};

/* 1175 */
struct _SYSTEM_FILECACHE_INFORMATION
{
  unsigned int CurrentSize;
  unsigned int PeakSize;
  unsigned int PageFaultCount;
  unsigned int MinimumWorkingSet;
  unsigned int MaximumWorkingSet;
  unsigned int CurrentSizeIncludingTransitionInPages;
  unsigned int PeakSizeIncludingTransitionInPages;
  unsigned int spare[2];
};

/* 1176 */
union $980F6A28C67C8F3640106D01D4C85A6A
{
  unsigned int Characteristics;
  unsigned int OriginalFirstThunk;
};

/* 1177 */
struct _IMAGE_IMPORT_DESCRIPTOR
{
  $980F6A28C67C8F3640106D01D4C85A6A ___u0;
  unsigned int TimeDateStamp;
  unsigned int ForwarderChain;
  unsigned int Name;
  unsigned int FirstThunk;
};

/* 1178 */
struct _FILE_FS_DEVICE_INFORMATION
{
  unsigned int DeviceType;
  unsigned int Characteristics;
};

/* 1179 */
struct _SID
{
  unsigned __int8 Revision;
  unsigned __int8 SubAuthorityCount;
  _SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
  unsigned int SubAuthority[1];
};

/* 1180 */
struct _EXCEPTION_RECORD64
{
  int ExceptionCode;
  unsigned int ExceptionFlags;
  unsigned __int64 ExceptionRecord;
  unsigned __int64 ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int __unusedAlignment;
  unsigned __int64 ExceptionInformation[15];
};

/* 1181 */
struct _OBJECT_TYPE_LIST
{
  unsigned __int16 Level;
  unsigned __int16 Sbz;
  _GUID *ObjectType;
};

/* 1182 */
struct _TIME_ZONE_INFORMATION
{
  int Bias;
  unsigned __int16 StandardName[32];
  _SYSTEMTIME StandardDate;
  int StandardBias;
  unsigned __int16 DaylightName[32];
  _SYSTEMTIME DaylightDate;
  int DaylightBias;
};

/* 1183 */
struct _IO_COUNTERS
{
  unsigned __int64 ReadOperationCount;
  unsigned __int64 WriteOperationCount;
  unsigned __int64 OtherOperationCount;
  unsigned __int64 ReadTransferCount;
  unsigned __int64 WriteTransferCount;
  unsigned __int64 OtherTransferCount;
};

/* 1184 */
struct Nv08ATypedef
{
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int Reserved00[30];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextColorKey;
  unsigned int SetContextClipRectangle;
  unsigned int SetContextPattern;
  unsigned int SetContextRop;
  unsigned int SetContextBeta1;
  unsigned int SetContextBeta4;
  unsigned int SetContextSurface;
  unsigned int Reserved01[86];
  unsigned int SetColorConversion;
  unsigned int SetOperation;
  unsigned int SetColorFormat;
  unsigned int Point;
  unsigned int SizeOut;
  unsigned int SizeIn;
  unsigned int Reserved02[60];
  $5458815D4FD22685CA74CAFAECF65A10 Color[896];
};

/* 1185 */
struct _CM_VIDEO_DEVICE_DATA
{
  unsigned __int16 Version;
  unsigned __int16 Revision;
  unsigned int VideoClock;
};

/* 1186 */
struct __unaligned __declspec(align(4)) _D3DADAPTER_IDENTIFIER8
{
  char Driver[512];
  char Description[512];
  _LARGE_INTEGER DriverVersion;
  unsigned int VendorId;
  unsigned int DeviceId;
  unsigned int SubSysId;
  unsigned int Revision;
  _GUID DeviceIdentifier;
  unsigned int WHQLLevel;
};

/* 1187 */
struct __declspec(align(8)) _FILE_STREAM_INFORMATION
{
  unsigned int NextEntryOffset;
  unsigned int StreamNameLength;
  _LARGE_INTEGER StreamSize;
  _LARGE_INTEGER StreamAllocationSize;
  char StreamName[1];
};

/* 1188 */
struct POWER_STATE_HANDLER
{
  POWER_STATE_HANDLER_TYPE Type;
  unsigned __int8 RtcWake;
  unsigned __int8 Spare[3];
  int (__stdcall *Handler)(void *, int (__stdcall *)(void *), void *, int, int *volatile);
  void *Context;
};

/* 1189 */
struct NV07A_ALLOCATION_PARAMETERS
{
  unsigned int version;
  NvP64 pInfo;
  unsigned int logicalHeadId;
};

/* 1190 */
struct __cppobj IDirectSound
{
};

/* 1191 */
struct APU_AP_CREATE
{
  unsigned int pObjectDmaBuffer;
  unsigned int pObjectNotifiesBuffer;
  unsigned int pObjectGlobalNotifiesBuffer;
  APU_AP_FLAGS flags;
  unsigned int pioBase;
  unsigned int limitFifo;
  unsigned int limitBandwidth;
  unsigned int limitBlockClock;
  unsigned int overhead;
  unsigned int uVoiceCount;
  unsigned int uVoice3dCount;
  unsigned int uHRTFCount;
  unsigned int uSubmixCount;
  unsigned int uSegInCount;
  unsigned int uSGEInCount;
  unsigned int uSGEOutCount;
};

/* 1192 */
union $0055FF1BE34206123B9C488F0A43FAA0
{
  unsigned __int64 ForwarderString;
  unsigned __int64 Function;
  unsigned __int64 Ordinal;
  unsigned __int64 AddressOfData;
};

/* 1193 */
struct _IMAGE_THUNK_DATA64
{
  $0055FF1BE34206123B9C488F0A43FAA0 u1;
};

/* 1194 */
struct HDESK__
{
  int unused;
};

/* 1195 */
struct $8982B442158C3620B762A03D365B4423
{
  float S[4];
  float T[4];
  float R[4];
  float Q[4];
};

/* 1196 */
struct $9C29D771F79F15AD922A86CBAFA055D8
{
  float AmbientColor[3];
  float DiffuseColor[3];
  float SpecularColor[3];
  unsigned int Reserved0c24[7];
};

/* 1197 */
struct $CF35D219033B668D8A6B6FE5D44B9375
{
  float AmbientColor[3];
  float DiffuseColor[3];
  float SpecularColor[3];
  float LocalRange;
  float InfiniteHalfVector[3];
  float InfiniteDirection[3];
  float SpotFalloff[3];
  float SpotDirection[4];
  float LocalPosition[3];
  float LocalAttenuation[3];
  unsigned int Reserved1074[3];
};

/* 1198 */
struct $6E4E803E8B2B5592A78F2288EBF4D673
{
  float M[2];
};

/* 1199 */
struct $D536E33A5E195A4CA1918BF39C5D344F
{
  int M[2];
};

/* 1200 */
struct $37FEB7E0829342762FE60E7416A91DC5
{
  float M[4];
};

/* 1201 */
struct $A9993A8E3199EE2CE181764639B3EE90
{
  unsigned int Offset;
  unsigned int Format;
  unsigned int Address;
  unsigned int Control0;
  unsigned int Control1;
  unsigned int Filter;
  unsigned int Reserved1b18[1];
  unsigned int ImageRect;
  unsigned int Palette;
  unsigned int BorderColor;
  float SetBumpEnvMat00;
  float SetBumpEnvMat01;
  float SetBumpEnvMat11;
  float SetBumpEnvMat10;
  float SetBumpEnvScale;
  float SetBumpEnvOffset;
};

/* 1202 */
struct Nv20KelvinPrimitive
{
  unsigned int ctx_Switch;
  unsigned int Reserved0004[63];
  unsigned int NoOperation;
  unsigned int Notify;
  unsigned int SetWarningEnable;
  unsigned int GetState;
  unsigned int WaitForIdle;
  unsigned int Reserved0114[3];
  unsigned int SetFlipRead;
  unsigned int SetFlipWrite;
  unsigned int SetFlipModulo;
  unsigned int FlipIncrementWrite;
  unsigned int FlipStall;
  unsigned int Reserved0134[3];
  unsigned int PmTrigger;
  unsigned int Reserved0144[15];
  unsigned int SetContextDmaNotifies;
  unsigned int SetContextDmaA;
  unsigned int SetContextDmaB;
  unsigned int Reserved018c[1];
  unsigned int SetContextDmaState;
  unsigned int SetContextDmaColor;
  unsigned int SetContextDmaZeta;
  unsigned int SetContextDmaVertexA;
  unsigned int SetContextDmaVertexB;
  unsigned int SetContextDmaSemaphore;
  unsigned int SetContextDmaReport;
  unsigned int Reserved01ac[21];
  unsigned int SetSurfaceClipHorizontal;
  unsigned int SetSurfaceClipVertical;
  unsigned int SetSurfaceFormat;
  unsigned int SetSurfacePitch;
  unsigned int SetSurfaceColorOffset;
  unsigned int SetSurfaceZetaOffset;
  unsigned int Reserved0218[18];
  unsigned int SetCombinerAlphaICW[8];
  unsigned int Reserved0280[2];
  unsigned int SetCombinerSpecularFogCW0;
  unsigned int SetCombinerSpecularFogCW1;
  unsigned int SetControl0;
  unsigned int SetLightControl;
  unsigned int SetColorMaterial;
  unsigned int SetFogMode;
  unsigned int SetFogGenMode;
  unsigned int SetFogEnable;
  unsigned int SetFogColor;
  unsigned int Reserved02ac[2];
  unsigned int SetWindowClipType;
  unsigned int Reserved02b8[2];
  unsigned int SetWindowClipHorizontal[8];
  unsigned int SetWindowClipVertical[8];
  unsigned int SetAlphaTestEnable;
  unsigned int SetBlendEnable;
  unsigned int SetCullFaceEnable;
  unsigned int SetDepthTestEnable;
  unsigned int SetDitherEnable;
  unsigned int SetLightingEnable;
  unsigned int SetPointParamsEnable;
  unsigned int SetPointSmoothEnable;
  unsigned int SetLineSmoothEnable;
  unsigned int SetPolySmoothEnable;
  unsigned int SetSkinMode;
  unsigned int SetStencilTestEnable;
  unsigned int SetPolyOffsetPointEnable;
  unsigned int SetPolyOffsetLineEnable;
  unsigned int SetPolyOffsetFillEnable;
  unsigned int SetAlphaFunc;
  unsigned int SetAlphaRef;
  unsigned int SetBlendFuncSfactor;
  unsigned int SetBlendFuncDfactor;
  unsigned int SetBlendColor;
  unsigned int SetBlendEquation;
  unsigned int SetDepthFunc;
  unsigned int SetColorMask;
  unsigned int SetDepthMask;
  unsigned int SetStencilMask;
  unsigned int SetStencilFunc;
  unsigned int SetStencilFuncRef;
  unsigned int SetStencilFuncMask;
  unsigned int SetStencilOpFail;
  unsigned int SetStencilOpZfail;
  unsigned int SetStencilOpZpass;
  unsigned int SetShadeMode;
  unsigned int SetLineWidth;
  float SetPolygonOffsetScaleFactor;
  float SetPolygonOffsetBias;
  unsigned int SetFrontPolygonMode;
  unsigned int SetBackPolygonMode;
  float SetClipMin;
  float SetClipMax;
  unsigned int SetCullFace;
  unsigned int SetFrontFace;
  unsigned int SetNormalizationEnable;
  float SetMaterialEmission[3];
  float SetMaterialAlpha;
  unsigned int SetSpecularEnable;
  unsigned int SetLightEnableMask;
  $B262B5F723D73C839CA3FF07CA63F3D8 SetTexgen[4];
  unsigned int Reserved0400[8];
  unsigned int SetTextureMatrixEnable[4];
  unsigned int Reserved0430[3];
  unsigned int SetPointSize;
  float SetProjectionMatrix[16];
  float SetModelViewMatrix0[16];
  float SetModelViewMatrix1[16];
  float SetModelViewMatrix2[16];
  float SetModelViewMatrix3[16];
  float SetInverseModelViewMatrix0[16];
  float SetInverseModelViewMatrix1[16];
  float SetInverseModelViewMatrix2[16];
  float SetInverseModelViewMatrix3[16];
  float SetCompositeMatrix[16];
  float SetTextureMatrix0[16];
  float SetTextureMatrix1[16];
  float SetTextureMatrix2[16];
  float SetTextureMatrix3[16];
  unsigned int Reserved07c0[32];
  $8982B442158C3620B762A03D365B4423 SetTexgenPlane[4];
  unsigned int Reserved0940[32];
  float SetFogParams[3];
  unsigned int SetTexgenViewModel;
  float SetFogPlane[4];
  float SetSpecularParams[6];
  unsigned int SetSwathWidth;
  unsigned int SetFlatShadeOp;
  unsigned int Reserved0a00[4];
  float SetSceneAmbientColor[3];
  unsigned int Reserved0a1c[1];
  float SetViewportOffset[4];
  float SetPointParams[8];
  float SetEyePosition[4];
  unsigned int SetCombinerFactor0[8];
  unsigned int SetCombinerFactor1[8];
  unsigned int SetCombinerAlphaOCW[8];
  unsigned int SetCombinerColorICW[8];
  unsigned int SetColorKeyColor[4];
  float SetViewportScale[4];
  unsigned int SetTransformProgram[32];
  float SetTransformConstant[32];
  $9C29D771F79F15AD922A86CBAFA055D8 SetBackLight[8];
  unsigned int Reserved0e00[128];
  $CF35D219033B668D8A6B6FE5D44B9375 SetLight[8];
  unsigned int Reserved1400[31];
  unsigned int SetStippleControl;
  unsigned int SetStipplePattern[32];
  float SetVertex3f[3];
  unsigned int Reserved150c[3];
  float SetVertex4f[4];
  int SetVertex4s[2];
  float SetNormal3f[3];
  unsigned int Reserved153c[1];
  int SetNormal3s[2];
  unsigned int Reserved1548[2];
  float SetDiffuseColor4f[4];
  float SetDiffuseColor3f[3];
  unsigned int SetDiffuseColor4ub;
  float SetSpecularColor4f[4];
  float SetSpecularColor3f[3];
  unsigned int SetSpecularColor4ub;
  float SetTexcoord0_2f[2];
  int SetTexcoord0_2s;
  unsigned int Reserved159c[1];
  float SetTexcoord0_4f[4];
  int SetTexcoord0_4s[2];
  float SetTexcoord1_2f[2];
  int SetTexcoord1_2s;
  unsigned int Reserved15c4[1];
  float SetTexcoord1_4f[4];
  int SetTexcoord1_4s[2];
  float SetTexcoord2_2f[2];
  int SetTexcoord2_2s;
  unsigned int Reserved15ec[1];
  float SetTexcoord2_4f[4];
  int SetTexcoord2_4s[2];
  float SetTexcoord3_2f[2];
  int SetTexcoord3_2s;
  unsigned int Reserved1614[3];
  float SetTexcoord3_4f[4];
  int SetTexcoord3_4s[2];
  unsigned int Reserved1638[24];
  float SetFog1f;
  float SetWeight1f;
  float SetWeight2f[2];
  unsigned int Reserved16a8[2];
  float SetWeight3f[3];
  unsigned int SetEdgeFlag;
  float SetWeight4f[4];
  float SetTransformFixedConst3[4];
  float SetTransformFixedConst0[4];
  float SetTransformFixedConst1[4];
  float SetTransformFixedConst2[4];
  unsigned int InvalidateVertexCacheFile;
  unsigned int InvalidateVertexFile;
  unsigned int TlNop;
  unsigned int TlSync;
  unsigned int SetVertexDataArrayOffset[16];
  unsigned int SetVertexDataArrayFormat[16];
  float SetBackSceneAmbientColor[3];
  float SetBackMaterialAlpha;
  float SetBackMaterialEmission[3];
  unsigned int SetLogicOpEnable;
  unsigned int SetLogicOp;
  unsigned int SetTwoSideLightEn;
  unsigned int ClearReportValue;
  unsigned int SetZpassPixelCountEnable;
  unsigned int GetReport;
  float SetTLConstZero[3];
  float SetEyeDirection[3];
  float SetLinearFogConst[3];
  unsigned int SetShaderClipPlaneMode;
  unsigned int SetBeginEnd;
  unsigned int ArrayElement16;
  unsigned int Reserved1804[1];
  unsigned int ArrayElement32;
  unsigned int Reserved180c[1];
  unsigned int DrawArrays;
  unsigned int Reserved1814[1];
  unsigned int InlineArray;
  float SetEyeVector[3];
  unsigned int InlineVertexReuse;
  unsigned int Reserved182c[21];
  $6E4E803E8B2B5592A78F2288EBF4D673 SetVertexData2f[16];
  int SetVertexData2s[16];
  int SetVertexData4ub[16];
  $D536E33A5E195A4CA1918BF39C5D344F SetVertexData4s[16];
  $37FEB7E0829342762FE60E7416A91DC5 SetVertexData4f[16];
  $A9993A8E3199EE2CE181764639B3EE90 SetTexture[4];
  unsigned int Reserved1c00[89];
  unsigned int ParkAttribute;
  unsigned int UnparkAttribute;
  unsigned int SetSemaphoreOffset;
  unsigned int BackEndWriteSemaphoreRelease;
  unsigned int TextureReadSemaphoreRelease;
  unsigned int SetZMinMaxControl;
  unsigned int SetAntiAliasingControl;
  unsigned int SetCompressZBufferEn;
  unsigned int SetOccludeZStencilEn;
  unsigned int Reserved1d88[1];
  unsigned int SetZStencilClearValue;
  unsigned int SetColorClearValue;
  unsigned int ClearSurface;
  unsigned int SetClearRectHorizontal;
  unsigned int SetClearRectVertical;
  unsigned int Reserved1da0[16];
  unsigned int SetBeginPatch0;
  unsigned int SetBeginPatch1;
  unsigned int SetBeginPatch2;
  unsigned int SetBeginPatch3;
  unsigned int SetEndPatch;
  unsigned int SetBeginEndSwatch;
  unsigned int SetBeginEndCurve;
  unsigned int Reserved1dfc[1];
  float SetCurveCoefficients[4];
  unsigned int SetBeginTransition0;
  unsigned int SetBeginTransition1;
  unsigned int SetBeginTransition2;
  unsigned int SetEndTransition;
  unsigned int SetSpecularFogFactor[2];
  float SetBackSpecularParams[6];
  unsigned int SetCombinerColorOCW[8];
  unsigned int SetCombinerControl;
  unsigned int Reserved1e64[1];
  float SetShadowZSlopeThreshold;
  unsigned int SetShadowDepthFunc;
  unsigned int SetShaderStageProgram;
  unsigned int SetDotRGBMapping;
  unsigned int SetShaderOtherStageInput;
  unsigned int Reserved1e7c[1];
  float SetTransformData[4];
  unsigned int LaunchTransformProgram;
  unsigned int SetTransformExecutionMode;
  unsigned int SetTransformProgramCxtWriteEn;
  unsigned int SetTransformProgramLoad;
  unsigned int SetTransformProgramStart;
  unsigned int SetTransformConstantLoad;
  unsigned int Reserved1ea8[70];
  unsigned int DebugInit[10];
  unsigned int Reserved1fe8[6];
};

/* 1203 */
union $058B6267B8CA17EA8BD40C7BA63BC39C
{
  volatile Nv000Typedef Nv01Root;
  volatile Nv001Typedef Nv01Class;
  volatile Nv002Typedef Nv01ContextDmaFromMemory;
  volatile Nv003Typedef Nv01ContextDmaToMemory;
  volatile Nv004Typedef Nv01Timer;
  volatile _Nv005Typedef Nv01Event;
  unsigned int NV006_TYPEDEF;
  unsigned int NV007_TYPEDEF;
  unsigned int NV008_TYPEDEF;
  unsigned int NV009_TYPEDEF;
  unsigned int NV00A_TYPEDEF;
  unsigned int NV00B_TYPEDEF;
  unsigned int NV00C_TYPEDEF;
  unsigned int NV00D_TYPEDEF;
  unsigned int NV00E_TYPEDEF;
  unsigned int NV00F_TYPEDEF;
  unsigned int NV010_TYPEDEF;
  unsigned int NV011_TYPEDEF;
  volatile Nv012Typedef Nv01ContextBeta;
  unsigned int NV013_TYPEDEF;
  unsigned int NV014_TYPEDEF;
  unsigned int NV015_TYPEDEF;
  unsigned int NV016_TYPEDEF;
  volatile Nv017Typedef Nv01ContextColorKey;
  volatile Nv018Typedef Nv01ContextPattern;
  volatile Nv019Typedef Nv01ContextClipRectangle;
  unsigned int NV01A_TYPEDEF;
  unsigned int NV01B_TYPEDEF;
  volatile Nv01cTypedef Nv01RenderSolidLin;
  volatile Nv01dTypedef Nv01RenderSolidTriangle;
  volatile Nv01eTypedef Nv01RenderSolidRectangle;
  volatile Nv01fTypedef Nv01ImageBlit;
  unsigned int NV020_TYPEDEF;
  volatile Nv021Typedef Nv01ImageFromCpu;
  unsigned int NV022_TYPEDEF;
  unsigned int NV023_TYPEDEF;
  unsigned int NV024_TYPEDEF;
  unsigned int NV025_TYPEDEF;
  unsigned int NV026_TYPEDEF;
  unsigned int NV027_TYPEDEF;
  unsigned int NV028_TYPEDEF;
  unsigned int NV029_TYPEDEF;
  unsigned int NV02A_TYPEDEF;
  unsigned int NV02B_TYPEDEF;
  unsigned int NV02C_TYPEDEF;
  unsigned int NV02D_TYPEDEF;
  unsigned int NV02E_TYPEDEF;
  unsigned int NV02F_TYPEDEF;
  volatile Nv030Typedef Nv01Null;
  unsigned int NV031_TYPEDEF;
  unsigned int NV032_TYPEDEF;
  unsigned int NV033_TYPEDEF;
  unsigned int NV034_TYPEDEF;
  unsigned int NV035_TYPEDEF;
  volatile Nv036Typedef Nv03StretchedImageFromCpu;
  volatile Nv037Typedef Nv03ScaledImageFromMemory;
  volatile Nv038Typedef Nv04DvdSubpicture;
  volatile Nv039Typedef Nv03MemoryToMemoryFormat;
  unsigned int NV03A_TYPEDEF;
  unsigned int NV03B_TYPEDEF;
  unsigned int NV03C_TYPEDEF;
  volatile Nv03dTypedef Nv01ContextDmaInMemory;
  volatile Nv03eTypedef Nv01ContextErrorToMemory;
  volatile Nv03fTypedef Nv01MemoryLocalPrivileged;
  volatile Nv040Typedef Nv01MemoryLocalUser;
  volatile Nv041Typedef Nv03VideoLutCursorPal;
  volatile Nv042Typedef Nv04ContextSurfaces2d;
  volatile Nv043Typedef Nv03ContextRop;
  volatile Nv044Typedef Nv04ContextPattern;
  volatile Nv045Typedef Nv03VideoLutCursorNtsc;
  volatile Nv046Typedef Nv04VideoLutCursorDac;
  volatile Nv047Typedef Nv04VideoOverlay;
  volatile Nv048Typedef Nv03Dx3TexturedTriangle;
  volatile Nv049Typedef NV05VideoLutCursorDac;
  volatile Nv04aTypedef Nv04GdiRectangleText;
  volatile Nv04bTypedef Nv03GdiRectangleText;
  unsigned int NV04C_TYPEDEF;
  volatile Nv04dTypedef Nv03ExternalVideoDecoder;
  volatile Nv04eTypedef Nv03ExternalVideoDecompressor;
  volatile Nv04fTypedef Nv01ExternalParallelBus;
  volatile Nv050Typedef Nv03ExternalMonitorBus;
  volatile Nv051Typedef Nv04ExternalSerialBus;
  volatile Nv052Typedef Nv04ContextSurfaceSwizzled;
  volatile Nv053Typedef Nv04ContextSurfaces3d;
  volatile Nv054Typedef Nv04Dx5TexturedTriangle;
  volatile Nv055Typedef Nv04Dx6MultiTextureTriangle;
  unsigned int Nv12CelsiusPrimitive;
  volatile Nv057Typedef Nv04ContextColorKey;
  volatile Nv058Typedef Nv03ContextSurface2dDestination;
  volatile Nv059Typedef Nv03ContextSurface2dSource;
  volatile Nv05aTypedef Nv03ContextSurface3dColor;
  volatile Nv05bTypedef Nv03ContextSurface3dDepth;
  volatile Nv05cTypedef Nv04RenderSolidLin;
  volatile Nv05dTypedef Nv04RenderSolidTriangle;
  volatile Nv05eTypedef Nv04RenderSolidRectangle;
  volatile Nv05fTypedef Nv04ImageBlit;
  volatile Nv060Typedef Nv04IndexedImageFromCpu;
  volatile Nv061Typedef Nv04ImageFromCpu;
  volatile Nv062Typedef Nv10ContextSurfaces2d;
  volatile Nv063Typedef Nv05ScaledImageFromMemory;
  volatile Nv064Typedef Nv05IndexedImageFromCpu;
  volatile Nv065Typedef Nv05ImageFromCpu;
  volatile _Nv066Typedef Nv05StretchedImageFromCpu;
  volatile Nv067Typedef Nv10VideoLutCursorDac;
  volatile Nv06fTypedef Nv04HeapOwner;
  unsigned int NV070_TYPEDEF;
  unsigned int NV071_TYPEDEF;
  volatile Nv072Typedef Nv04ContextBeta;
  unsigned int NV073_TYPEDEF;
  unsigned int NV074_TYPEDEF;
  unsigned int NV075_TYPEDEF;
  volatile Nv076Typedef Nv04StretchedImageFromCpu;
  volatile Nv077Typedef Nv04ScaledImageFromMemory;
  unsigned int NV078_TYPEDEF;
  unsigned int NV079_TYPEDEF;
  volatile Nv07aTypedef Nv10VideoOverlay;
  volatile Nv07bTypedef Nv10TextureFromCpu;
  volatile Nv07cTypedef Nv12VideoLutCursorDac;
  unsigned int NV07D_TYPEDEF;
  unsigned int NV07E_TYPEDEF;
  unsigned int NV07F_TYPEDEF;
  volatile Nv080Typedef Nv01Device0;
  volatile Nv081Typedef Nv01Device1;
  volatile Nv082Typedef Nv01Device2;
  volatile Nv083Typedef Nv01Device3;
  volatile Nv084Typedef Nv01Device4;
  volatile Nv085Typedef Nv01Device5;
  volatile Nv086Typedef Nv01Device6;
  volatile Nv087Typedef Nv01Device7;
  volatile Nv088Typedef Nv10DvdSubpicture;
  volatile Nv089Typedef Nv10ScaledImageFromMemory;
  volatile Nv093Typedef Nv10ContextSurfaces3d;
  volatile Nv094Typedef Nv10Dx5TexturedTriangle;
  volatile Nv095Typedef Nv10Dx6MultiTextureTriangle;
  unsigned int NVFF0_TYPEDEF;
  unsigned int NVFF1_TYPEDEF;
  unsigned int NVFF2_TYPEDEF;
  unsigned int NVFF3_TYPEDEF;
  unsigned int NVFF4_TYPEDEF;
  volatile Nvff5Typedef NvContextErrorToMemory;
  volatile Nvff6Typedef NvVideoColorKey;
  volatile Nvff7Typedef NvVideoScaler;
  volatile Nvff8Typedef NvVideoFromMemory;
  volatile Nvff9Typedef NvVideoColormap;
  volatile NvffaTypedef NvVideoSink;
  volatile NvffbTypedef NvPatchcordVideo;
  volatile NvffcTypedef NvContextDmaInMemory;
  volatile NvffdTypedef NvContextDmaToMemory;
  volatile NvffeTypedef NvContextDmaFromMemory;
  volatile NvfffTypedef NvClass;
};

/* 1204 */
struct Nv03SubchannelPio
{
  unsigned int SetObject;
  volatile Nv03ControlPio control;
  $058B6267B8CA17EA8BD40C7BA63BC39C ___u2;
};

/* 1205 */
struct Nv03ChannelPio
{
  volatile Nv03SubchannelPio subchannel[8];
};

/* 1206 */
struct NVDE_UNREGISTER_DEBUGGER_PARAMETERS
{
  unsigned int foo;
};

/* 1207 */
struct NVDE_WRITE_MEMORY_PARAMETERS
{
  unsigned int Address;
  unsigned int Size;
  unsigned int Data;
};

/* 1208 */
struct Nv0A3Typedef
{
  unsigned int Reserved00[1984];
};

/* 1209 */
struct __cppobj $36B44D95768770565696F8DFC002372C
{
  _BYTE gap0[4];
};

/* 1210 */
struct $14B3EF48D020C7F5F55D4E3CE96488FD
{
  unsigned __int32 : 27;
  unsigned __int32 FEMethodOverFlow : 1;
  unsigned __int32 FEVoice : 1;
  unsigned __int32 FENotify : 1;
  unsigned __int32 DeltaPanic : 1;
  unsigned __int32 DeltaWarning : 1;
};

/* 1211 */
union INTR_MASK
{
  $36B44D95768770565696F8DFC002372C codec;
  $14B3EF48D020C7F5F55D4E3CE96488FD apu;
  unsigned int uValue;
};

/* 1212 */
struct AUDIO_INIT_DEVICE
{
  unsigned int pResList;
  unsigned __int8 uRevisionID;
  unsigned int pDevObj;
  void (__stdcall *pISRFn)(unsigned int, unsigned int, unsigned int);
  unsigned int pServiceContext;
  INTR_MASK IntrMask;
  unsigned int uDeviceRef;
};

/* 1213 */
struct APU_AP_ALLOC_CONTEXT_DMA
{
  unsigned int uDeviceRef;
  unsigned __int8 uType;
  unsigned int uBaseAddress;
  unsigned int uMaxOffset;
  unsigned int uHandle;
};

/* 1214 */
struct APU_AP_FREE_CONTEXT_DMA
{
  unsigned int uDeviceRef;
  unsigned int uHandle;
};

/* 1215 */
struct CODEC_AUDIO_CREATE
{
  unsigned int pioBaseMixer;
  unsigned int pioBaseAci;
};

/* 1216 */
struct APU_OBJECT
{
  unsigned int uDeviceRef;
  unsigned __int8 uObjectCode;
  unsigned int pParam;
};

/* 1217 */
struct _FILE_DISPOSITION_INFORMATION
{
  unsigned __int8 DeleteFile;
};

/* 1218 */
struct $240636BF069B52CCE0BB3D6B0AE32D5B
{
  unsigned int size;
  unsigned int monochrome[3];
};

/* 1219 */
struct __declspec(align(2)) _IMAGE_IMPORT_BY_NAME
{
  unsigned __int16 Hint;
  unsigned __int8 Name[1];
};

/* 1220 */
struct _NAPDATA
{
  unsigned int NapLock;
  unsigned int Calls;
  unsigned int TimingErrors;
  _LARGE_INTEGER TotalTime;
  _LARGE_INTEGER FirstTime;
  _LARGE_INTEGER MaxTime;
  _LARGE_INTEGER MinTime;
};

/* 1221 */
struct _SYSTEM_TIMEOFDAY_INFORMATION
{
  _LARGE_INTEGER BootTime;
  _LARGE_INTEGER CurrentTime;
  _LARGE_INTEGER TimeZoneBias;
  unsigned int TimeZoneId;
  unsigned int Reserved;
  unsigned __int64 BootTimeBias;
  unsigned __int64 SleepTimeBias;
};

/* 1222 */
struct $69BEB1EA134F8604F6F58F4A3DA47D43
{
  unsigned int size;
  unsigned int monochrome[7];
};

/* 1223 */
struct HDC__
{
  int unused;
};

/* 1224 */
struct _DXFILELOADMEMORY
{
  void *lpMemory;
  unsigned int dSize;
};

/* 1225 */
struct _DSBUFFERDESC
{
  unsigned int dwSize;
  unsigned int dwFlags;
  unsigned int dwBufferBytes;
  tWAVEFORMATEX *lpwfxFormat;
  unsigned int dwMixBinMask;
  unsigned int dwInputMixBinMask;
};

/* 1226 */
struct __s_GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  unsigned __int8 Data4[8];
};

/* 1227 */
struct __cppobj IPersistStream : IPersist
{
};

/* 1228 */
struct /*VFT*/ IPersistStream_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *GetClassID)(IPersist *this, _GUID *);
  int (__stdcall *IsDirty)(IPersistStream *this);
  int (__stdcall *Load)(IPersistStream *this, IStream *);
  int (__stdcall *Save)(IPersistStream *this, IStream *, int);
  int (__stdcall *GetSizeMax)(IPersistStream *this, _ULARGE_INTEGER *);
};

/* 1229 */
struct $DEF201ACE12EAAEC538CF40207F9D560
{
  unsigned int size;
  unsigned int monochrome[1];
};

/* 1230 */
struct HSTR__
{
  int unused;
};

/* 1231 */
struct _COMPRESSED_DATA_INFO
{
  unsigned __int16 CompressionFormatAndEngine;
  unsigned __int8 CompressionUnitShift;
  unsigned __int8 ChunkShift;
  unsigned __int8 ClusterShift;
  unsigned __int8 Reserved;
  unsigned __int16 NumberOfChunks;
  unsigned int CompressedChunkSizes[1];
};

/* 1232 */
struct _ACL_REVISION_INFORMATION
{
  unsigned int AclRevision;
};

/* 1233 */
struct _DBGKD_DEBUG_DATA_HEADER64
{
  LIST_ENTRY64 List;
  unsigned int OwnerTag;
  unsigned int Size;
};

/* 1234 */
struct NSR_PATH
{
  unsigned __int8 Type;
  unsigned __int8 CompLen;
  unsigned __int8 CompVer;
  unsigned __int8 Comp[];
};

/* 1235 */
struct _DISK_GEOMETRY
{
  _LARGE_INTEGER Cylinders;
  _MEDIA_TYPE MediaType;
  unsigned int TracksPerCylinder;
  unsigned int SectorsPerTrack;
  unsigned int BytesPerSector;
};

/* 1236 */
struct DESTAG
{
  unsigned __int16 Ident;
  unsigned __int16 Version;
  unsigned __int8 Checksum;
  unsigned __int8 Res5;
  unsigned __int16 Serial;
  unsigned __int16 CRC;
  unsigned __int16 CRCLen;
  unsigned int Lbn;
};

/* 1237 */
struct REGID
{
  unsigned __int8 Flags;
  unsigned __int8 Identifier[23];
  unsigned __int8 Suffix[8];
};

/* 1238 */
struct NSR_IMPUSE
{
  DESTAG Destag;
  unsigned int VolDescSeqNum;
  REGID ImpUseID;
  unsigned __int8 ImpUse[460];
};

/* 1239 */
struct _CDROM_SEEK_AUDIO_MSF
{
  unsigned __int8 M;
  unsigned __int8 S;
  unsigned __int8 F;
};

/* 1240 */
struct _SUB_Q_HEADER
{
  unsigned __int8 Reserved;
  unsigned __int8 AudioStatus;
  unsigned __int8 DataLength[2];
};

/* 1241 */
struct _DISK_CONTROLLER_NUMBER
{
  unsigned int ControllerNumber;
  unsigned int DiskNumber;
};

/* 1242 */
struct VSD_TEA01
{
  unsigned __int8 Type;
  unsigned __int8 Ident[5];
  unsigned __int8 Version;
  unsigned __int8 Data[2041];
};

/* 1243 */
struct PARTMAP_PROXY
{
  unsigned __int8 Type;
  unsigned __int8 Length;
  unsigned __int8 PartID[62];
};

/* 1244 */
struct _BIN_RANGE
{
  _LARGE_INTEGER StartValue;
  _LARGE_INTEGER Length;
};

/* 1245 */
struct __declspec(align(8)) _BIN_COUNT
{
  _BIN_RANGE BinRange;
  unsigned int BinCount;
};

/* 1246 */
struct _BIN_RESULTS
{
  unsigned int NumberOfBins;
  _BIN_COUNT BinCounts[1];
};

/* 1247 */
struct _SET_PARTITION_INFORMATION
{
  unsigned __int8 PartitionType;
};

/* 1248 */
struct EXTENTAD
{
  unsigned int Len;
  unsigned int Lsn;
};

/* 1249 */
struct NSR_VDP
{
  DESTAG Destag;
  unsigned int VolDescSeqNum;
  EXTENTAD Next;
  unsigned __int8 Res28[484];
};

/* 1250 */
struct NSR_EAH
{
  DESTAG Destag;
  unsigned int EAImp;
  unsigned int EAApp;
};

/* 1251 */
struct NSRLENGTH
{
  unsigned __int32 Length : 30;
  unsigned __int32 Type : 2;
};

/* 1252 */
struct __unaligned __declspec(align(2)) NSRLBA
{
  unsigned int Lbn;
  unsigned __int16 Partition;
};

/* 1253 */
struct EXTAD
{
  NSRLENGTH ExtentLen;
  NSRLENGTH RecordedLen;
  unsigned int InfoLen;
  NSRLBA Start;
  unsigned __int8 ImpUse[2];
};

/* 1254 */
struct NSR_ALLOC
{
  DESTAG Destag;
  unsigned int Prev;
  unsigned int AllocLen;
};

/* 1255 */
struct _DRIVERSTATUS
{
  unsigned __int8 bDriverError;
  unsigned __int8 bIDEError;
  unsigned __int8 bReserved[2];
  unsigned int dwReserved[2];
};

/* 1256 */
struct $D4F62C83CEB61BB52196E20F7ADC32CF
{
  unsigned __int16 Minimum;
  unsigned __int16 Maximum;
  unsigned __int16 MaximumBlocks;
};

/* 1257 */
struct $B28CD077D686A6FB9CE039A2B335CFF9
{
  unsigned __int16 Minimum;
  unsigned __int16 Maximum;
};

/* 1258 */
union $B0BFFC66B310EB2109CCC7871AD44DD6
{
  $D4F62C83CEB61BB52196E20F7ADC32CF ScalarPrefetch;
  $B28CD077D686A6FB9CE039A2B335CFF9 BlockPrefetch;
};

/* 1259 */
struct __declspec(align(4)) _DISK_CACHE_INFORMATION
{
  unsigned __int8 ParametersSavable;
  unsigned __int8 ReadCacheEnabled;
  unsigned __int8 WriteCacheEnabled;
  DISK_CACHE_RETENTION_PRIORITY ReadRetentionPriority;
  DISK_CACHE_RETENTION_PRIORITY WriteRetentionPriority;
  unsigned __int16 DisablePrefetchTransferLength;
  unsigned __int8 PrefetchScalar;
  $B0BFFC66B310EB2109CCC7871AD44DD6 ___u7;
};

/* 1260 */
struct NSR_EA_GENERIC
{
  unsigned int EAType;
  unsigned __int8 EASubType;
  unsigned __int8 Res5[3];
  unsigned int EALength;
  unsigned __int8 EAData[];
};

/* 1261 */
struct _CDROM_PLAY_AUDIO_MSF
{
  unsigned __int8 StartingM;
  unsigned __int8 StartingS;
  unsigned __int8 StartingF;
  unsigned __int8 EndingM;
  unsigned __int8 EndingS;
  unsigned __int8 EndingF;
};

/* 1262 */
struct __unaligned __declspec(align(1)) _SENDCMDOUTPARAMS
{
  unsigned int cBufferSize;
  _DRIVERSTATUS DriverStatus;
  unsigned __int8 bBuffer[1];
};

/* 1263 */
struct _SUB_Q_TRACK_ISRC
{
  _SUB_Q_HEADER Header;
  unsigned __int8 FormatCode;
  unsigned __int8 Reserved0;
  unsigned __int8 Track;
  unsigned __int8 Reserved1;
  unsigned __int8 Reserved2 : 7;
  unsigned __int8 Tcval : 1;
  unsigned __int8 TrackIsrc[15];
};

/* 1264 */
struct _GETVERSIONINPARAMS
{
  unsigned __int8 bVersion;
  unsigned __int8 bRevision;
  unsigned __int8 bReserved;
  unsigned __int8 bIDEDeviceMap;
  unsigned int fCapabilities;
  unsigned int dwReserved[4];
};

/* 1265 */
struct VSD_NSR02
{
  unsigned __int8 Type;
  unsigned __int8 Ident[5];
  unsigned __int8 Version;
  unsigned __int8 Res7;
  unsigned __int8 Data[2040];
};

/* 1266 */
struct ICBTAG
{
  unsigned int PriorDirectCount;
  unsigned __int16 StratType;
  unsigned __int16 StratParm;
  unsigned __int16 MaxEntries;
  unsigned __int8 Res10;
  unsigned __int8 FileType;
  NSRLBA IcbParent;
  unsigned __int16 Flags;
};

/* 1267 */
struct LONGAD
{
  NSRLENGTH Length;
  NSRLBA Start;
  unsigned __int8 ImpUse[6];
};

/* 1268 */
struct ICBIND
{
  DESTAG Destag;
  ICBTAG Icbtag;
  LONGAD Icb;
};

/* 1269 */
struct _TRACK_DATA
{
  unsigned __int8 Reserved;
  unsigned __int8 Control : 4;
  unsigned __int8 Adr : 4;
  unsigned __int8 TrackNumber;
  unsigned __int8 Reserved1;
  unsigned __int8 Address[4];
};

/* 1270 */
struct _CDROM_TOC
{
  unsigned __int8 Length[2];
  unsigned __int8 FirstTrack;
  unsigned __int8 LastTrack;
  _TRACK_DATA TrackData[100];
};

/* 1271 */
struct _CDROM_DISK_DATA
{
  unsigned int DiskData;
};

/* 1272 */
struct __declspec(align(8)) _PARTITION_INFORMATION
{
  _LARGE_INTEGER StartingOffset;
  _LARGE_INTEGER PartitionLength;
  unsigned int HiddenSectors;
  unsigned int PartitionNumber;
  unsigned __int8 PartitionType;
  unsigned __int8 BootIndicator;
  unsigned __int8 RecognizedPartition;
  unsigned __int8 RewritePartition;
};

/* 1273 */
struct SHORTAD
{
  NSRLENGTH Length;
  unsigned int Start;
};

/* 1274 */
struct __declspec(align(8)) _DISK_RECORD
{
  _LARGE_INTEGER ByteOffset;
  _LARGE_INTEGER StartTime;
  _LARGE_INTEGER EndTime;
  void *VirtualAddress;
  unsigned int NumberOfBytes;
  unsigned __int8 DeviceNumber;
  unsigned __int8 ReadRequest;
};

/* 1275 */
struct _HISTOGRAM_BUCKET
{
  unsigned int Reads;
  unsigned int Writes;
};

/* 1276 */
struct TIMESTAMP
{
  __int16 Zone : 12;
  unsigned __int16 Type : 4;
  unsigned __int16 Year;
  unsigned __int8 Month;
  unsigned __int8 Day;
  unsigned __int8 Hour;
  unsigned __int8 Minute;
  unsigned __int8 Second;
  unsigned __int8 CentiSecond;
  unsigned __int8 Usec100;
  unsigned __int8 Usec;
};

/* 1277 */
struct NSR_EA_FILETIMES
{
  unsigned int EAType;
  unsigned __int8 EASubType;
  unsigned __int8 Res5[3];
  unsigned int EALength;
  unsigned int DataLength;
  unsigned int Existence;
  TIMESTAMP Stamps[];
};

/* 1278 */
struct _VOLUME_CONTROL
{
  unsigned __int8 PortVolume[4];
};

/* 1279 */
struct __RAW_READ_INFO
{
  _LARGE_INTEGER DiskOffset;
  unsigned int SectorCount;
  _TRACK_MODE_TYPE TrackMode;
};

/* 1280 */
struct NSR_VD_GENERIC
{
  DESTAG Destag;
  unsigned int Sequence;
  unsigned __int8 Data20[492];
};

/* 1281 */
struct _REASSIGN_BLOCKS
{
  unsigned __int16 Reserved;
  unsigned __int16 Count;
  unsigned int BlockNumber[1];
};

/* 1282 */
struct NSR_UASD
{
  DESTAG Destag;
  unsigned int VolDescSeqNum;
  unsigned int ExtentCount;
  EXTENTAD Extents[];
};

/* 1283 */
struct __declspec(align(8)) _DISK_HISTOGRAM
{
  _LARGE_INTEGER DiskSize;
  _LARGE_INTEGER Start;
  _LARGE_INTEGER End;
  _LARGE_INTEGER Average;
  _LARGE_INTEGER AverageRead;
  _LARGE_INTEGER AverageWrite;
  unsigned int Granularity;
  unsigned int Size;
  unsigned int ReadCount;
  unsigned int WriteCount;
  _HISTOGRAM_BUCKET *Histogram;
};

/* 1284 */
struct CHARSPEC
{
  unsigned __int8 Type;
  unsigned __int8 Info[63];
};

/* 1285 */
struct NSR_FSD
{
  DESTAG Destag;
  TIMESTAMP Time;
  unsigned __int16 Level;
  unsigned __int16 LevelMax;
  unsigned int CharSetList;
  unsigned int CharSetListMax;
  unsigned int FileSet;
  unsigned int FileSetDesc;
  CHARSPEC CharspecVolID;
  unsigned __int8 VolID[128];
  CHARSPEC CharspecFileSet;
  unsigned __int8 FileSetID[32];
  unsigned __int8 Copyright[32];
  unsigned __int8 Abstract[32];
  LONGAD IcbRoot;
  REGID DomainID;
  LONGAD NextExtent;
  unsigned __int8 Res464[48];
};

/* 1286 */
struct _KIPI_COUNTS
{
  unsigned int Freeze;
  unsigned int Packet;
  unsigned int DPC;
  unsigned int APC;
  unsigned int FlushSingleTb;
  unsigned int FlushMultipleTb;
  unsigned int FlushEntireTb;
  unsigned int GenericCall;
  unsigned int ChangeColor;
  unsigned int SweepDcache;
  unsigned int SweepIcache;
  unsigned int SweepIcacheRange;
  unsigned int FlushIoBuffers;
  unsigned int GratuitousDPC;
};

/* 1287 */
struct NSR_PART
{
  DESTAG Destag;
  unsigned int VolDescSeqNum;
  unsigned __int16 Flags;
  unsigned __int16 Number;
  REGID ContentsID;
  unsigned __int8 ContentsUse[128];
  unsigned int AccessType;
  unsigned int Start;
  unsigned int Length;
  REGID ImpUseID;
  unsigned __int8 ImpUse[128];
  unsigned __int8 Res356[156];
};

/* 1288 */
struct _IDE_IDENTIFY_DATA
{
  unsigned __int16 GeneralConfiguration;
  unsigned __int16 NumberOfCylinders;
  unsigned __int16 Reserved1;
  unsigned __int16 NumberOfHeads;
  unsigned __int16 Reserved2[2];
  unsigned __int16 NumberOfSectorsPerTrack;
  unsigned __int16 Reserved3[3];
  unsigned __int8 SerialNumber[20];
  unsigned __int16 Reserved4[3];
  unsigned __int8 FirmwareRevision[8];
  unsigned __int8 ModelNumber[40];
  unsigned __int16 MaximumBlockTransfer : 8;
  unsigned __int16 Reserved5 : 8;
  unsigned __int16 Reserved6;
  unsigned __int16 Capabilities;
  unsigned __int16 Reserved7;
  unsigned __int16 Reserved8 : 8;
  unsigned __int16 PioCycleTimingMode : 8;
  unsigned __int16 Reserved9;
  unsigned __int16 TranslationFieldsValid : 3;
  unsigned __int16 Reserved10 : 13;
  unsigned __int16 NumberOfCurrentCylinders;
  unsigned __int16 NumberOfCurrentHeads;
  unsigned __int16 CurrentSectorsPerTrack;
  __unaligned __declspec(align(1)) unsigned int CurrentSectorCapacity;
  unsigned __int16 CurrentMultiSectorSetting;
  unsigned int UserAddressableSectors;
  unsigned __int16 SingleWordDMASupport : 8;
  unsigned __int16 SingleWordDMAActive : 8;
  unsigned __int16 MultiWordDMASupport : 8;
  unsigned __int16 MultiWordDMAActive : 8;
  unsigned __int16 AdvancedPIOModes : 8;
  unsigned __int16 Reserved11 : 8;
  unsigned __int16 MinimumMWXferCycleTime;
  unsigned __int16 RecommendedMWXferCycleTime;
  unsigned __int16 MinimumPIOCycleTime;
  unsigned __int16 MinimumPIOCycleTimeIORDY;
  unsigned __int16 Reserved12[11];
  unsigned __int16 MajorRevision;
  unsigned __int16 MinorRevision;
  unsigned __int16 Reserved13[6];
  unsigned __int16 UltraDMASupport : 8;
  unsigned __int16 UltraDMAActive : 8;
  unsigned __int16 Reserved14[38];
  unsigned __int16 MediaStatusNotification : 2;
  unsigned __int16 Reserved15 : 6;
  unsigned __int16 DeviceWriteProtect : 1;
  unsigned __int16 Reserved16 : 7;
  unsigned __int16 SecuritySupported : 1;
  unsigned __int16 SecurityEnabled : 1;
  unsigned __int16 SecurityLocked : 1;
  unsigned __int16 SecurityFrozen : 1;
  unsigned __int16 SecurityCountExpired : 1;
  unsigned __int16 SecurityEraseSupported : 1;
  unsigned __int16 Reserved17 : 2;
  unsigned __int16 SecurityLevel : 1;
  unsigned __int16 Reserved18 : 7;
  unsigned __int16 Reserved19[127];
};

/* 1289 */
struct _IDEREGS
{
  unsigned __int8 bFeaturesReg;
  unsigned __int8 bSectorCountReg;
  unsigned __int8 bSectorNumberReg;
  unsigned __int8 bCylLowReg;
  unsigned __int8 bCylHighReg;
  unsigned __int8 bDriveHeadReg;
  unsigned __int8 bCommandReg;
  unsigned __int8 bHostSendsData;
};

/* 1290 */
struct _ATA_PASS_THROUGH
{
  _IDEREGS IdeReg;
  unsigned int DataBufferSize;
  void *DataBuffer;
};

/* 1291 */
struct __unaligned __declspec(align(1)) _SENDCMDINPARAMS
{
  unsigned int cBufferSize;
  _IDEREGS irDriveRegs;
  unsigned __int8 bDriveNumber;
  unsigned __int8 bReserved[3];
  unsigned int dwReserved[4];
  unsigned __int8 bBuffer[1];
};

/* 1292 */
struct _SUB_Q_CURRENT_POSITION
{
  _SUB_Q_HEADER Header;
  unsigned __int8 FormatCode;
  unsigned __int8 Control : 4;
  unsigned __int8 ADR : 4;
  unsigned __int8 TrackNumber;
  unsigned __int8 IndexNumber;
  unsigned __int8 AbsoluteAddress[4];
  unsigned __int8 TrackRelativeAddress[4];
};

/* 1293 */
struct _IDE_SECURITY_DATA
{
  unsigned __int16 Master : 1;
  unsigned __int16 Reserved1 : 7;
  unsigned __int16 Maximum : 1;
  unsigned __int16 Reserved2 : 7;
  unsigned __int8 Password[32];
  unsigned __int16 Reserved3[239];
};

/* 1294 */
struct VSD_BEA01
{
  unsigned __int8 Type;
  unsigned __int8 Ident[5];
  unsigned __int8 Version;
  unsigned __int8 Data[2041];
};

/* 1295 */
struct _PERF_BIN
{
  unsigned int NumberOfBins;
  unsigned int TypeOfBin;
  _BIN_RANGE BinsRanges[1];
};

/* 1296 */
struct __unaligned __declspec(align(4)) _UDF_FCB
{
  unsigned __int8 Flags;
  unsigned __int8 FileNameLength;
  unsigned __int16 EmbeddedDataOffset;
  unsigned int AllocationSectorStart;
  _LARGE_INTEGER FileSize;
  TIMESTAMP ModifyTime;
  unsigned int ReferenceCount;
  _UDF_FCB *ParentFcb;
  _LIST_ENTRY SiblingFcbLink;
  _LIST_ENTRY ChildFcbList;
  char FileName[];
};

/* 1297 */
struct $D029DFC5E46323402A3EA728604D17C3
{
  _DEVICE_OBJECT *TargetDeviceObject;
  __unaligned __declspec(align(1)) _LARGE_INTEGER PartitionLength;
  unsigned int SectorSize;
};

/* 1298 */
union $E7534BE875EF32E75BF2CCC90CE79F00
{
  _FSCACHE_EXTENSION CacheExtension;
  $D029DFC5E46323402A3EA728604D17C3 __s1;
};

/* 1299 */
struct __declspec(align(4)) _UDF_VOLUME_EXTENSION
{
  $E7534BE875EF32E75BF2CCC90CE79F00 ___u0;
  _UDF_FCB *VolumeFcb;
  _UDF_FCB *RootDirectoryFcb;
  unsigned int PhysicalSectorCount;
  unsigned int PartitionSectorStart;
  unsigned int PartitionSectorCount;
  unsigned int FileObjectCount;
  unsigned __int8 Dismounted;
};

/* 1300 */
struct _CDROM_SUB_Q_DATA_FORMAT
{
  unsigned __int8 Format;
  unsigned __int8 Track;
};

/* 1301 */
struct _DRIVE_LAYOUT_INFORMATION
{
  unsigned int PartitionCount;
  unsigned int Signature;
  _PARTITION_INFORMATION PartitionEntry[1];
};

/* 1302 */
struct __declspec(align(4)) _FORMAT_EX_PARAMETERS
{
  _MEDIA_TYPE MediaType;
  unsigned int StartCylinderNumber;
  unsigned int EndCylinderNumber;
  unsigned int StartHeadNumber;
  unsigned int EndHeadNumber;
  unsigned __int16 FormatGapLength;
  unsigned __int16 SectorsPerTrack;
  unsigned __int16 SectorNumber[1];
};

/* 1303 */
struct __declspec(align(8)) _MAPPED_ADDRESS
{
  _MAPPED_ADDRESS *NextMappedAddress;
  void *MappedAddress;
  unsigned int NumberOfBytes;
  _LARGE_INTEGER IoAddress;
  unsigned int BusNumber;
};

/* 1304 */
struct NSR_LVOL
{
  DESTAG Destag;
  unsigned int VolDescSeqNum;
  CHARSPEC Charset;
  unsigned __int8 VolumeID[128];
  unsigned int BlockSize;
  REGID DomainID;
  LONGAD FSD;
  unsigned int MapTableLength;
  unsigned int MapTableCount;
  REGID ImpUseID;
  unsigned __int8 ImpUse[128];
  EXTENTAD Integrity;
  unsigned __int8 MapTable[];
};

/* 1305 */
struct NSR_LVHD
{
  unsigned int UniqueID[2];
  unsigned __int8 Res8[24];
};

/* 1306 */
struct __declspec(align(8)) _VERIFY_INFORMATION
{
  _LARGE_INTEGER StartingOffset;
  unsigned int Length;
};

/* 1307 */
struct NSR_INTEG
{
  DESTAG Destag;
  TIMESTAMP Time;
  unsigned int Type;
  EXTENTAD Next;
  NSR_LVHD LVHD;
  unsigned int PartitionCount;
  unsigned int ImpUseLength;
  unsigned int Free[1];
  unsigned int Size[1];
  unsigned __int8 ImpUse[];
};

/* 1308 */
struct NSR_ANCHOR
{
  DESTAG Destag;
  EXTENTAD Main;
  EXTENTAD Reserve;
  unsigned __int8 Res32[480];
};

/* 1309 */
struct ICBUASE
{
  DESTAG Destag;
  ICBTAG Icbtag;
  unsigned int AllocLen;
  unsigned __int8 Allocs[];
};

/* 1310 */
struct VSD_BOOT2
{
  unsigned __int8 Type;
  unsigned __int8 Ident[5];
  unsigned __int8 Version;
  unsigned __int8 Res8;
  REGID Architecture;
  REGID BootIdent;
  unsigned int BootExt;
  unsigned int BootExtLen;
  unsigned int LoadAddr[2];
  unsigned int StartAddr[2];
  TIMESTAMP Timestamp;
  unsigned __int16 Flags;
  unsigned __int8 Res110[32];
  unsigned __int8 BootUse[1906];
};

/* 1311 */
struct VSD_GENERIC
{
  unsigned __int8 Type;
  unsigned __int8 Ident[5];
  unsigned __int8 Version;
  unsigned __int8 Data[2041];
};

/* 1312 */
struct ICBTRM
{
  DESTAG Destag;
  ICBTAG Icbtag;
};

/* 1313 */
struct _FORMAT_PARAMETERS
{
  _MEDIA_TYPE MediaType;
  unsigned int StartCylinderNumber;
  unsigned int EndCylinderNumber;
  unsigned int StartHeadNumber;
  unsigned int EndHeadNumber;
};

/* 1314 */
struct PARTMAP_PHYSICAL
{
  unsigned __int8 Type;
  unsigned __int8 Length;
  unsigned __int16 VolSetSeq;
  unsigned __int16 Partition;
};

/* 1315 */
struct __unaligned __declspec(align(1)) NSR_FID
{
  DESTAG Destag;
  unsigned __int16 Version;
  unsigned __int8 Flags;
  unsigned __int8 FileIDLen;
  LONGAD Icb;
  unsigned __int16 ImpUseLen;
  unsigned __int8 ImpUse[1];
  unsigned __int8 FileID[1];
  unsigned __int8 Padding[1];
};

/* 1316 */
struct NSR_PVD
{
  DESTAG Destag;
  unsigned int VolDescSeqNum;
  unsigned int Number;
  unsigned __int8 VolumeID[32];
  unsigned __int16 VolSetSeq;
  unsigned __int16 VolSetSeqMax;
  unsigned __int16 Level;
  unsigned __int16 LevelMax;
  unsigned int CharSetList;
  unsigned int CharSetListMax;
  unsigned __int8 VolSetID[128];
  CHARSPEC CharsetDesc;
  CHARSPEC CharsetExplan;
  EXTENTAD Abstract;
  EXTENTAD Copyright;
  REGID Application;
  TIMESTAMP RecordTime;
  REGID ImpUseID;
  unsigned __int8 ImpUse[64];
  unsigned int Predecessor;
  unsigned __int16 Flags;
  unsigned __int8 Res490[22];
};

/* 1317 */
struct _SUB_Q_MEDIA_CATALOG_NUMBER
{
  _SUB_Q_HEADER Header;
  unsigned __int8 FormatCode;
  unsigned __int8 Reserved[3];
  unsigned __int8 Reserved1 : 7;
  unsigned __int8 Mcval : 1;
  unsigned __int8 MediaCatalog[15];
};

/* 1318 */
union _SUB_Q_CHANNEL_DATA
{
  _SUB_Q_CURRENT_POSITION CurrentPosition;
  _SUB_Q_MEDIA_CATALOG_NUMBER MediaCatalog;
  _SUB_Q_TRACK_ISRC TrackIsrc;
};

/* 1319 */
struct PARTMAP_GENERIC
{
  unsigned __int8 Type;
  unsigned __int8 Length;
  unsigned __int8 Map[];
};

/* 1320 */
struct __unaligned __declspec(align(1)) ICBFILE
{
  DESTAG Destag;
  ICBTAG Icbtag;
  unsigned int UID;
  unsigned int GID;
  unsigned int Permissions;
  unsigned __int16 LinkCount;
  unsigned __int8 RecordFormat;
  unsigned __int8 RecordDisplay;
  unsigned int RecordLength;
  unsigned __int64 InfoLength;
  unsigned __int64 BlocksRecorded;
  TIMESTAMP AccessTime;
  TIMESTAMP ModifyTime;
  TIMESTAMP AttributeTime;
  unsigned int Checkpoint;
  LONGAD IcbEA;
  REGID ImpUseID;
  unsigned __int64 UniqueID;
  unsigned int EALength;
  unsigned int AllocLength;
  unsigned __int8 EAs[1];
  unsigned __int8 Allocs[];
};

/* 1321 */
struct _DISK_LOGGING
{
  unsigned __int8 Function;
  void *BufferAddress;
  unsigned int BufferSize;
};

/* 1322 */
struct _CDROM_AUDIO_CONTROL
{
  unsigned __int8 LbaFormat;
  unsigned __int16 LogicalBlocksPerSecond;
};

/* 1323 */
struct _DISK_GROW_PARTITION
{
  unsigned int PartitionNumber;
  _LARGE_INTEGER BytesToGrow;
};

/* 1324 */
struct ICBPINTEG
{
  DESTAG Destag;
  ICBTAG Icbtag;
  TIMESTAMP Recording;
  unsigned __int8 IntegType;
  unsigned __int8 Res49[175];
  REGID ImpUseID;
  unsigned __int8 ImpUse[256];
};

/* 1325 */
struct NSR_SBD
{
  DESTAG Destag;
  unsigned int BitCount;
  unsigned int ByteCount;
  unsigned __int8 Bits[];
};

/* 1326 */
struct _KD_PHYSICAL_PORT
{
  unsigned __int8 (__stdcall *Initialize)(unsigned __int8);
  unsigned int (__stdcall *ReceivePacket)(unsigned int, _STRING *, _STRING *, unsigned int *);
  void (__stdcall *SendPacket)(unsigned int, _STRING *, _STRING *);
};

/* 1327 */
struct __declspec(align(8)) _DISK_PERFORMANCE
{
  _LARGE_INTEGER BytesRead;
  _LARGE_INTEGER BytesWritten;
  _LARGE_INTEGER ReadTime;
  _LARGE_INTEGER WriteTime;
  _LARGE_INTEGER IdleTime;
  unsigned int ReadCount;
  unsigned int WriteCount;
  unsigned int QueueDepth;
  unsigned int SplitCount;
  _LARGE_INTEGER QueryTime;
  unsigned int StorageDeviceNumber;
  unsigned __int16 StorageManagerName[8];
};

/* 1328 */
struct NSR_PART_H
{
  SHORTAD UASTable;
  SHORTAD UASBitmap;
  SHORTAD IntegTable;
  SHORTAD FreedTable;
  SHORTAD FreedBitmap;
  unsigned __int8 Res40[88];
};

/* 1329 */
struct NSR_TERM
{
  DESTAG Destag;
  unsigned __int8 Res16[496];
};

/* 1330 */
struct __declspec(align(4)) _GDF_FCB
{
  unsigned int FirstSector;
  unsigned int FileSize;
  unsigned int ReferenceCount;
  _GDF_FCB *ParentFcb;
  _LIST_ENTRY SiblingFcbLink;
  _LIST_ENTRY ChildFcbList;
  unsigned __int8 Flags;
  unsigned __int8 FileNameLength;
  char FileName[];
};

/* 1331 */
struct __unaligned __declspec(align(4)) _GDF_VOLUME_EXTENSION
{
  $E7534BE875EF32E75BF2CCC90CE79F00 ___u0;
  _GDF_FCB *VolumeFcb;
  _GDF_FCB *RootDirectoryFcb;
  unsigned int PartitionSectorCount;
  _LARGE_INTEGER TimeStamp;
  unsigned int FileObjectCount;
  unsigned __int8 Dismounted;
};

/* 1332 */
struct __unaligned __declspec(align(1)) _GDF_DIRECTORY_ENTRY
{
  unsigned __int16 LeftEntryIndex;
  unsigned __int16 RightEntryIndex;
  unsigned int FirstSector;
  unsigned int FileSize;
  unsigned __int8 FileAttributes;
  unsigned __int8 FileNameLength;
  unsigned __int8 FileName[1];
};

/* 1333 */
struct _GDF_VOLUME_DESCRIPTOR
{
  unsigned __int8 HeadSignature[20];
  unsigned int RootDirectoryFirstSector;
  unsigned int RootDirectoryFileSize;
  __unaligned __declspec(align(1)) _LARGE_INTEGER TimeStamp;
  unsigned __int8 Reserved[1992];
  unsigned __int8 TailSignature[20];
};

/* 1334 */
struct _FAT_FCB_CLUSTER_CACHE_ENTRY
{
  unsigned __int32 PhysicalClusterNumber : 24;
  unsigned __int32 LruFlink : 8;
  unsigned __int32 FileClusterNumber : 24;
  unsigned __int32 LruBlink : 8;
  unsigned int ClusterRunLength;
};

/* 1335 */
struct $60B929E8D4B0E90B702564B8125143A2
{
  unsigned __int16 DoubleSeconds : 5;
  unsigned __int16 Minute : 6;
  unsigned __int16 Hour : 5;
  unsigned __int16 Day : 5;
  unsigned __int16 Month : 4;
  unsigned __int16 Year : 7;
};

/* 1336 */
union _FAT_TIME_STAMP
{
  $60B929E8D4B0E90B702564B8125143A2 __s0;
  unsigned int AsULONG;
};

/* 1337 */
struct _DIRENT
{
  unsigned __int8 FileNameLength;
  unsigned __int8 FileAttributes;
  unsigned __int8 FileName[42];
  unsigned int FirstCluster;
  unsigned int FileSize;
  _FAT_TIME_STAMP CreationTime;
  _FAT_TIME_STAMP LastWriteTime;
  _FAT_TIME_STAMP LastAccessTime;
};

/* 1339 */
struct $F005462002910A613D743F99B2A67BF8
{
  _ERWLOCK FileMutex;
  _KTHREAD *FileMutexExclusiveOwner;
  _FAT_FCB_CLUSTER_CACHE_ENTRY ClusterCache[10];
  char OriginalFileName[];
};

/* 1340 */
struct $3D8B8FF7F24F2548ACD7AA77026CFA87
{
  _LIST_ENTRY ChildFcbList;
  unsigned int DirectoryByteOffsetLookupHint;
  _FAT_FCB_CLUSTER_CACHE_ENTRY ClusterCache[2];
  char OriginalFileName[];
};

/* 1341 */
union $CD9CAD30212D889C8231C9B143FF5C5A
{
  $F005462002910A613D743F99B2A67BF8 File;
  $3D8B8FF7F24F2548ACD7AA77026CFA87 Directory;
};

/* 1338 */
struct __unaligned __declspec(align(4)) _FAT_FCB
{
  unsigned __int8 Flags;
  unsigned __int8 PathNameLength;
  unsigned __int8 FileNameLength;
  unsigned __int8 FileAttributes;
  unsigned int ReferenceCount;
  _SHARE_ACCESS ShareAccess;
  unsigned __int8 ClusterCacheLruHead;
  _LIST_ENTRY SiblingFcbLink;
  _FAT_FCB *ParentFcb;
  unsigned int FirstCluster;
  unsigned int EndingCluster;
  unsigned int FileSize;
  unsigned int AllocationSize;
  unsigned int DirectoryByteOffset;
  char *FileNameBuffer;
  _LARGE_INTEGER LastWriteTime;
  _FAT_TIME_STAMP CreationTime;
  _FAT_TIME_STAMP LastAccessTime;
  $CD9CAD30212D889C8231C9B143FF5C5A ___u18;
};

/* 1342 */
struct _FAT_ASYNC_IO_ENTRY
{
  unsigned int PhysicalSector;
  unsigned int PhysicalIoLength;
};

/* 1343 */
struct _FAT_ASYNC_IO_DESCRIPTOR
{
  unsigned int MajorFunction;
  unsigned int IoLength;
  unsigned int IoLengthRemaining;
  unsigned int BufferOffset;
  unsigned int NextAsyncIoEntry;
  _FAT_FCB *FileFcb;
  _FAT_ASYNC_IO_ENTRY Entries[];
};

/* 1344 */
struct _FAT_CLUSTER_RUN
{
  unsigned int PhysicalClusterNumber;
  unsigned int ClusterRunLength;
};

/* 1345 */
struct _FAT_FCB_BASE
{
  unsigned __int8 Flags;
  unsigned __int8 PathNameLength;
  unsigned __int8 FileNameLength;
  unsigned __int8 FileAttributes;
  unsigned int ReferenceCount;
  _SHARE_ACCESS ShareAccess;
  unsigned __int8 ClusterCacheLruHead;
};

/* 1346 */
struct __unaligned __declspec(align(4)) _FAT_VOLUME_EXTENSION
{
  $E7534BE875EF32E75BF2CCC90CE79F00 ___u0;
  _FAT_FCB *RootDirectoryFcb;
  unsigned int FileObjectCount;
  unsigned int NumberOfClusters;
  unsigned int BytesPerCluster;
  unsigned __int8 SectorShift;
  unsigned __int8 ClusterShift;
  unsigned __int8 FatEntryShift;
  unsigned __int8 Flags;
  unsigned __int64 FatByteOffset;
  unsigned __int64 FileAreaByteOffset;
  unsigned int NumberOfClustersAvailable;
  unsigned int FirstAvailableClusterHint;
  _ERWLOCK VolumeMutex;
  _RTL_CRITICAL_SECTION ClusterCacheMutex;
  _FAT_FCB_BASE VolumeFcb;
  unsigned int SerialNumber;
  int DismountBlockCount;
  _KEVENT *DismountUnblockEvent;
  _KTHREAD *VolumeMutexExclusiveOwner;
};

/* 1347 */
struct _FAT_VOLUME_METADATA
{
  unsigned int Signature;
  unsigned int SerialNumber;
  unsigned int SectorsPerCluster;
  unsigned int RootDirFirstCluster;
  unsigned __int16 VolumeName[32];
  unsigned __int8 OnlineData[2048];
};

/* 1348 */
struct _RAW_VOLUME_EXTENSION
{
  _DEVICE_OBJECT *TargetDeviceObject;
  _SHARE_ACCESS ShareAccess;
  unsigned __int8 Dismounted;
  _ERWLOCK VolumeMutex;
};

/* 1349 */
struct _CDVD_FEATURE_SET_PAGE
{
  unsigned __int8 PageCode : 6;
  unsigned __int8 Reserved : 1;
  unsigned __int8 PSBit : 1;
  unsigned __int8 PageLength;
  unsigned __int8 CDAudio[2];
  unsigned __int8 EmbeddedChanger[2];
  unsigned __int8 PacketSMART[2];
  unsigned __int8 PersistantPrevent[2];
  unsigned __int8 EventStatusNotification[2];
  unsigned __int8 DigitalOutput[2];
  unsigned __int8 CDSequentialRecordable[2];
  unsigned __int8 DVDSequentialRecordable[2];
  unsigned __int8 RandomRecordable[2];
  unsigned __int8 KeyExchange[2];
  unsigned __int8 Reserved2[2];
};

/* 1350 */
struct _DVD_REGION
{
  unsigned __int8 CopySystem;
  unsigned __int8 RegionData;
  unsigned __int8 SystemRegion;
  unsigned __int8 ResetCount;
};

/* 1351 */
struct _NOTIFICATION_EVENT_STATUS_HEADER
{
  unsigned __int8 EventDataLength[2];
  unsigned __int8 NotificationClass : 3;
  unsigned __int8 Reserved : 4;
  unsigned __int8 NEA : 1;
  unsigned __int8 SupportedEventClasses;
  unsigned __int8 ClassEventData[];
};

/* 1352 */
struct _XBOX_CONFIG_SECTOR
{
  unsigned int SectorBeginSignature;
  unsigned int Version;
  unsigned int SectorCount;
  unsigned __int8 Data[492];
  unsigned int Checksum;
  unsigned int SectorEndSignature;
};

/* 1353 */
struct __unaligned __declspec(align(1)) _DVD_LAYER_DESCRIPTOR
{
  unsigned __int8 BookVersion : 4;
  unsigned __int8 BookType : 4;
  unsigned __int8 MinimumRate : 4;
  unsigned __int8 DiskSize : 4;
  unsigned __int8 LayerType : 4;
  unsigned __int8 TrackPath : 1;
  unsigned __int8 NumberOfLayers : 2;
  unsigned __int8 Reserved1 : 1;
  unsigned __int8 TrackDensity : 4;
  unsigned __int8 LinearDensity : 4;
  unsigned int StartingDataSector;
  unsigned int EndDataSector;
  unsigned int EndLayerZeroSector;
  unsigned __int8 Reserved5 : 7;
  unsigned __int8 BCAFlag : 1;
};

/* 1354 */
struct _OPC_TABLE_ENTRY
{
  unsigned __int8 Speed[2];
  unsigned __int8 OPCValue[6];
};

/* 1355 */
struct _DISK_INFORMATION
{
  unsigned __int8 Length[2];
  unsigned __int8 DiskStatus : 2;
  unsigned __int8 LastSessionStatus : 2;
  unsigned __int8 Erasable : 1;
  unsigned __int8 Reserved1 : 3;
  unsigned __int8 FirstTrackNumber;
  unsigned __int8 NumberOfSessions;
  unsigned __int8 LastSessionFirstTrack;
  unsigned __int8 LastSessionLastTrack;
  unsigned __int8 Reserved2 : 5;
  unsigned __int8 GEN : 1;
  unsigned __int8 DBC_V : 1;
  unsigned __int8 DID_V : 1;
  unsigned __int8 DiskType;
  unsigned __int8 Reserved3[3];
  unsigned __int8 DiskIdentification[4];
  unsigned __int8 LastSessionLeadIn[4];
  unsigned __int8 LastPossibleStartTime[4];
  unsigned __int8 DiskBarCode[8];
  unsigned __int8 Reserved4;
  unsigned __int8 NumberOPCEntries;
  _OPC_TABLE_ENTRY OPCTable[];
};

/* 1356 */
struct _MODE_CACHING_PAGE
{
  unsigned __int8 PageCode : 6;
  unsigned __int8 Reserved : 1;
  unsigned __int8 PageSavable : 1;
  unsigned __int8 PageLength;
  unsigned __int8 ReadDisableCache : 1;
  unsigned __int8 MultiplicationFactor : 1;
  unsigned __int8 WriteCacheEnable : 1;
  unsigned __int8 Reserved2 : 5;
  unsigned __int8 WriteRetensionPriority : 4;
  unsigned __int8 ReadRetensionPriority : 4;
  unsigned __int8 DisablePrefetchTransfer[2];
  unsigned __int8 MinimumPrefetch[2];
  unsigned __int8 MaximumPrefetch[2];
  unsigned __int8 MaximumPrefetchCeiling[2];
};

/* 1357 */
struct _DVD_MANUFACTURER_DESCRIPTOR
{
  unsigned __int8 ManufacturingInformation[2048];
};

/* 1358 */
struct _MODE_RIGID_GEOMETRY_PAGE
{
  unsigned __int8 PageCode : 6;
  unsigned __int8 Reserved : 1;
  unsigned __int8 PageSavable : 1;
  unsigned __int8 PageLength;
  unsigned __int8 NumberOfCylinders[3];
  unsigned __int8 NumberOfHeads;
  unsigned __int8 StartWritePrecom[3];
  unsigned __int8 StartReducedCurrent[3];
  unsigned __int8 DriveStepRate[2];
  unsigned __int8 LandZoneCyclinder[3];
  unsigned __int8 RotationalPositionLock : 2;
  unsigned __int8 Reserved2 : 6;
  unsigned __int8 RotationOffset;
  unsigned __int8 Reserved3;
  unsigned __int8 RoataionRate[2];
  unsigned __int8 Reserved4[2];
};

/* 1359 */
struct __declspec(align(2)) _IO_SCSI_CAPABILITIES
{
  unsigned int Length;
  unsigned int MaximumTransferLength;
  unsigned int MaximumPhysicalPages;
  unsigned int SupportedAsynchronousEvents;
  unsigned int AlignmentMask;
  unsigned __int8 TaggedQueuing;
  unsigned __int8 AdapterScansDown;
  unsigned __int8 AdapterUsesPio;
};

/* 1360 */
struct __unaligned __declspec(align(4)) _IDE_DISK_EXTENSION
{
  _DEVICE_OBJECT *DeviceObject;
  _PARTITION_INFORMATION PartitionInformation;
};

/* 1361 */
struct _SLOT_TABLE_INFORMATION
{
  unsigned __int8 DiscChanged : 1;
  unsigned __int8 Reserved : 6;
  unsigned __int8 DiscPresent : 1;
  unsigned __int8 Reserved2[3];
};

/* 1362 */
struct _LUN_LIST
{
  unsigned __int8 LunListLength[4];
  unsigned __int8 Reserved[4];
  unsigned __int8 Lun[][8];
};

/* 1363 */
struct __declspec(align(8)) _DUMP_POINTERS
{
  _ADAPTER_OBJECT *AdapterObject;
  void *MappedRegisterBase;
  void *DumpData;
  void *CommonBufferVa;
  _LARGE_INTEGER CommonBufferPa;
  unsigned int CommonBufferSize;
  unsigned __int8 AllocateCommonBuffers;
  unsigned __int8 Spare1[3];
  void *DeviceObject;
};

/* 1364 */
struct _PCI_CAPABILITIES_HEADER
{
  unsigned __int8 CapabilityID;
  unsigned __int8 Next;
};

/* 1365 */
struct _PCI_MSI_MESSAGE_CONTROL
{
  unsigned __int16 MSIEnable : 1;
  unsigned __int16 MultipleMessageCapable : 3;
  unsigned __int16 MultipleMessageEnable : 3;
  unsigned __int16 CapableOf64Bits : 1;
  unsigned __int16 Reserved : 8;
};

/* 1366 */
struct _PCI_MSI_MESSAGE_ADDRESS
{
  unsigned __int32 Reserved : 2;
  unsigned __int32 Address : 30;
};

/* 1367 */
union $AC1FE6B3B6D938B8F91345939933B48B
{
  _PCI_MSI_MESSAGE_ADDRESS Register;
  unsigned int Raw;
};

/* 1368 */
struct __declspec(align(4)) _PCI_MSI_64BIT_DATA
{
  unsigned int MessageUpperAddress;
  unsigned __int16 MessageData;
};

/* 1369 */
struct _PCI_MSI_32BIT_DATA
{
  unsigned __int16 MessageData;
  unsigned int Unused;
};

/* 1370 */
union $11BA2C997E37D520E00568F871687DE5
{
  _PCI_MSI_64BIT_DATA Bit64;
  _PCI_MSI_32BIT_DATA Bit32;
};

/* 1371 */
struct _PCI_MSI_CAPABILITY
{
  _PCI_CAPABILITIES_HEADER Header;
  _PCI_MSI_MESSAGE_CONTROL MessageControl;
  $AC1FE6B3B6D938B8F91345939933B48B MessageAddress;
  $11BA2C997E37D520E00568F871687DE5 Data;
};

/* 1372 */
struct _DVDX2_ADVANCED_DRIVE_CONTROL_PAGE
{
  unsigned __int8 PageCode : 6;
  unsigned __int8 Reserved : 1;
  unsigned __int8 PSBit : 1;
  unsigned __int8 PageLength;
  unsigned __int8 SpindleSpeedControl;
  unsigned __int8 Reserved2[9];
};

/* 1373 */
struct _XBOX_TIMEZONE_DATE
{
  unsigned __int8 Month;
  unsigned __int8 Day;
  unsigned __int8 DayOfWeek;
  unsigned __int8 Hour;
};

/* 1374 */
struct _FORMATTED_CAPACITY_DESCRIPTOR
{
  unsigned __int8 NumberOfBlocks[4];
  unsigned __int8 Maximum : 1;
  unsigned __int8 Valid : 1;
  unsigned __int8 BlockLength[3];
};

/* 1375 */
struct _MODE_READ_WRITE_RECOVERY_PAGE
{
  unsigned __int8 PageCode : 6;
  unsigned __int8 Reserved1 : 1;
  unsigned __int8 PSBit : 1;
  unsigned __int8 PageLength;
  unsigned __int8 DCRBit : 1;
  unsigned __int8 DTEBit : 1;
  unsigned __int8 PERBit : 1;
  unsigned __int8 EERBit : 1;
  unsigned __int8 RCBit : 1;
  unsigned __int8 TBBit : 1;
  unsigned __int8 ARRE : 1;
  unsigned __int8 AWRE : 1;
  unsigned __int8 ReadRetryCount;
  unsigned __int8 Reserved4[4];
  unsigned __int8 WriteRetryCount;
  unsigned __int8 Reserved5[3];
};

/* 1376 */
struct _XBOX_REFURB_INFO
{
  unsigned int Signature;
  unsigned int PowerCycleCount;
  _LARGE_INTEGER FirstSetTime;
};

/* 1377 */
struct __unaligned __declspec(align(1)) _DVDX2_HOST_CHALLENGE_RESPONSE_ENTRY
{
  unsigned __int8 ChallengeLevel;
  unsigned __int8 ChallengeID;
  unsigned int ChallengeValue;
  unsigned __int8 ResponseModifier;
  unsigned int ResponseValue;
};

/* 1378 */
struct _CDB6GENERIC
{
  unsigned __int8 OperationCode;
  unsigned __int8 Immediate : 1;
  unsigned __int8 CommandUniqueBits : 4;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 CommandUniqueBytes[3];
  unsigned __int8 Link : 1;
  unsigned __int8 Flag : 1;
  unsigned __int8 Reserved : 4;
  unsigned __int8 VendorUnique : 2;
};

/* 1379 */
struct _CDB6READWRITE
{
  unsigned __int8 OperationCode;
  unsigned __int8 LogicalBlockMsb1 : 5;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 LogicalBlockMsb0;
  unsigned __int8 LogicalBlockLsb;
  unsigned __int8 TransferBlocks;
  unsigned __int8 Control;
};

/* 1380 */
struct _CDB6INQUIRY
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 5;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 PageCode;
  unsigned __int8 IReserved;
  unsigned __int8 AllocationLength;
  unsigned __int8 Control;
};

/* 1381 */
struct _CDB6VERIFY
{
  unsigned __int8 OperationCode;
  unsigned __int8 Fixed : 1;
  unsigned __int8 ByteCompare : 1;
  unsigned __int8 Immediate : 1;
  unsigned __int8 Reserved : 2;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 VerificationLength[3];
  unsigned __int8 Control;
};

/* 1382 */
struct _CDB6FORMAT
{
  unsigned __int8 OperationCode;
  unsigned __int8 FormatControl : 5;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 FReserved1;
  unsigned __int8 InterleaveMsb;
  unsigned __int8 InterleaveLsb;
  unsigned __int8 FReserved2;
};

/* 1383 */
struct $F915AA5D52F2CD15B2075FB8DED07584
{
  unsigned __int8 LogicalBlockByte0;
  unsigned __int8 LogicalBlockByte1;
  unsigned __int8 LogicalBlockByte2;
  unsigned __int8 LogicalBlockByte3;
};

/* 1384 */
union $075A003CA37FD008A4A1EA17919C95F1
{
  $F915AA5D52F2CD15B2075FB8DED07584 __s0;
  unsigned int LogicalBlock;
};

/* 1385 */
struct $D1AE75181052226D91396B1837E390B2
{
  unsigned __int8 TransferBlocksMsb;
  unsigned __int8 TransferBlocksLsb;
};

/* 1386 */
union $C91CD5C53F6519DBBF9F67E72B8AD46D
{
  $D1AE75181052226D91396B1837E390B2 __s0;
  unsigned int TransferBlocks;
};

/* 1387 */
struct _CDB10
{
  unsigned __int8 OperationCode;
  unsigned __int8 RelativeAddress : 1;
  unsigned __int8 Reserved1 : 2;
  unsigned __int8 ForceUnitAccess : 1;
  unsigned __int8 DisablePageOut : 1;
  unsigned __int8 LogicalUnitNumber : 3;
  __unaligned __declspec(align(1)) $075A003CA37FD008A4A1EA17919C95F1 ___u6;
  unsigned __int8 Reserved2;
  __unaligned __declspec(align(1)) $C91CD5C53F6519DBBF9F67E72B8AD46D ___u8;
  unsigned __int8 Control;
};

/* 1388 */
struct _CDB12
{
  unsigned __int8 OperationCode;
  unsigned __int8 RelativeAddress : 1;
  unsigned __int8 Reserved1 : 2;
  unsigned __int8 ForceUnitAccess : 1;
  unsigned __int8 DisablePageOut : 1;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 LogicalBlock[4];
  unsigned __int8 TransferLength[4];
  unsigned __int8 Reserved2;
  unsigned __int8 Control;
};

/* 1389 */
struct _PAUSE_RESUME
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 5;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 Reserved2[6];
  unsigned __int8 Action;
  unsigned __int8 Control;
};

/* 1390 */
struct _READ_TOC
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved0 : 1;
  unsigned __int8 Msf : 1;
  unsigned __int8 Reserved1 : 3;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 Format2 : 4;
  unsigned __int8 Reserved2 : 4;
  unsigned __int8 Reserved3[3];
  unsigned __int8 StartingTrack;
  unsigned __int8 AllocationLength[2];
  unsigned __int8 Control : 6;
  unsigned __int8 Format : 2;
};

/* 1391 */
struct _READ_DISK_INFORMATION
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 5;
  unsigned __int8 Lun : 3;
  unsigned __int8 Reserved2[5];
  unsigned __int8 AllocationLength[2];
  unsigned __int8 Control;
};

/* 1392 */
struct _READ_TRACK_INFORMATION
{
  unsigned __int8 OperationCode;
  unsigned __int8 Track : 1;
  unsigned __int8 Reserved1 : 3;
  unsigned __int8 Reserved2 : 1;
  unsigned __int8 Lun : 3;
  unsigned __int8 BlockAddress[4];
  unsigned __int8 Reserved3;
  unsigned __int8 AllocationLength[2];
  unsigned __int8 Control;
};

/* 1393 */
struct _READ_HEADER
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 1;
  unsigned __int8 Msf : 1;
  unsigned __int8 Reserved2 : 3;
  unsigned __int8 Lun : 3;
  unsigned __int8 LogicalBlockAddress[4];
  unsigned __int8 Reserved3;
  unsigned __int8 AllocationLength[2];
  unsigned __int8 Control;
};

/* 1394 */
struct _PLAY_AUDIO
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 5;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 StartingBlockAddress[4];
  unsigned __int8 Reserved2;
  unsigned __int8 PlayLength[2];
  unsigned __int8 Control;
};

/* 1395 */
struct _PLAY_AUDIO_MSF
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 5;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 Reserved2;
  unsigned __int8 StartingM;
  unsigned __int8 StartingS;
  unsigned __int8 StartingF;
  unsigned __int8 EndingM;
  unsigned __int8 EndingS;
  unsigned __int8 EndingF;
  unsigned __int8 Control;
};

/* 1396 */
struct _LBA
{
  unsigned __int8 StartingBlockAddress[4];
  unsigned __int8 PlayLength[4];
};

/* 1397 */
struct _MSF
{
  unsigned __int8 Reserved1;
  unsigned __int8 StartingM;
  unsigned __int8 StartingS;
  unsigned __int8 StartingF;
  unsigned __int8 EndingM;
  unsigned __int8 EndingS;
  unsigned __int8 EndingF;
  unsigned __int8 Reserved2;
};

/* 1398 */
union $1D7A85CD0584CA27C41A20B0C2C55F6D
{
  _LBA LBA;
  _MSF MSF;
};

/* 1399 */
struct _PLAY_CD
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 1;
  unsigned __int8 CMSF : 1;
  unsigned __int8 ExpectedSectorType : 3;
  unsigned __int8 Lun : 3;
  $1D7A85CD0584CA27C41A20B0C2C55F6D ___u5;
  unsigned __int8 Audio : 1;
  unsigned __int8 Composite : 1;
  unsigned __int8 Port1 : 1;
  unsigned __int8 Port2 : 1;
  unsigned __int8 Reserved2 : 3;
  unsigned __int8 Speed : 1;
  unsigned __int8 Control;
};

/* 1400 */
struct _SCAN_CD
{
  unsigned __int8 OperationCode;
  unsigned __int8 RelativeAddress : 1;
  unsigned __int8 Reserved1 : 3;
  unsigned __int8 Direct : 1;
  unsigned __int8 Lun : 3;
  unsigned __int8 StartingAddress[4];
  unsigned __int8 Reserved2[3];
  unsigned __int8 Reserved3 : 6;
  unsigned __int8 Type : 2;
  unsigned __int8 Reserved4;
  unsigned __int8 Control;
};

/* 1401 */
struct _STOP_PLAY_SCAN
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 5;
  unsigned __int8 Lun : 3;
  unsigned __int8 Reserved2[7];
  unsigned __int8 Control;
};

/* 1402 */
struct _SUBCHANNEL
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved0 : 1;
  unsigned __int8 Msf : 1;
  unsigned __int8 Reserved1 : 3;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 Reserved2 : 6;
  unsigned __int8 SubQ : 1;
  unsigned __int8 Reserved3 : 1;
  unsigned __int8 Format;
  unsigned __int8 Reserved4[2];
  unsigned __int8 TrackNumber;
  unsigned __int8 AllocationLength[2];
  unsigned __int8 Control;
};

/* 1403 */
struct _READ_CD
{
  unsigned __int8 OperationCode;
  unsigned __int8 RelativeAddress : 1;
  unsigned __int8 Reserved0 : 1;
  unsigned __int8 ExpectedSectorType : 3;
  unsigned __int8 Lun : 3;
  unsigned __int8 StartingLBA[4];
  unsigned __int8 TransferBlocks[3];
  unsigned __int8 Reserved2 : 1;
  unsigned __int8 ErrorFlags : 2;
  unsigned __int8 IncludeEDC : 1;
  unsigned __int8 IncludeUserData : 1;
  unsigned __int8 HeaderCode : 2;
  unsigned __int8 IncludeSyncData : 1;
  unsigned __int8 SubChannelSelection : 3;
  unsigned __int8 Reserved3 : 5;
  unsigned __int8 Control;
};

/* 1404 */
struct _READ_CD_MSF
{
  unsigned __int8 OperationCode;
  unsigned __int8 RelativeAddress : 1;
  unsigned __int8 Reserved1 : 1;
  unsigned __int8 ExpectedSectorType : 3;
  unsigned __int8 Lun : 3;
  unsigned __int8 Reserved2;
  unsigned __int8 StartingM;
  unsigned __int8 StartingS;
  unsigned __int8 StartingF;
  unsigned __int8 EndingM;
  unsigned __int8 EndingS;
  unsigned __int8 EndingF;
  unsigned __int8 Reserved3;
  unsigned __int8 Reserved4 : 1;
  unsigned __int8 ErrorFlags : 2;
  unsigned __int8 IncludeEDC : 1;
  unsigned __int8 IncludeUserData : 1;
  unsigned __int8 HeaderCode : 2;
  unsigned __int8 IncludeSyncData : 1;
  unsigned __int8 SubChannelSelection : 3;
  unsigned __int8 Reserved5 : 5;
  unsigned __int8 Control;
};

/* 1405 */
struct _PLXTR_READ_CDDA
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved0 : 5;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 LogicalBlockByte0;
  unsigned __int8 LogicalBlockByte1;
  unsigned __int8 LogicalBlockByte2;
  unsigned __int8 LogicalBlockByte3;
  unsigned __int8 TransferBlockByte0;
  unsigned __int8 TransferBlockByte1;
  unsigned __int8 TransferBlockByte2;
  unsigned __int8 TransferBlockByte3;
  unsigned __int8 SubCode;
  unsigned __int8 Control;
};

/* 1406 */
struct _NEC_READ_CDDA
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved0;
  unsigned __int8 LogicalBlockByte0;
  unsigned __int8 LogicalBlockByte1;
  unsigned __int8 LogicalBlockByte2;
  unsigned __int8 LogicalBlockByte3;
  unsigned __int8 Reserved1;
  unsigned __int8 TransferBlockByte0;
  unsigned __int8 TransferBlockByte1;
  unsigned __int8 Control;
};

/* 1407 */
struct _MODE_SENSE
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 3;
  unsigned __int8 Dbd : 1;
  unsigned __int8 Reserved2 : 1;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 PageCode : 6;
  unsigned __int8 Pc : 2;
  unsigned __int8 Reserved3;
  unsigned __int8 AllocationLength;
  unsigned __int8 Control;
};

/* 1408 */
struct _MODE_SENSE10
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 3;
  unsigned __int8 Dbd : 1;
  unsigned __int8 Reserved2 : 1;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 PageCode : 6;
  unsigned __int8 Pc : 2;
  unsigned __int8 Reserved3[4];
  unsigned __int8 AllocationLength[2];
  unsigned __int8 Control;
};

/* 1409 */
struct _MODE_SELECT
{
  unsigned __int8 OperationCode;
  unsigned __int8 SPBit : 1;
  unsigned __int8 Reserved1 : 3;
  unsigned __int8 PFBit : 1;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 Reserved2[2];
  unsigned __int8 ParameterListLength;
  unsigned __int8 Control;
};

/* 1410 */
struct _MODE_SELECT10
{
  unsigned __int8 OperationCode;
  unsigned __int8 SPBit : 1;
  unsigned __int8 Reserved1 : 3;
  unsigned __int8 PFBit : 1;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 Reserved2[5];
  unsigned __int8 ParameterListLength[2];
  unsigned __int8 Control;
};

/* 1411 */
struct _LOCATE
{
  unsigned __int8 OperationCode;
  unsigned __int8 Immediate : 1;
  unsigned __int8 CPBit : 1;
  unsigned __int8 BTBit : 1;
  unsigned __int8 Reserved1 : 2;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 Reserved3;
  unsigned __int8 LogicalBlockAddress[4];
  unsigned __int8 Reserved4;
  unsigned __int8 Partition;
  unsigned __int8 Control;
};

/* 1412 */
struct _LOGSENSE
{
  unsigned __int8 OperationCode;
  unsigned __int8 SPBit : 1;
  unsigned __int8 PPCBit : 1;
  unsigned __int8 Reserved1 : 3;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 PageCode : 6;
  unsigned __int8 PCBit : 2;
  unsigned __int8 Reserved2;
  unsigned __int8 Reserved3;
  unsigned __int8 ParameterPointer[2];
  unsigned __int8 AllocationLength[2];
  unsigned __int8 Control;
};

/* 1413 */
struct _LOGSELECT
{
  unsigned __int8 OperationCode;
  unsigned __int8 SPBit : 1;
  unsigned __int8 PCRBit : 1;
  unsigned __int8 Reserved1 : 3;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 Reserved : 6;
  unsigned __int8 PCBit : 2;
  unsigned __int8 Reserved2[4];
  unsigned __int8 ParameterListLength[2];
  unsigned __int8 Control;
};

/* 1414 */
struct _PRINT
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved : 5;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 TransferLength[3];
  unsigned __int8 Control;
};

/* 1415 */
struct _SEEK
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 5;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 LogicalBlockAddress[4];
  unsigned __int8 Reserved2[3];
  unsigned __int8 Control;
};

/* 1416 */
struct _ERASE
{
  unsigned __int8 OperationCode;
  unsigned __int8 Long : 1;
  unsigned __int8 Immediate : 1;
  unsigned __int8 Reserved1 : 3;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 Reserved2[3];
  unsigned __int8 Control;
};

/* 1417 */
struct _START_STOP
{
  unsigned __int8 OperationCode;
  unsigned __int8 Immediate : 1;
  unsigned __int8 Reserved1 : 4;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 Reserved2[2];
  unsigned __int8 Start : 1;
  unsigned __int8 LoadEject : 1;
  unsigned __int8 Reserved3 : 6;
  unsigned __int8 Control;
};

/* 1418 */
struct _MEDIA_REMOVAL
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 5;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 Reserved2[2];
  unsigned __int8 Prevent : 1;
  unsigned __int8 Persistant : 1;
  unsigned __int8 Reserved3 : 6;
  unsigned __int8 Control;
};

/* 1419 */
struct _SEEK_BLOCK
{
  unsigned __int8 OperationCode;
  unsigned __int8 Immediate : 1;
  unsigned __int8 Reserved1 : 7;
  unsigned __int8 BlockAddress[3];
  unsigned __int8 Link : 1;
  unsigned __int8 Flag : 1;
  unsigned __int8 Reserved2 : 4;
  unsigned __int8 VendorUnique : 2;
};

/* 1420 */
struct _REQUEST_BLOCK_ADDRESS
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1[3];
  unsigned __int8 AllocationLength;
  unsigned __int8 Link : 1;
  unsigned __int8 Flag : 1;
  unsigned __int8 Reserved2 : 4;
  unsigned __int8 VendorUnique : 2;
};

/* 1421 */
struct _PARTITION
{
  unsigned __int8 OperationCode;
  unsigned __int8 Immediate : 1;
  unsigned __int8 Sel : 1;
  unsigned __int8 PartitionSelect : 6;
  unsigned __int8 Reserved1[3];
  unsigned __int8 Control;
};

/* 1422 */
struct _WRITE_TAPE_MARKS
{
  unsigned __int8 OperationCode;
  unsigned __int8 Immediate : 1;
  unsigned __int8 WriteSetMarks : 1;
  unsigned __int8 Reserved : 3;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 TransferLength[3];
  unsigned __int8 Control;
};

/* 1423 */
struct $723BA1E74126376B75E150C11F3E5EB8
{
  unsigned __int8 Link : 1;
  unsigned __int8 Flag : 1;
  unsigned __int8 Reserved : 4;
  unsigned __int8 VendorUnique : 2;
};

/* 1424 */
union $89736504ECA25F1020E1D7D293F3008D
{
  unsigned __int8 value;
  $723BA1E74126376B75E150C11F3E5EB8 Fields;
};

/* 1425 */
struct _SPACE_TAPE_MARKS
{
  unsigned __int8 OperationCode;
  unsigned __int8 Code : 3;
  unsigned __int8 Reserved : 2;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 NumMarksMSB;
  unsigned __int8 NumMarks;
  unsigned __int8 NumMarksLSB;
  $89736504ECA25F1020E1D7D293F3008D Byte6;
};

/* 1426 */
struct _READ_POSITION
{
  unsigned __int8 Operation;
  unsigned __int8 BlockType : 1;
  unsigned __int8 Reserved1 : 4;
  unsigned __int8 Lun : 3;
  unsigned __int8 Reserved2[7];
  unsigned __int8 Control;
};

/* 1427 */
struct _CDB6READWRITETAPE
{
  unsigned __int8 OperationCode;
  unsigned __int8 VendorSpecific : 5;
  unsigned __int8 Reserved : 3;
  unsigned __int8 TransferLenMSB;
  unsigned __int8 TransferLen;
  unsigned __int8 TransferLenLSB;
  unsigned __int8 Link : 1;
  unsigned __int8 Flag : 1;
  unsigned __int8 Reserved1 : 4;
  unsigned __int8 VendorUnique : 2;
};

/* 1428 */
struct _INIT_ELEMENT_STATUS
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 5;
  unsigned __int8 LogicalUnitNubmer : 3;
  unsigned __int8 Reserved2[3];
  unsigned __int8 Reserved3 : 7;
  unsigned __int8 NoBarCode : 1;
};

/* 1429 */
struct _INITIALIZE_ELEMENT_RANGE
{
  unsigned __int8 OperationCode;
  unsigned __int8 Range : 1;
  unsigned __int8 Reserved1 : 4;
  unsigned __int8 LogicalUnitNubmer : 3;
  unsigned __int8 FirstElementAddress[2];
  unsigned __int8 Reserved2[2];
  unsigned __int8 NumberOfElements[2];
  unsigned __int8 Reserved3;
  unsigned __int8 Reserved4 : 7;
  unsigned __int8 NoBarCode : 1;
};

/* 1430 */
struct _POSITION_TO_ELEMENT
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 5;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 TransportElementAddress[2];
  unsigned __int8 DestinationElementAddress[2];
  unsigned __int8 Reserved2[2];
  unsigned __int8 Flip : 1;
  unsigned __int8 Reserved3 : 7;
  unsigned __int8 Control;
};

/* 1431 */
struct _MOVE_MEDIUM
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 5;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 TransportElementAddress[2];
  unsigned __int8 SourceElementAddress[2];
  unsigned __int8 DestinationElementAddress[2];
  unsigned __int8 Reserved2[2];
  unsigned __int8 Flip : 1;
  unsigned __int8 Reserved3 : 7;
  unsigned __int8 Control;
};

/* 1432 */
struct _EXCHANGE_MEDIUM
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 5;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 TransportElementAddress[2];
  unsigned __int8 SourceElementAddress[2];
  unsigned __int8 Destination1ElementAddress[2];
  unsigned __int8 Destination2ElementAddress[2];
  unsigned __int8 Flip1 : 1;
  unsigned __int8 Flip2 : 1;
  unsigned __int8 Reserved3 : 6;
  unsigned __int8 Control;
};

/* 1433 */
struct _READ_ELEMENT_STATUS
{
  unsigned __int8 OperationCode;
  unsigned __int8 ElementType : 4;
  unsigned __int8 VolTag : 1;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 StartingElementAddress[2];
  unsigned __int8 NumberOfElements[2];
  unsigned __int8 Reserved1;
  unsigned __int8 AllocationLength[3];
  unsigned __int8 Reserved2;
  unsigned __int8 Control;
};

/* 1434 */
struct _SEND_VOLUME_TAG
{
  unsigned __int8 OperationCode;
  unsigned __int8 ElementType : 4;
  unsigned __int8 Reserved1 : 1;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 StartingElementAddress[2];
  unsigned __int8 Reserved2;
  unsigned __int8 ActionCode : 5;
  unsigned __int8 Reserved3 : 3;
  unsigned __int8 Reserved4[2];
  unsigned __int8 ParameterListLength[2];
  unsigned __int8 Reserved5;
  unsigned __int8 Control;
};

/* 1435 */
struct _REQUEST_VOLUME_ELEMENT_ADDRESS
{
  unsigned __int8 OperationCode;
  unsigned __int8 ElementType : 4;
  unsigned __int8 VolTag : 1;
  unsigned __int8 LogicalUnitNumber : 3;
  unsigned __int8 StartingElementAddress[2];
  unsigned __int8 NumberElements[2];
  unsigned __int8 Reserved1;
  unsigned __int8 AllocationLength[3];
  unsigned __int8 Reserved2;
  unsigned __int8 Control;
};

/* 1436 */
struct _LOAD_UNLOAD
{
  unsigned __int8 OperationCode;
  unsigned __int8 Immediate : 1;
  unsigned __int8 Reserved1 : 4;
  unsigned __int8 Lun : 3;
  unsigned __int8 Reserved2[2];
  unsigned __int8 Start : 1;
  unsigned __int8 LoadEject : 1;
  unsigned __int8 Reserved3 : 6;
  unsigned __int8 Reserved4[3];
  unsigned __int8 Slot;
  unsigned __int8 Reserved5[3];
};

/* 1437 */
struct _MECH_STATUS
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved : 5;
  unsigned __int8 Lun : 3;
  unsigned __int8 Reserved1[6];
  unsigned __int8 AllocationLength[2];
  unsigned __int8 Reserved2[1];
  unsigned __int8 Control;
};

/* 1438 */
struct _SYNCHRONIZE_CACHE10
{
  unsigned __int8 OperationCode;
  unsigned __int8 RelAddr : 1;
  unsigned __int8 Immediate : 1;
  unsigned __int8 Reserved : 3;
  unsigned __int8 Lun : 3;
  unsigned __int8 LogicalBlockAddress[4];
  unsigned __int8 Reserved2;
  unsigned __int8 BlockCount[2];
  unsigned __int8 Control;
};

/* 1439 */
struct _GET_EVENT_STATUS_NOTIFICATION
{
  unsigned __int8 OperationCode;
  unsigned __int8 Immediate : 1;
  unsigned __int8 Reserved : 4;
  unsigned __int8 Lun : 3;
  unsigned __int8 Reserved2[2];
  unsigned __int8 NotificationClassRequest;
  unsigned __int8 Reserved3[2];
  unsigned __int8 EventListLength[2];
  unsigned __int8 Control;
};

/* 1440 */
struct _READ_DVD_STRUCTURE
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 5;
  unsigned __int8 Lun : 3;
  unsigned __int8 RMDBlockNumber[4];
  unsigned __int8 LayerNumber;
  unsigned __int8 Format;
  unsigned __int8 AllocationLength[2];
  unsigned __int8 Reserved3 : 6;
  unsigned __int8 AGID : 2;
  unsigned __int8 Control;
};

/* 1441 */
struct _SEND_KEY
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 5;
  unsigned __int8 Lun : 3;
  unsigned __int8 Reserved2[6];
  unsigned __int8 ParameterListLength[2];
  unsigned __int8 KeyFormat : 6;
  unsigned __int8 AGID : 2;
  unsigned __int8 Control;
};

/* 1442 */
struct _REPORT_KEY
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 5;
  unsigned __int8 Lun : 3;
  unsigned __int8 LogicalBlockAddress[4];
  unsigned __int8 Reserved2[2];
  unsigned __int8 AllocationLength[2];
  unsigned __int8 KeyFormat : 6;
  unsigned __int8 AGID : 2;
  unsigned __int8 Control;
};

/* 1443 */
struct _SET_READ_AHEAD
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 5;
  unsigned __int8 Lun : 3;
  unsigned __int8 TriggerLBA[4];
  unsigned __int8 ReadAheadLBA[4];
  unsigned __int8 Reserved2;
  unsigned __int8 Control;
};

/* 1444 */
struct _READ_FORMATTED_CAPACITIES
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1 : 5;
  unsigned __int8 Lun : 3;
  unsigned __int8 Reserved2[5];
  unsigned __int8 AllocationLength[2];
  unsigned __int8 Control;
};

/* 1445 */
struct _REPORT_LUNS
{
  unsigned __int8 OperationCode;
  unsigned __int8 Reserved1[5];
  unsigned __int8 AllocationLength[4];
  unsigned __int8 Reserved2[1];
  unsigned __int8 Control;
};

/* 1446 */
union _CDB
{
  _CDB6GENERIC CDB6GENERIC;
  _CDB6GENERIC *PCDB6GENERIC;
  _CDB6READWRITE CDB6READWRITE;
  _CDB6READWRITE *PCDB6READWRITE;
  _CDB6INQUIRY CDB6INQUIRY;
  _CDB6INQUIRY *PCDB6INQUIRY;
  _CDB6VERIFY CDB6VERIFY;
  _CDB6VERIFY *PCDB6VERIFY;
  _CDB6FORMAT CDB6FORMAT;
  _CDB6FORMAT *PCDB6FORMAT;
  _CDB10 CDB10;
  _CDB10 *PCDB10;
  _CDB12 CDB12;
  _CDB12 *PCDB12;
  _PAUSE_RESUME PAUSE_RESUME;
  _PAUSE_RESUME *PPAUSE_RESUME;
  _READ_TOC READ_TOC;
  _READ_TOC *PREAD_TOC;
  _READ_DISK_INFORMATION READ_DISK_INFORMATION;
  _READ_DISK_INFORMATION *PREAD_DISK_INFORMATION;
  _READ_TRACK_INFORMATION READ_TRACK_INFORMATION;
  _READ_TRACK_INFORMATION *PREAD_TRACK_INFORMATION;
  _READ_HEADER READ_HEADER;
  _READ_HEADER *PREAD_HEADER;
  _PLAY_AUDIO PLAY_AUDIO;
  _PLAY_AUDIO *PPLAY_AUDIO;
  _PLAY_AUDIO_MSF PLAY_AUDIO_MSF;
  _PLAY_AUDIO_MSF *PPLAY_AUDIO_MSF;
  _PLAY_CD PLAY_CD;
  _PLAY_CD *PPLAY_CD;
  _SCAN_CD SCAN_CD;
  _SCAN_CD *PSCAN_CD;
  _STOP_PLAY_SCAN STOP_PLAY_SCAN;
  _STOP_PLAY_SCAN *PSTOP_PLAY_SCAN;
  _SUBCHANNEL SUBCHANNEL;
  _SUBCHANNEL *PSUBCHANNEL;
  _READ_CD READ_CD;
  _READ_CD *PREAD_CD;
  _READ_CD_MSF READ_CD_MSF;
  _READ_CD_MSF *PREAD_CD_MSF;
  _PLXTR_READ_CDDA PLXTR_READ_CDDA;
  _PLXTR_READ_CDDA *PPLXTR_READ_CDDA;
  _NEC_READ_CDDA NEC_READ_CDDA;
  _NEC_READ_CDDA *PNEC_READ_CDDA;
  _MODE_SENSE MODE_SENSE;
  _MODE_SENSE *PMODE_SENSE;
  _MODE_SENSE10 MODE_SENSE10;
  _MODE_SENSE10 *PMODE_SENSE10;
  _MODE_SELECT MODE_SELECT;
  _MODE_SELECT *PMODE_SELECT;
  _MODE_SELECT10 MODE_SELECT10;
  _MODE_SELECT10 *PMODE_SELECT10;
  _LOCATE LOCATE;
  _LOCATE *PLOCATE;
  _LOGSENSE LOGSENSE;
  _LOGSENSE *PLOGSENSE;
  _LOGSELECT LOGSELECT;
  _LOGSELECT *PLOGSELECT;
  _PRINT PRINT;
  _PRINT *PPRINT;
  _SEEK SEEK;
  _SEEK *PSEEK;
  _ERASE ERASE;
  _ERASE *PERASE;
  _START_STOP START_STOP;
  _START_STOP *PSTART_STOP;
  _MEDIA_REMOVAL MEDIA_REMOVAL;
  _MEDIA_REMOVAL *PMEDIA_REMOVAL;
  _SEEK_BLOCK SEEK_BLOCK;
  _SEEK_BLOCK *PSEEK_BLOCK;
  _REQUEST_BLOCK_ADDRESS REQUEST_BLOCK_ADDRESS;
  _REQUEST_BLOCK_ADDRESS *PREQUEST_BLOCK_ADDRESS;
  _PARTITION PARTITION;
  _PARTITION *PPARTITION;
  _WRITE_TAPE_MARKS WRITE_TAPE_MARKS;
  _WRITE_TAPE_MARKS *PWRITE_TAPE_MARKS;
  _SPACE_TAPE_MARKS SPACE_TAPE_MARKS;
  _SPACE_TAPE_MARKS *PSPACE_TAPE_MARKS;
  _READ_POSITION READ_POSITION;
  _READ_POSITION *PREAD_POSITION;
  _CDB6READWRITETAPE CDB6READWRITETAPE;
  _CDB6READWRITETAPE *PCDB6READWRITETAPE;
  _INIT_ELEMENT_STATUS INIT_ELEMENT_STATUS;
  _INIT_ELEMENT_STATUS *PINIT_ELEMENT_STATUS;
  _INITIALIZE_ELEMENT_RANGE INITIALIZE_ELEMENT_RANGE;
  _INITIALIZE_ELEMENT_RANGE *PINITIALIZE_ELEMENT_RANGE;
  _POSITION_TO_ELEMENT POSITION_TO_ELEMENT;
  _POSITION_TO_ELEMENT *PPOSITION_TO_ELEMENT;
  _MOVE_MEDIUM MOVE_MEDIUM;
  _MOVE_MEDIUM *PMOVE_MEDIUM;
  _EXCHANGE_MEDIUM EXCHANGE_MEDIUM;
  _EXCHANGE_MEDIUM *PEXCHANGE_MEDIUM;
  _READ_ELEMENT_STATUS READ_ELEMENT_STATUS;
  _READ_ELEMENT_STATUS *PREAD_ELEMENT_STATUS;
  _SEND_VOLUME_TAG SEND_VOLUME_TAG;
  _SEND_VOLUME_TAG *PSEND_VOLUME_TAG;
  _REQUEST_VOLUME_ELEMENT_ADDRESS REQUEST_VOLUME_ELEMENT_ADDRESS;
  _REQUEST_VOLUME_ELEMENT_ADDRESS *PREQUEST_VOLUME_ELEMENT_ADDRESS;
  _LOAD_UNLOAD LOAD_UNLOAD;
  _LOAD_UNLOAD *PLOAD_UNLOAD;
  _MECH_STATUS MECH_STATUS;
  _MECH_STATUS *PMECH_STATUS;
  _SYNCHRONIZE_CACHE10 SYNCHRONIZE_CACHE10;
  _SYNCHRONIZE_CACHE10 *PSYNCHRONIZE_CACHE10;
  _GET_EVENT_STATUS_NOTIFICATION GET_EVENT_STATUS_NOTIFICATION;
  _GET_EVENT_STATUS_NOTIFICATION *PGET_EVENT_STATUS_NOTIFICATION;
  _READ_DVD_STRUCTURE READ_DVD_STRUCTURE;
  _READ_DVD_STRUCTURE *PREAD_DVD_STRUCTURE;
  _SEND_KEY SEND_KEY;
  _SEND_KEY *PSEND_KEY;
  _REPORT_KEY REPORT_KEY;
  _REPORT_KEY *PREPORT_KEY;
  _SET_READ_AHEAD SET_READ_AHEAD;
  _SET_READ_AHEAD *PSET_READ_AHEAD;
  _READ_FORMATTED_CAPACITIES READ_FORMATTED_CAPACITIES;
  _READ_FORMATTED_CAPACITIES *PREAD_FORMATTED_CAPACITIES;
  _REPORT_LUNS REPORT_LUNS;
  _REPORT_LUNS *PREPORT_LUNS;
  unsigned int AsUlong[4];
  unsigned __int8 AsByte[16];
};

/* 1447 */
struct $1B3C967F00C1DAC3A992BE3013D44DFB
{
  unsigned __int32 Reserved1 : 2;
  unsigned __int32 RegisterNumber : 6;
  unsigned __int32 FunctionNumber : 3;
  unsigned __int32 Reserved2 : 21;
};

/* 1448 */
union $CAD6677153A6953C03784BC9A6CE2C44
{
  $1B3C967F00C1DAC3A992BE3013D44DFB bits;
  unsigned int AsULONG;
};

/* 1449 */
struct _PCI_TYPE0_CFG_CYCLE_BITS
{
  $CAD6677153A6953C03784BC9A6CE2C44 u;
};

/* 1450 */
struct _PORT_OUTPUT
{
  unsigned __int8 ChannelSelection;
  unsigned __int8 Volume;
};

/* 1451 */
struct _SCSI_ADDRESS
{
  unsigned int Length;
  unsigned __int8 PortNumber;
  unsigned __int8 PathId;
  unsigned __int8 TargetId;
  unsigned __int8 Lun;
};

/* 1452 */
struct _XBOX_UEM_INFO
{
  unsigned __int8 LastCode;
  unsigned __int8 Reserved1;
  unsigned __int16 History;
};

/* 1453 */
struct __unaligned __declspec(align(4)) _IDE_MEDIA_BOARD_EXTENSION
{
  _DEVICE_OBJECT *DeviceObject;
  _PARTITION_INFORMATION PartitionInformation;
};

/* 1454 */
struct _DVD_RPC_KEY
{
  unsigned __int8 UserResetsAvailable : 3;
  unsigned __int8 ManufacturerResetsAvailable : 3;
  unsigned __int8 TypeCode : 2;
  unsigned __int8 RegionMask;
  unsigned __int8 RpcScheme;
  unsigned __int8 Reserved2[1];
};

/* 1455 */
struct _DVDX2_HOST_CHALLENGE_RESPONSE_TABLE
{
  unsigned __int8 Version;
  unsigned __int8 NumberOfEntries;
  _DVDX2_HOST_CHALLENGE_RESPONSE_ENTRY Entries[23];
};

/* 1456 */
struct __unaligned __declspec(align(4)) _DVDX2_CONTROL_DATA
{
  unsigned __int8 Length[2];
  unsigned __int8 Reserved[2];
  _DVD_LAYER_DESCRIPTOR LayerDescriptor;
  unsigned __int8 Reserved2[15];
  unsigned __int8 Reserved3[736];
  _DVDX2_HOST_CHALLENGE_RESPONSE_TABLE HostChallengeResponseTable;
  unsigned __int8 Reserved4[32];
  _LARGE_INTEGER ContentSourceTimeStamp;
  unsigned __int8 Reserved5[20];
  _GUID ContentSourceIdentifier;
  unsigned __int8 Reserved6[83];
  unsigned __int8 Features;
  _LARGE_INTEGER AuthoringTimeStamp;
  unsigned int TitleTimeDateStamp;
  unsigned __int8 Reserved7[15];
  unsigned __int8 AuthoringSystemType;
  _GUID AuthoringSystemIdentifier;
  unsigned __int8 AuthoringHash[20];
  unsigned __int8 AuthoringSignature[256];
  _LARGE_INTEGER MasteringTimeStamp;
  unsigned __int8 Reserved8[19];
  unsigned __int8 MasteringSystemType;
  _GUID MasteringSystemIdentifier;
  unsigned __int8 MasteringHash[20];
  unsigned __int8 MasteringSignature[64];
  unsigned __int8 Reserved9;
};

/* 1457 */
struct _MODE_PARAMETER_HEADER
{
  unsigned __int8 ModeDataLength;
  unsigned __int8 MediumType;
  unsigned __int8 DeviceSpecificParameter;
  unsigned __int8 BlockDescriptorLength;
};

/* 1458 */
struct _MODE_FORMAT_PAGE
{
  unsigned __int8 PageCode : 6;
  unsigned __int8 Reserved : 1;
  unsigned __int8 PageSavable : 1;
  unsigned __int8 PageLength;
  unsigned __int8 TracksPerZone[2];
  unsigned __int8 AlternateSectorsPerZone[2];
  unsigned __int8 AlternateTracksPerZone[2];
  unsigned __int8 AlternateTracksPerLogicalUnit[2];
  unsigned __int8 SectorsPerTrack[2];
  unsigned __int8 BytesPerPhysicalSector[2];
  unsigned __int8 Interleave[2];
  unsigned __int8 TrackSkewFactor[2];
  unsigned __int8 CylinderSkewFactor[2];
  unsigned __int8 Reserved2 : 4;
  unsigned __int8 SurfaceFirst : 1;
  unsigned __int8 RemovableMedia : 1;
  unsigned __int8 HardSectorFormating : 1;
  unsigned __int8 SoftSectorFormating : 1;
  unsigned __int8 Reserved3[3];
};

/* 1459 */
struct _MODE_READ_RECOVERY_PAGE
{
  unsigned __int8 PageCode : 6;
  unsigned __int8 Reserved1 : 1;
  unsigned __int8 PSBit : 1;
  unsigned __int8 PageLength;
  unsigned __int8 DCRBit : 1;
  unsigned __int8 DTEBit : 1;
  unsigned __int8 PERBit : 1;
  unsigned __int8 Reserved2 : 1;
  unsigned __int8 RCBit : 1;
  unsigned __int8 TBBit : 1;
  unsigned __int8 Reserved3 : 2;
  unsigned __int8 ReadRetryCount;
  unsigned __int8 Reserved4[4];
};

/* 1460 */
struct _NOTIFICATION_MEDIA_STATUS
{
  unsigned __int8 MediaStatus : 4;
  unsigned __int8 Reserved : 4;
  unsigned __int8 PowerStatus;
  unsigned __int8 StartSlot;
  unsigned __int8 EndSlot;
};

/* 1461 */
struct _NOTIFICATION_BUSY_STATUS
{
  unsigned __int8 DeviceBusyEvent : 4;
  unsigned __int8 Reserved : 4;
  unsigned __int8 DeviceBusyStatus;
  unsigned __int8 Time[2];
};

/* 1462 */
struct _DVD_DISK_KEY_DESCRIPTOR
{
  unsigned __int8 DiskKeyData[2048];
};

/* 1463 */
struct _XBOX_MTE_INFO
{
  unsigned int Signature;
  unsigned int OnlineKeyCRC;
  unsigned int HDKeyCRC;
};

/* 1464 */
struct _PCI_PMCSR
{
  unsigned __int16 PowerState : 2;
  unsigned __int16 Rsvd1 : 6;
  unsigned __int16 PMEEnable : 1;
  unsigned __int16 DataSelect : 4;
  unsigned __int16 DataScale : 2;
  unsigned __int16 PMEStatus : 1;
};

/* 1465 */
struct _MECHANICAL_STATUS_INFORMATION_HEADER
{
  unsigned __int8 CurrentSlot : 5;
  unsigned __int8 ChangerState : 2;
  unsigned __int8 Fault : 1;
  unsigned __int8 Reserved : 5;
  unsigned __int8 MechanismState : 3;
  unsigned __int8 CurrentLogicalBlockAddress[3];
  unsigned __int8 NumberAvailableSlots;
  unsigned __int8 SlotTableLength[2];
};

/* 1466 */
struct _PCI_HEADER_TYPE_0
{
  unsigned int BaseAddresses[6];
  unsigned int CIS;
  unsigned __int16 SubVendorID;
  unsigned __int16 SubSystemID;
  unsigned int ROMBaseAddress;
  unsigned __int8 CapabilitiesPtr;
  unsigned __int8 Reserved1[3];
  unsigned int Reserved2;
  unsigned __int8 InterruptLine;
  unsigned __int8 InterruptPin;
  unsigned __int8 MinimumGrant;
  unsigned __int8 MaximumLatency;
};

/* 1467 */
struct _PCI_HEADER_TYPE_1
{
  unsigned int BaseAddresses[2];
  unsigned __int8 PrimaryBus;
  unsigned __int8 SecondaryBus;
  unsigned __int8 SubordinateBus;
  unsigned __int8 SecondaryLatency;
  unsigned __int8 IOBase;
  unsigned __int8 IOLimit;
  unsigned __int16 SecondaryStatus;
  unsigned __int16 MemoryBase;
  unsigned __int16 MemoryLimit;
  unsigned __int16 PrefetchBase;
  unsigned __int16 PrefetchLimit;
  unsigned int PrefetchBaseUpper32;
  unsigned int PrefetchLimitUpper32;
  unsigned __int16 IOBaseUpper16;
  unsigned __int16 IOLimitUpper16;
  unsigned __int8 CapabilitiesPtr;
  unsigned __int8 Reserved1[3];
  unsigned int ROMBaseAddress;
  unsigned __int8 InterruptLine;
  unsigned __int8 InterruptPin;
  unsigned __int16 BridgeControl;
};

/* 1468 */
struct $B78B5C91D79883834433CAA58E1480D9
{
  unsigned int Base;
  unsigned int Limit;
};

/* 1469 */
struct _PCI_HEADER_TYPE_2
{
  unsigned int SocketRegistersBaseAddress;
  unsigned __int8 CapabilitiesPtr;
  unsigned __int8 Reserved;
  unsigned __int16 SecondaryStatus;
  unsigned __int8 PrimaryBus;
  unsigned __int8 SecondaryBus;
  unsigned __int8 SubordinateBus;
  unsigned __int8 SecondaryLatency;
  $B78B5C91D79883834433CAA58E1480D9 Range[4];
  unsigned __int8 InterruptLine;
  unsigned __int8 InterruptPin;
  unsigned __int16 BridgeControl;
};

/* 1470 */
union $4BF11EC6D537B0E54D2801C19F60D833
{
  _PCI_HEADER_TYPE_0 type0;
  _PCI_HEADER_TYPE_1 type1;
  _PCI_HEADER_TYPE_2 type2;
};

/* 1471 */
struct _PCI_COMMON_CONFIG
{
  unsigned __int16 VendorID;
  unsigned __int16 DeviceID;
  unsigned __int16 Command;
  unsigned __int16 Status;
  unsigned __int8 RevisionID;
  unsigned __int8 ProgIf;
  unsigned __int8 SubClass;
  unsigned __int8 BaseClass;
  unsigned __int8 CacheLineSize;
  unsigned __int8 LatencyTimer;
  unsigned __int8 HeaderType;
  unsigned __int8 BIST;
  $4BF11EC6D537B0E54D2801C19F60D833 u;
  unsigned __int8 DeviceSpecific[192];
};

/* 1472 */
struct _SENSE_DATA
{
  unsigned __int8 ErrorCode : 7;
  unsigned __int8 Valid : 1;
  unsigned __int8 SegmentNumber;
  unsigned __int8 SenseKey : 4;
  unsigned __int8 Reserved : 1;
  unsigned __int8 IncorrectLength : 1;
  unsigned __int8 EndOfMedia : 1;
  unsigned __int8 FileMark : 1;
  unsigned __int8 Information[4];
  unsigned __int8 AdditionalSenseLength;
  unsigned __int8 CommandSpecificInformation[4];
  unsigned __int8 AdditionalSenseCode;
  unsigned __int8 AdditionalSenseCodeQualifier;
  unsigned __int8 FieldReplaceableUnitCode;
  unsigned __int8 SenseKeySpecific[3];
};

/* 1473 */
struct __declspec(align(8)) DVD_READ_STRUCTURE
{
  _LARGE_INTEGER BlockByteOffset;
  DVD_STRUCTURE_FORMAT Format;
  unsigned int SessionId;
  unsigned __int8 LayerNumber;
};

/* 1474 */
struct __declspec(align(4)) _SCSI_INQUIRY_DATA
{
  unsigned __int8 PathId;
  unsigned __int8 TargetId;
  unsigned __int8 Lun;
  unsigned __int8 DeviceClaimed;
  unsigned int InquiryDataLength;
  unsigned int NextInquiryDataOffset;
  unsigned __int8 InquiryData[1];
};

/* 1475 */
struct _EEPROM_LAYOUT
{
  unsigned __int8 EncryptedSection[48];
  unsigned __int8 FactorySection[48];
  unsigned __int8 UserConfigSection[96];
  unsigned __int8 HardwareConfigSection[54];
  unsigned __int8 ThermalSensorCalibration[2];
  unsigned __int8 Unused[2];
  unsigned __int8 UEMInfo[4];
  unsigned __int8 Reserved1[2];
};

/* 1476 */
struct _DVD_DESCRIPTOR_HEADER
{
  unsigned __int16 Length;
  unsigned __int8 Reserved[2];
  unsigned __int8 Data[];
};

/* 1477 */
struct $0179FC81F74A7788CAD8350C45033D55
{
  unsigned __int32 AsUShort : 16;
  unsigned __int32 Reserved : 15;
  unsigned __int32 EndOfTable : 1;
};

/* 1478 */
union $CACDC4AF6B7A5AF960CD3E461FFB7B35
{
  unsigned int AsULong;
  $0179FC81F74A7788CAD8350C45033D55 b;
};

/* 1479 */
struct _IDE_PCI_PHYSICAL_REGION_DESCRIPTOR
{
  unsigned int PhysicalAddress;
  $CACDC4AF6B7A5AF960CD3E461FFB7B35 ByteCount;
};

/* 1480 */
struct $FA25F8DB0A268C8418ED42B24BCD85EA
{
  unsigned __int32 Reserved1 : 2;
  unsigned __int32 RegisterNumber : 6;
  unsigned __int32 FunctionNumber : 3;
  unsigned __int32 DeviceNumber : 5;
  unsigned __int32 BusNumber : 8;
  unsigned __int32 Reserved2 : 8;
};

/* 1481 */
union $783E7787FC2D2001D7FD861EE2C2116C
{
  $FA25F8DB0A268C8418ED42B24BCD85EA bits;
  unsigned int AsULONG;
};

/* 1482 */
struct _PCI_TYPE1_CFG_CYCLE_BITS
{
  $783E7787FC2D2001D7FD861EE2C2116C u;
};

/* 1483 */
struct _PM_SUPPORT
{
  unsigned __int8 Rsvd2 : 1;
  unsigned __int8 D1 : 1;
  unsigned __int8 D2 : 1;
  unsigned __int8 PMED0 : 1;
  unsigned __int8 PMED1 : 1;
  unsigned __int8 PMED2 : 1;
  unsigned __int8 PMED3Hot : 1;
  unsigned __int8 PMED3Cold : 1;
};

/* 1484 */
struct _PCI_PMC
{
  unsigned __int8 Version : 3;
  unsigned __int8 PMEClock : 1;
  unsigned __int8 Rsvd1 : 1;
  unsigned __int8 DeviceSpecificInitialization : 1;
  unsigned __int8 Rsvd2 : 2;
  _PM_SUPPORT Support;
};

/* 1485 */
struct _INQUIRYDATA
{
  unsigned __int8 DeviceType : 5;
  unsigned __int8 DeviceTypeQualifier : 3;
  unsigned __int8 DeviceTypeModifier : 7;
  unsigned __int8 RemovableMedia : 1;
  unsigned __int8 Versions;
  unsigned __int8 ResponseDataFormat : 4;
  unsigned __int8 HiSupport : 1;
  unsigned __int8 NormACA : 1;
  unsigned __int8 ReservedBit : 1;
  unsigned __int8 AERC : 1;
  unsigned __int8 AdditionalLength;
  unsigned __int8 Reserved[2];
  unsigned __int8 SoftReset : 1;
  unsigned __int8 CommandQueue : 1;
  unsigned __int8 Reserved2 : 1;
  unsigned __int8 LinkedCommands : 1;
  unsigned __int8 Synchronous : 1;
  unsigned __int8 Wide16Bit : 1;
  unsigned __int8 Wide32Bit : 1;
  unsigned __int8 RelativeAddressing : 1;
  unsigned __int8 VendorId[8];
  unsigned __int8 ProductId[16];
  unsigned __int8 ProductRevisionLevel[4];
  unsigned __int8 VendorSpecific[20];
  unsigned __int8 Reserved3[40];
};

/* 1486 */
struct _SCSI_BUS_DATA
{
  unsigned __int8 NumberOfLogicalUnits;
  unsigned __int8 InitiatorBusId;
  unsigned int InquiryDataOffset;
};

/* 1487 */
struct _SCSI_ADAPTER_BUS_INFO
{
  unsigned __int8 NumberOfBuses;
  _SCSI_BUS_DATA BusData[1];
};

/* 1488 */
struct _DVD_ASF
{
  unsigned __int8 Reserved0[3];
  unsigned __int8 SuccessFlag : 1;
  unsigned __int8 Reserved1 : 7;
};

/* 1489 */
struct _NOTIFICATION_POWER_STATUS
{
  unsigned __int8 PowerEvent : 4;
  unsigned __int8 Reserved : 4;
  unsigned __int8 PowerStatus;
  unsigned __int8 Reserved2[2];
};

/* 1490 */
struct _READ_BLOCK_LIMITS
{
  unsigned __int8 Reserved;
  unsigned __int8 BlockMaximumSize[3];
  unsigned __int8 BlockMinimumSize[2];
};

/* 1491 */
struct _SRB_IO_CONTROL
{
  unsigned int HeaderLength;
  unsigned __int8 Signature[8];
  unsigned int Timeout;
  unsigned int ControlCode;
  unsigned int ReturnCode;
  unsigned int Length;
};

/* 1492 */
struct _MODE_PARAMETER_HEADER10
{
  unsigned __int8 ModeDataLength[2];
  unsigned __int8 MediumType;
  unsigned __int8 DeviceSpecificParameter;
  unsigned __int8 Reserved[2];
  unsigned __int8 BlockDescriptorLength[2];
};

/* 1493 */
struct _TAPE_POSITION_DATA
{
  unsigned __int8 Reserved1 : 2;
  unsigned __int8 BlockPositionUnsupported : 1;
  unsigned __int8 Reserved2 : 3;
  unsigned __int8 EndOfPartition : 1;
  unsigned __int8 BeginningOfPartition : 1;
  unsigned __int8 PartitionNumber;
  unsigned __int16 Reserved3;
  unsigned __int8 FirstBlock[4];
  unsigned __int8 LastBlock[4];
  unsigned __int8 Reserved4;
  unsigned __int8 NumberOfBlocks[3];
  unsigned __int8 NumberOfBytes[4];
};

/* 1494 */
struct $3439347FE211DFAF4614EA3E48F825CA
{
  unsigned __int8 Byte0;
  unsigned __int8 Byte1;
};

/* 1495 */
union _TWO_BYTE
{
  $3439347FE211DFAF4614EA3E48F825CA __s0;
  unsigned __int16 AsUShort;
};

/* 1496 */
struct _CDDA_OUTPUT_PORT
{
  unsigned __int8 ChannelSelection : 4;
  unsigned __int8 Reserved : 4;
  unsigned __int8 Volume;
};

/* 1497 */
struct _CDAUDIO_CONTROL_PAGE
{
  unsigned __int8 PageCode : 6;
  unsigned __int8 Reserved : 1;
  unsigned __int8 PSBit : 1;
  unsigned __int8 PageLength;
  unsigned __int8 Reserved2 : 1;
  unsigned __int8 StopOnTrackCrossing : 1;
  unsigned __int8 Immediate : 1;
  unsigned __int8 Reserved3 : 5;
  unsigned __int8 Reserved4[3];
  unsigned __int8 Obsolete[2];
  _CDDA_OUTPUT_PORT CDDAOutputPorts[4];
};

/* 1498 */
struct _DVD_BCA_DESCRIPTOR
{
  unsigned __int8 BCAInformation[];
  _BYTE gap0[4];
};

/* 1499 */
struct _XBOX_USER_SETTINGS
{
  unsigned int Checksum;
  int TimeZoneBias;
  char TimeZoneStdName[4];
  char TimeZoneDltName[4];
  unsigned int Reserved1[2];
  _XBOX_TIMEZONE_DATE TimeZoneStdDate;
  _XBOX_TIMEZONE_DATE TimeZoneDltDate;
  unsigned int Reserved2[2];
  int TimeZoneStdBias;
  int TimeZoneDltBias;
  unsigned int Language;
  unsigned int VideoFlags;
  unsigned int AudioFlags;
  unsigned int ParentalControlGames;
  unsigned int ParentalControlPassword;
  unsigned int ParentalControlMovies;
  unsigned int OnlineIpAddress;
  unsigned int OnlineDnsAddress;
  unsigned int OnlineDefaultGatewayAddress;
  unsigned int OnlineSubnetMask;
  unsigned int MiscFlags;
  unsigned int DvdRegion;
};

/* 1500 */
struct _CDVD_KEY_DATA
{
  unsigned __int8 Key[5];
  unsigned __int8 Reserved[3];
};

/* 1501 */
struct _MODE_INFO_EXCEPTIONS
{
  unsigned __int8 PageCode : 6;
  unsigned __int8 Reserved1 : 1;
  unsigned __int8 PSBit : 1;
  unsigned __int8 PageLength;
  unsigned __int8 LogErr : 1;
  unsigned __int8 Reserved2 : 1;
  unsigned __int8 Test : 1;
  unsigned __int8 Dexcpt : 1;
  unsigned __int8 Reserved3 : 3;
  unsigned __int8 Perf : 1;
  unsigned __int8 ReportMethod : 4;
  unsigned __int8 Reserved4 : 4;
  unsigned __int8 IntervalTimer[4];
  unsigned __int8 ReportCount[4];
};

/* 1502 */
struct _DVDX2_ADVANCED_DRIVE_CONTROL
{
  _MODE_PARAMETER_HEADER10 Header;
  _DVDX2_ADVANCED_DRIVE_CONTROL_PAGE AdvancedDriveControlPage;
};

/* 1503 */
struct _MODE_FLEXIBLE_DISK_PAGE
{
  unsigned __int8 PageCode : 6;
  unsigned __int8 Reserved : 1;
  unsigned __int8 PageSavable : 1;
  unsigned __int8 PageLength;
  unsigned __int8 TransferRate[2];
  unsigned __int8 NumberOfHeads;
  unsigned __int8 SectorsPerTrack;
  unsigned __int8 BytesPerSector[2];
  unsigned __int8 NumberOfCylinders[2];
  unsigned __int8 StartWritePrecom[2];
  unsigned __int8 StartReducedCurrent[2];
  unsigned __int8 StepRate[2];
  unsigned __int8 StepPluseWidth;
  unsigned __int8 HeadSettleDelay[2];
  unsigned __int8 MotorOnDelay;
  unsigned __int8 MotorOffDelay;
  unsigned __int8 Reserved2 : 5;
  unsigned __int8 MotorOnAsserted : 1;
  unsigned __int8 StartSectorNumber : 1;
  unsigned __int8 TrueReadySignal : 1;
  unsigned __int8 StepPlusePerCyclynder : 4;
  unsigned __int8 Reserved3 : 4;
  unsigned __int8 WriteCompenstation;
  unsigned __int8 HeadLoadDelay;
  unsigned __int8 HeadUnloadDelay;
  unsigned __int8 Pin2Usage : 4;
  unsigned __int8 Pin34Usage : 4;
  unsigned __int8 Pin1Usage : 4;
  unsigned __int8 Pin4Usage : 4;
  unsigned __int8 MediumRotationRate[2];
  unsigned __int8 Reserved4[2];
};

/* 1504 */
struct $C140715716E89DE33BB27CCA3BD9DB4D
{
  unsigned __int8 Reserved;
  unsigned __int8 M;
  unsigned __int8 S;
  unsigned __int8 F;
};

/* 1505 */
union $71A59A62A3B01D242CA3A02B1ABE9569
{
  unsigned __int8 LogicalBlockAddress[4];
  $C140715716E89DE33BB27CCA3BD9DB4D MSF;
};

/* 1506 */
struct _DATA_BLOCK_HEADER
{
  unsigned __int8 DataMode;
  unsigned __int8 Reserved[4];
  $71A59A62A3B01D242CA3A02B1ABE9569 ___u2;
};

/* 1507 */
struct _TRACK_INFORMATION
{
  unsigned __int8 Length[2];
  unsigned __int8 TrackNumber;
  unsigned __int8 SessionNumber;
  unsigned __int8 Reserved1;
  unsigned __int8 TrackMode : 4;
  unsigned __int8 Copy : 1;
  unsigned __int8 Damage : 1;
  unsigned __int8 Reserved2 : 2;
  unsigned __int8 DataMode : 4;
  unsigned __int8 FP : 1;
  unsigned __int8 Packet : 1;
  unsigned __int8 Blank : 1;
  unsigned __int8 RT : 1;
  unsigned __int8 NWA_V : 1;
  unsigned __int8 Reserved3 : 7;
  unsigned __int8 TrackStartAddress[4];
  unsigned __int8 NextWritableAddress[4];
  unsigned __int8 FreeBlocks[4];
  unsigned __int8 FixedPacketSize[4];
};

/* 1508 */
struct $02632B2FE5BE2BD74616240BD8933D28
{
  unsigned __int8 Modifier[4];
};

/* 1509 */
struct $7EFF60B7BAE32CB0EC5DD758F6EC3FAB
{
  unsigned __int8 TransferPeriod;
  unsigned __int8 ReqAckOffset;
};

/* 1510 */
struct $C46AC6D95A1262B140DA540421713FA1
{
  unsigned __int8 Width;
};

/* 1511 */
union _EXTENDED_ARGUMENTS
{
  $02632B2FE5BE2BD74616240BD8933D28 Modify;
  $7EFF60B7BAE32CB0EC5DD758F6EC3FAB Synchronous;
  $C46AC6D95A1262B140DA540421713FA1 Wide;
};

/* 1512 */
struct _SCSI_EXTENDED_MESSAGE
{
  unsigned __int8 InitialMessageCode;
  unsigned __int8 MessageLength;
  unsigned __int8 MessageType;
  _EXTENDED_ARGUMENTS ExtendedArguments;
};

/* 1513 */
struct $A9FC48894F8D14019CAF4D8F08A526D6
{
  unsigned __int32 DeviceNumber : 5;
  unsigned __int32 FunctionNumber : 3;
  unsigned __int32 Reserved : 24;
};

/* 1514 */
union $38E14AADCA092471E0BAFE890B2FEF36
{
  $A9FC48894F8D14019CAF4D8F08A526D6 bits;
  unsigned int AsULONG;
};

/* 1515 */
struct _PCI_SLOT_NUMBER
{
  $38E14AADCA092471E0BAFE890B2FEF36 u;
};

/* 1516 */
struct _DVD_COPYRIGHT_DESCRIPTOR
{
  unsigned __int8 CopyrightProtectionType;
  unsigned __int8 RegionManagementInformation;
  unsigned __int16 Reserved;
};

/* 1517 */
union $CE471799A7BE56898D0E5B0DACE6F57F
{
  _PCI_PMC Capabilities;
  unsigned __int16 AsUSHORT;
};

/* 1518 */
union $D96D35AD4A07B2422DA34E93ACC0042A
{
  _PCI_PMCSR ControlStatus;
  unsigned __int16 AsUSHORT;
};

/* 1519 */
struct _PCI_PMCSR_BSE
{
  unsigned __int8 Rsvd1 : 6;
  unsigned __int8 D3HotSupportsStopClock : 1;
  unsigned __int8 BusPowerClockControlEnabled : 1;
};

/* 1520 */
union $96BCD0E6C152362B0895D803A615F64B
{
  _PCI_PMCSR_BSE BridgeSupport;
  unsigned __int8 AsUCHAR;
};

/* 1521 */
struct _PCI_PM_CAPABILITY
{
  _PCI_CAPABILITIES_HEADER Header;
  $CE471799A7BE56898D0E5B0DACE6F57F PMC;
  $D96D35AD4A07B2422DA34E93ACC0042A PMCSR;
  $96BCD0E6C152362B0895D803A615F64B PMCSR_BSE;
  unsigned __int8 Data;
};

/* 1522 */
struct _CDVD_CHALLENGE_KEY_DATA
{
  unsigned __int8 ChallengeKeyValue[10];
  unsigned __int8 Reserved[2];
};

/* 1523 */
struct _CDVD_REPORT_ASF_DATA
{
  unsigned __int8 Reserved1[3];
  unsigned __int8 Success : 1;
  unsigned __int8 Reserved2 : 7;
};

/* 1524 */
struct _CDVD_INACTIVITY_TIMEOUT_PAGE
{
  unsigned __int8 PageCode : 6;
  unsigned __int8 Reserved : 1;
  unsigned __int8 PSBit : 1;
  unsigned __int8 PageLength;
  unsigned __int8 Reserved2[2];
  unsigned __int8 SWPP : 1;
  unsigned __int8 DISP : 1;
  unsigned __int8 Reserved3 : 6;
  unsigned __int8 Reserved4;
  unsigned __int8 GroupOneMinimumTimeout[2];
  unsigned __int8 GroupTwoMinimumTimeout[2];
};

/* 1525 */
struct _MODE_PARAMETER_BLOCK
{
  unsigned __int8 DensityCode;
  unsigned __int8 NumberOfBlocks[3];
  unsigned __int8 Reserved;
  unsigned __int8 BlockLength[3];
};

/* 1526 */
struct _DVD_SET_RPC_KEY
{
  unsigned __int8 PreferredDriveRegionCode;
  unsigned __int8 Reserved[3];
};

/* 1527 */
struct _AUDIO_OUTPUT
{
  unsigned __int8 CodePage;
  unsigned __int8 ParameterLength;
  unsigned __int8 Immediate;
  unsigned __int8 Reserved[2];
  unsigned __int8 LbaFormat;
  unsigned __int8 LogicalBlocksPerSecond[2];
  _PORT_OUTPUT PortOutput[4];
};

/* 1528 */
struct _XBOX_HW_EE_SETTINGS
{
  unsigned __int8 FbioDelay;
  unsigned __int8 AddrDrv;
  unsigned __int8 CTrim2;
  unsigned __int8 EMRS;
  unsigned __int8 ExtSlow[10];
  unsigned __int8 Slow[10];
  unsigned __int8 Typical[10];
  unsigned __int8 Fast[10];
  unsigned __int8 ExtFast[10];
};

/* 1529 */
struct CRYPTO_VECTOR
{
  void (__stdcall *pXcSHAInit)(unsigned __int8 *);
  void (__stdcall *pXcSHAUpdate)(unsigned __int8 *, unsigned __int8 *, unsigned int);
  void (__stdcall *pXcSHAFinal)(unsigned __int8 *, unsigned __int8 *);
  void (__stdcall *pXcRC4Key)(unsigned __int8 *, unsigned int, unsigned __int8 *);
  void (__stdcall *pXcRC4Crypt)(unsigned __int8 *, unsigned int, unsigned __int8 *);
  void (__stdcall *pXcHMAC)(unsigned __int8 *, unsigned int, unsigned __int8 *, unsigned int, unsigned __int8 *, unsigned int, unsigned __int8 *);
  unsigned int (__stdcall *pXcPKEncPublic)(unsigned __int8 *, unsigned __int8 *, unsigned __int8 *);
  unsigned int (__stdcall *pXcPKDecPrivate)(unsigned __int8 *, unsigned __int8 *, unsigned __int8 *);
  unsigned int (__stdcall *pXcPKGetKeyLen)(unsigned __int8 *);
  unsigned __int8 (__stdcall *pXcVerifyPKCS1Signature)(unsigned __int8 *, unsigned __int8 *, unsigned __int8 *);
  unsigned int (__stdcall *pXcModExp)(unsigned int *, unsigned int *, unsigned int *, unsigned int *, unsigned int);
  void (__stdcall *pXcDESKeyParity)(unsigned __int8 *, unsigned int);
  void (__stdcall *pXcKeyTable)(unsigned int, unsigned __int8 *, unsigned __int8 *);
  void (__stdcall *pXcBlockCrypt)(unsigned int, unsigned __int8 *, unsigned __int8 *, unsigned __int8 *, unsigned int);
  void (__stdcall *pXcBlockCryptCBC)(unsigned int, unsigned int, unsigned __int8 *, unsigned __int8 *, unsigned __int8 *, unsigned int, unsigned __int8 *);
  unsigned int (__stdcall *pXcCryptService)(unsigned int, void *);
};

/* 1530 */
struct _STORAGE_SET_READ_AHEAD
{
  _LARGE_INTEGER TriggerAddress;
  _LARGE_INTEGER TargetAddress;
};

/* 1531 */
struct _CDVD_REPORT_AGID_DATA
{
  unsigned __int8 Reserved1[3];
  unsigned __int8 Reserved2 : 6;
  unsigned __int8 AGID : 2;
};

/* 1532 */
struct _MODE_DISCONNECT_PAGE
{
  unsigned __int8 PageCode : 6;
  unsigned __int8 Reserved : 1;
  unsigned __int8 PageSavable : 1;
  unsigned __int8 PageLength;
  unsigned __int8 BufferFullRatio;
  unsigned __int8 BufferEmptyRatio;
  unsigned __int8 BusInactivityLimit[2];
  unsigned __int8 BusDisconnectTime[2];
  unsigned __int8 BusConnectTime[2];
  unsigned __int8 MaximumBurstSize[2];
  unsigned __int8 DataTransferDisconnect : 2;
  unsigned __int8 Reserved2[3];
};

/* 1533 */
struct _READ_DVD_STRUCTURES_HEADER
{
  unsigned __int8 Length[2];
  unsigned __int8 Reserved[2];
  unsigned __int8 Data[];
};

/* 1534 */
struct _MECHANICAL_STATUS
{
  _MECHANICAL_STATUS_INFORMATION_HEADER MechanicalStatusHeader;
  _SLOT_TABLE_INFORMATION SlotTableInfo[1];
};

/* 1535 */
struct _XBOX_ENCRYPTED_SETTINGS
{
  unsigned __int8 Checksum[20];
  unsigned __int8 Confounder[8];
  unsigned __int8 HDKey[16];
  unsigned int GameRegion;
};

/* 1536 */
struct $7D99CA776E012D8A997A5856FC928D9A
{
  unsigned __int32 Reserved1 : 2;
  unsigned __int32 RegisterNumber : 6;
  unsigned __int32 FunctionNumber : 3;
  unsigned __int32 DeviceNumber : 5;
  unsigned __int32 BusNumber : 8;
  unsigned __int32 Reserved2 : 7;
  unsigned __int32 Enable : 1;
};

/* 1537 */
union $652E4A25CFDE81511F93A74B26C15FD0
{
  $7D99CA776E012D8A997A5856FC928D9A bits;
  unsigned int AsULONG;
};

/* 1538 */
struct _PCI_TYPE1_CFG_BITS
{
  $652E4A25CFDE81511F93A74B26C15FD0 u;
};

/* 1539 */
union $65AB3788D342EBE0155B6088DAF9DA9B
{
  void *FileHandle;
  _LARGE_INTEGER TitleOffset;
};

/* 1540 */
struct _DVD_COPY_PROTECT_KEY
{
  unsigned int KeyLength;
  unsigned int SessionId;
  DVD_KEY_TYPE KeyType;
  unsigned int KeyFlags;
  $65AB3788D342EBE0155B6088DAF9DA9B Parameters;
  unsigned __int8 KeyData[];
};

/* 1541 */
struct $7721B01A6249AF2A182ACEF66275ECA6
{
  unsigned __int16 RegisterNumber : 8;
  unsigned __int16 Agent : 4;
  unsigned __int16 AddressBase : 4;
};

/* 1542 */
union $2E1463A4534E11D5E3C4F55CA42A6313
{
  $7721B01A6249AF2A182ACEF66275ECA6 bits;
  unsigned __int16 AsUSHORT;
};

/* 1543 */
struct _PCI_TYPE2_ADDRESS_BITS
{
  $2E1463A4534E11D5E3C4F55CA42A6313 u;
};

/* 1544 */
struct _CDVD_TITLE_KEY_HEADER
{
  unsigned __int8 DataLength[2];
  unsigned __int8 Reserved1[1];
  unsigned __int8 Reserved2 : 3;
  unsigned __int8 CGMS : 2;
  unsigned __int8 CP_SEC : 1;
  unsigned __int8 CPM : 1;
  unsigned __int8 Zero : 1;
  _CDVD_KEY_DATA TitleKey;
};

/* 1545 */
struct $DF827A25B1F8DF7CE9E7E2D23F6FBDB8
{
  unsigned __int8 Enable : 1;
  unsigned __int8 FunctionNumber : 3;
  unsigned __int8 Key : 4;
};

/* 1546 */
union $FB0DDB8F48BF20BC91936312F06478FA
{
  $DF827A25B1F8DF7CE9E7E2D23F6FBDB8 bits;
  unsigned __int8 AsUCHAR;
};

/* 1547 */
struct _PCI_TYPE2_CSE_BITS
{
  $FB0DDB8F48BF20BC91936312F06478FA u;
};

/* 1548 */
struct _PCI_AGP_STATUS
{
  unsigned __int32 Rate : 3;
  unsigned __int32 Rsvd1 : 1;
  unsigned __int32 FastWrite : 1;
  unsigned __int32 FourGB : 1;
  unsigned __int32 Rsvd2 : 3;
  unsigned __int32 SideBandAddressing : 1;
  unsigned __int32 Rsvd3 : 14;
  unsigned __int32 RequestQueueDepthMaximum : 8;
};

/* 1549 */
struct _PCI_AGP_COMMAND
{
  unsigned __int32 Rate : 3;
  unsigned __int32 Rsvd1 : 1;
  unsigned __int32 FastWriteEnable : 1;
  unsigned __int32 FourGBEnable : 1;
  unsigned __int32 Rsvd2 : 2;
  unsigned __int32 AGPEnable : 1;
  unsigned __int32 SBAEnable : 1;
  unsigned __int32 Rsvd3 : 14;
  unsigned __int32 RequestQueueDepth : 8;
};

/* 1550 */
struct _PCI_AGP_CAPABILITY
{
  _PCI_CAPABILITIES_HEADER Header;
  unsigned __int16 Minor : 4;
  unsigned __int16 Major : 4;
  unsigned __int16 Rsvd1 : 8;
  _PCI_AGP_STATUS AGPStatus;
  _PCI_AGP_COMMAND AGPCommand;
};

/* 1551 */
struct $468AB5A9229C41251707856751E60438
{
  unsigned __int8 Byte0;
  unsigned __int8 Byte1;
  unsigned __int8 Byte2;
  unsigned __int8 Byte3;
};

/* 1552 */
union _FOUR_BYTE
{
  $468AB5A9229C41251707856751E60438 __s0;
  unsigned int AsULong;
};

/* 1553 */
struct _XBOX_FACTORY_SETTINGS
{
  unsigned int Checksum;
  unsigned __int8 SerialNumber[12];
  unsigned __int8 EthernetAddr[6];
  unsigned __int8 Reserved1[2];
  unsigned __int8 OnlineKey[16];
  unsigned int AVRegion;
  unsigned int Reserved2;
};

/* 1554 */
struct _CDVD_KEY_HEADER
{
  unsigned __int8 DataLength[2];
  unsigned __int8 Reserved[2];
  unsigned __int8 Data[];
};

/* 1555 */
struct A_SHA_CTX
{
  unsigned int FinishFlag;
  unsigned __int8 HashVal[20];
  unsigned int state[5];
  unsigned int count[2];
  unsigned __int8 buffer[64];
};

/* 1556 */
struct _FORMATTED_CAPACITY_LIST
{
  unsigned __int8 Reserved[3];
  unsigned __int8 CapacityListLength;
  _FORMATTED_CAPACITY_DESCRIPTOR Descriptors[];
};

/* 1557 */
struct __unaligned __declspec(align(4)) _IDE_CHANNEL_OBJECT
{
  void (__stdcall *InterruptRoutine)();
  void (__stdcall *FinishIoRoutine)();
  unsigned __int8 (__stdcall *PollResetCompleteRoutine)();
  void (__stdcall *TimeoutExpiredRoutine)();
  void (__stdcall *StartPacketRoutine)(_DEVICE_OBJECT *, _IRP *);
  void (__stdcall *StartNextPacketRoutine)();
  unsigned __int8 InterruptIrql;
  unsigned __int8 ExpectingBusMasterInterrupt;
  unsigned __int8 StartPacketBusy;
  unsigned __int8 StartPacketRequested;
  unsigned __int8 Timeout;
  unsigned __int8 IoRetries;
  unsigned __int8 MaximumIoRetries;
  __declspec(align(2)) _IRP *CurrentIrp;
  _KDEVICE_QUEUE DeviceQueue;
  unsigned int PhysicalRegionDescriptorTablePhysical;
  _KDPC TimerDpc;
  _KDPC FinishDpc;
  _KTIMER Timer;
  _KINTERRUPT InterruptObject;
};

/* 1558 */
struct _DVDX2_AUTHENTICATION_PAGE
{
  unsigned __int8 PageCode : 6;
  unsigned __int8 Reserved : 1;
  unsigned __int8 PSBit : 1;
  unsigned __int8 PageLength;
  unsigned __int8 PartitionArea;
  unsigned __int8 CDFValid;
  unsigned __int8 Authentication;
  unsigned __int8 DiscCategoryAndVersion;
  unsigned __int8 DrivePhaseLevel;
  unsigned __int8 ChallengeID;
  unsigned int ChallengeValue;
  unsigned int ResponseValue;
  unsigned int Reserved2;
};

/* 1559 */
struct _DVDX2_AUTHENTICATION
{
  _MODE_PARAMETER_HEADER10 Header;
  _DVDX2_AUTHENTICATION_PAGE AuthenticationPage;
};

/* 1560 */
struct _READ_CAPACITY_DATA
{
  unsigned int LogicalBlockAddress;
  unsigned int BytesPerBlock;
};

/* 1561 */
struct _CDVD_CAPABILITIES_PAGE
{
  unsigned __int8 PageCode : 6;
  unsigned __int8 Reserved : 1;
  unsigned __int8 PSBit : 1;
  unsigned __int8 PageLength;
  unsigned __int8 CDRRead : 1;
  unsigned __int8 CDERead : 1;
  unsigned __int8 Method2 : 1;
  unsigned __int8 DVDROMRead : 1;
  unsigned __int8 DVDRRead : 1;
  unsigned __int8 DVDRAMRead : 1;
  unsigned __int8 Reserved2 : 2;
  unsigned __int8 CDRWrite : 1;
  unsigned __int8 CDEWrite : 1;
  unsigned __int8 TestWrite : 1;
  unsigned __int8 Reserved3 : 1;
  unsigned __int8 DVDRWrite : 1;
  unsigned __int8 DVDRAMWrite : 1;
  unsigned __int8 Reserved4 : 2;
  unsigned __int8 AudioPlay : 1;
  unsigned __int8 Composite : 1;
  unsigned __int8 DigitalPortOne : 1;
  unsigned __int8 DigitalPortTwo : 1;
  unsigned __int8 Mode2Form1 : 1;
  unsigned __int8 Mode2Form2 : 1;
  unsigned __int8 MultiSession : 1;
  unsigned __int8 Reserved5 : 1;
  unsigned __int8 CDDA : 1;
  unsigned __int8 CDDAAccurate : 1;
  unsigned __int8 RWSupported : 1;
  unsigned __int8 RWDeinterleaved : 1;
  unsigned __int8 C2Pointers : 1;
  unsigned __int8 ISRC : 1;
  unsigned __int8 UPC : 1;
  unsigned __int8 ReadBarCodeCapable : 1;
  unsigned __int8 Lock : 1;
  unsigned __int8 LockState : 1;
  unsigned __int8 PreventJumper : 1;
  unsigned __int8 Eject : 1;
  unsigned __int8 Reserved6 : 1;
  unsigned __int8 LoadingMechanismType : 3;
  unsigned __int8 SeparateVolume : 1;
  unsigned __int8 SeperateChannelMute : 1;
  unsigned __int8 SupportsDiskPresent : 1;
  unsigned __int8 SWSlotSelection : 1;
  unsigned __int8 SideChangeCapable : 1;
  unsigned __int8 RWInLeadInReadable : 1;
  unsigned __int8 Reserved7 : 2;
  unsigned __int8 ObsoleteReserved[2];
  unsigned __int8 NumberVolumeLevels[2];
  unsigned __int8 BufferSize[2];
  unsigned __int8 ObsoleteReserved2[2];
  unsigned __int8 ObsoleteReserved3;
  unsigned __int8 Reserved8 : 1;
  unsigned __int8 BCK : 1;
  unsigned __int8 RCK : 1;
  unsigned __int8 LSBF : 1;
  unsigned __int8 Length : 2;
  unsigned __int8 Reserved9 : 2;
  unsigned __int8 ObsoleteReserved4[2];
  unsigned __int8 CopyManagementRevision[2];
  unsigned __int8 Reserved10[2];
};

/* 1562 */
struct _MODE_PARM_READ_WRITE
{
  _MODE_PARAMETER_HEADER ParameterListHeader;
  _MODE_PARAMETER_BLOCK ParameterListBlock;
};

/* 1563 */
struct RC4_KEYSTRUCT
{
  unsigned __int8 S[256];
  unsigned __int8 i;
  unsigned __int8 j;
};

/* 1564 */
struct _POWER_CONDITION_PAGE
{
  unsigned __int8 PageCode : 6;
  unsigned __int8 Reserved : 1;
  unsigned __int8 PSBit : 1;
  unsigned __int8 PageLength;
  unsigned __int8 Reserved2;
  unsigned __int8 Standby : 1;
  unsigned __int8 Idle : 1;
  unsigned __int8 Reserved3 : 6;
  unsigned __int8 IdleTimer[4];
  unsigned __int8 StandbyTimer[4];
};

/* 1565 */
struct _SCSI_PASS_THROUGH
{
  unsigned __int16 Length;
  unsigned __int8 ScsiStatus;
  unsigned __int8 PathId;
  unsigned __int8 TargetId;
  unsigned __int8 Lun;
  unsigned __int8 CdbLength;
  unsigned __int8 SenseInfoLength;
  unsigned __int8 DataIn;
  unsigned int DataTransferLength;
  unsigned int TimeOutValue;
  unsigned int DataBufferOffset;
  unsigned int SenseInfoOffset;
  unsigned __int8 Cdb[16];
};

/* 1566 */
struct _SCSI_PASS_THROUGH_DIRECT
{
  unsigned __int16 Length;
  unsigned __int8 ScsiStatus;
  unsigned __int8 PathId;
  unsigned __int8 TargetId;
  unsigned __int8 Lun;
  unsigned __int8 CdbLength;
  unsigned __int8 SenseInfoLength;
  unsigned __int8 DataIn;
  unsigned int DataTransferLength;
  unsigned int TimeOutValue;
  void *DataBuffer;
  unsigned int SenseInfoOffset;
  unsigned __int8 Cdb[16];
};

/* 1567 */
struct _KAPC_RECORD
{
  void (__stdcall *NormalRoutine)(void *, void *, void *);
  void *NormalContext;
  void *SystemArgument1;
  void *SystemArgument2;
};

/* 1568 */
struct _MMPFNFREE
{
  unsigned __int16 PackedPfnFlink;
  unsigned __int16 PackedPfnBlink;
};

/* 1569 */
struct _MMPFNREGION
{
  _MMPFNFREE FreePagesByColor[32];
  unsigned int AvailablePages;
};

/* 1570 */
struct $448F71B57416BB67AD2217462DF4FBA7
{
  unsigned __int32 Valid : 1;
  unsigned __int32 OneEntry : 1;
  unsigned __int32 NextEntry : 30;
};

/* 1571 */
union $2AFF75445AB77D6FDAEEB229575F7086
{
  unsigned int Long;
  _HARDWARE_PTE Hard;
  $448F71B57416BB67AD2217462DF4FBA7 List;
};

/* 1572 */
struct _MMPTE
{
  $2AFF75445AB77D6FDAEEB229575F7086 ___u0;
};

/* 1573 */
struct _MMPTERANGE
{
  _MMPTE HeadPte;
  _MMPTE *FirstCommittedPte;
  _MMPTE *LastCommittedPte;
  _MMPTE *LastReservedPte;
  unsigned int *AvailablePages;
  unsigned int (__fastcall *RemovePageRoutine)(_MMPFN_BUSY_TYPE, _MMPTE *);
};

/* 1574 */
struct _MMADDRESS_NODE
{
  unsigned int StartingVpn;
  unsigned int EndingVpn;
  _MMADDRESS_NODE *Parent;
  _MMADDRESS_NODE *LeftChild;
  _MMADDRESS_NODE *RightChild;
};

/* 1575 */
struct _MMGLOBALDATA
{
  _MMPFNREGION *RetailPfnRegion;
  _MMPTERANGE *SystemPteRange;
  unsigned int *AvailablePages;
  unsigned int *AllocatedPagesByUsage;
  _RTL_CRITICAL_SECTION *AddressSpaceLock;
  _MMADDRESS_NODE **VadRoot;
  _MMADDRESS_NODE **VadHint;
  _MMADDRESS_NODE **VadFreeHint;
};

/* 1576 */
struct _POOL_BLOCK
{
  unsigned __int8 Fill[32];
};

/* 1577 */
struct _POOL_TRACKER_TABLE
{
  unsigned int Key;
  unsigned int NonPagedAllocs;
  unsigned int NonPagedFrees;
  unsigned int NonPagedBytes;
};

/* 1578 */
struct _LAUNCH_DATA_HEADER
{
  unsigned int dwLaunchDataType;
  unsigned int dwTitleId;
  char szLaunchPath[520];
  unsigned int dwFlags;
};

/* 1579 */
struct _LZXBOX_BLOCK
{
  unsigned __int16 CompressedSize;
  unsigned __int16 UncompressedSize;
};

/* 1580 */
struct _XDATA_SECTION_HEADER
{
  unsigned int SizeOfUninitializedData;
  unsigned int SizeOfInitializedData;
  unsigned int PointerToRawData;
  unsigned int VirtualAddress;
  unsigned int SizeOfAVTables;
};

/* 1581 */
struct _XBOOT_PARAM
{
  unsigned int UncompressedKernelDataSize;
  unsigned int InitTableSize;
  unsigned int Signature;
  unsigned int CompressedKernelSize;
  unsigned __int8 MainRomDigest[20];
};

/* 1582 */
struct _MMVAD
{
  unsigned int StartingVpn;
  unsigned int EndingVpn;
  _MMADDRESS_NODE *Parent;
  _MMADDRESS_NODE *LeftChild;
  _MMADDRESS_NODE *RightChild;
  unsigned int AllocationProtect;
};

/* 1583 */
struct _POOL_TRACKER_BIG_PAGES
{
  void *Va;
  unsigned int Key;
  unsigned int NumberOfPages;
};

/* 1584 */
struct $938B9E72348C4EBA888566ED04B10A4D
{
  unsigned __int8 PreviousSize;
  unsigned __int8 PoolIndex;
  unsigned __int8 PoolType;
  unsigned __int8 BlockSize;
};

/* 1585 */
union $EA34354AC3A5119EC52826101DB16EDC
{
  $938B9E72348C4EBA888566ED04B10A4D __s0;
  unsigned int Ulong1;
};

/* 1586 */
struct _POOL_HEADER
{
  $EA34354AC3A5119EC52826101DB16EDC ___u0;
  unsigned int PoolTag;
};

/* 1587 */
struct __declspec(align(8)) _POOL_LOOKASIDE_LIST
{
  _SLIST_HEADER ListHead;
  unsigned __int16 Depth;
  unsigned __int16 Padding;
  unsigned int TotalAllocates;
  unsigned int AllocateHits;
};

/* 1588 */
struct $CC80B2E649D7C627A2F5BD34AAB90131
{
  unsigned __int32 LockCount : 16;
  unsigned __int32 Busy : 1;
  unsigned __int32 Reserved : 1;
  unsigned __int32 PteIndex : 10;
  unsigned __int32 BusyType : 4;
};

/* 1589 */
struct $E6EDB3AA56F604F8E31DDC5FEDDE5865
{
  unsigned __int32 LockCount : 16;
  unsigned __int32 Busy : 1;
  unsigned __int32 ElementIndex : 11;
  unsigned __int32 BusyType : 4;
};

/* 1590 */
struct $85B3544D6FBF7C10358CBA8D6A5B2E54
{
  unsigned __int32 LockCount : 16;
  unsigned __int32 Busy : 1;
  unsigned __int32 NumberOfUsedPtes : 11;
  unsigned __int32 BusyType : 4;
};

/* 1591 */
union $14E3C8277F1FC52A630A03B43E24F1DD
{
  unsigned int Long;
  _MMPTE Pte;
  _MMPFNFREE Free;
  $CC80B2E649D7C627A2F5BD34AAB90131 Busy;
  $E6EDB3AA56F604F8E31DDC5FEDDE5865 FsCache;
  $85B3544D6FBF7C10358CBA8D6A5B2E54 Directory;
};

/* 1592 */
struct _MMPFN
{
  $14E3C8277F1FC52A630A03B43E24F1DD ___u0;
};

/* 1593 */
struct _LAUNCH_DATA_PAGE
{
  _LAUNCH_DATA_HEADER Header;
  unsigned __int8 Pad[492];
  unsigned __int8 LaunchData[3072];
};

/* 1594 */
struct _POOL_DESCRIPTOR
{
  unsigned int RunningAllocs;
  unsigned int RunningDeAllocs;
  unsigned int TotalPages;
  unsigned int TotalBigPages;
  _LIST_ENTRY ListHeads[128];
};

/* 1595 */
union $B888D73C355F38144AA7B636A80398B1
{
  unsigned __int64 SearchAddress;
  unsigned __int64 FoundAddress;
};

/* 1596 */
struct __declspec(align(8)) _DBGKD_SEARCH_MEMORY
{
  $B888D73C355F38144AA7B636A80398B1 ___u0;
  unsigned __int64 SearchLength;
  unsigned int PatternLength;
};

/* 1597 */
struct _DBGKM_CREATE_THREAD
{
  unsigned int SubSystemKey;
  void *StartAddress;
};

/* 1598 */
struct _DBGKM_CREATE_PROCESS
{
  unsigned int SubSystemKey;
  void *FileHandle;
  void *BaseOfImage;
  unsigned int DebugInfoFileOffset;
  unsigned int DebugInfoSize;
  _DBGKM_CREATE_THREAD InitialThread;
};

/* 1599 */
struct _X86_DESCRIPTOR
{
  unsigned __int16 Pad;
  unsigned __int16 Limit;
  unsigned int Base;
};

/* 1600 */
struct _SEARCHMEMORY
{
  unsigned __int64 SearchAddress;
  unsigned __int64 SearchLength;
  unsigned __int64 FoundAddress;
  unsigned int PatternLength;
  void *Pattern;
};

/* 1601 */
struct _DBGKD_GET_SET_BUS_DATA
{
  unsigned int BusDataType;
  unsigned int BusNumber;
  unsigned int SlotNumber;
  unsigned int Offset;
  unsigned int Length;
};

/* 1602 */
struct __declspec(align(8)) _DBGKD_WRITE_BREAKPOINT64
{
  unsigned __int64 BreakPointAddress;
  unsigned int BreakPointHandle;
};

/* 1603 */
struct _DBGKD_READ_WRITE_IO32
{
  unsigned int DataSize;
  unsigned int IoAddress;
  unsigned int DataValue;
};

/* 1604 */
struct _DBGKD_CONTINUE
{
  int ContinueStatus;
};

/* 1605 */
struct _X86_KSPECIAL_REGISTERS
{
  unsigned int Cr0;
  unsigned int Cr2;
  unsigned int Cr3;
  unsigned int Cr4;
  unsigned int KernelDr0;
  unsigned int KernelDr1;
  unsigned int KernelDr2;
  unsigned int KernelDr3;
  unsigned int KernelDr6;
  unsigned int KernelDr7;
  _X86_DESCRIPTOR Gdtr;
  _X86_DESCRIPTOR Idtr;
  unsigned __int16 Tr;
  unsigned __int16 Ldtr;
  unsigned int Reserved[6];
};

/* 1606 */
struct $B58882948A340985D121A7BC6A82DFAD
{
  unsigned __int8 SymbolNumber;
  char LevelChange;
  unsigned __int16 Instructions;
};

/* 1607 */
union _DBGKD_TRACE_DATA
{
  $B58882948A340985D121A7BC6A82DFAD s;
  unsigned int LongNumber;
};

/* 1608 */
struct _DISPATCHER_HEADER32
{
  unsigned __int8 Type;
  unsigned __int8 Absolute;
  unsigned __int8 Size;
  unsigned __int8 Inserted;
  int SignalState;
  LIST_ENTRY32 WaitListHead;
};

/* 1609 */
struct __declspec(align(2)) _KAPC_STATE32
{
  LIST_ENTRY32 ApcListHead[2];
  unsigned int Process;
  unsigned __int8 KernelApcInProgress;
  unsigned __int8 KernelApcPending;
  unsigned __int8 UserApcPending;
};

/* 1610 */
struct _X86_THREAD
{
  _DISPATCHER_HEADER32 Header;
  LIST_ENTRY32 MutantListHead;
  unsigned int InitialStack;
  unsigned int StackLimit;
  unsigned int Teb;
  unsigned int TlsArray;
  unsigned int KernelStack;
  unsigned __int8 DebugActive;
  unsigned __int8 State;
  unsigned __int8 Alerted[2];
  unsigned __int8 Iopl;
  unsigned __int8 NpxState;
  char Saturation;
  char Priority;
  _KAPC_STATE32 ApcState;
};

/* 1611 */
struct _ALPHA_THREAD
{
  _DISPATCHER_HEADER32 Header;
  LIST_ENTRY32 MutantListHead;
  unsigned int InitialStack;
  unsigned int StackLimit;
  unsigned int Teb;
  unsigned int TlsArray;
  unsigned int KernelStack;
  unsigned __int8 DebugActive;
  unsigned __int8 State;
  unsigned __int8 Alerted[2];
  unsigned __int8 Iopl;
  unsigned __int8 NpxState;
  char Saturation;
  char Priority;
  _KAPC_STATE32 ApcState;
};

/* 1612 */
struct _DISPATCHER_HEADER64
{
  unsigned __int8 Type;
  unsigned __int8 Absolute;
  unsigned __int8 Size;
  unsigned __int8 Inserted;
  int SignalState;
  LIST_ENTRY64 WaitListHead;
};

/* 1613 */
struct __declspec(align(8)) _KAPC_STATE64
{
  LIST_ENTRY64 ApcListHead[2];
  unsigned __int64 Process;
  unsigned __int8 KernelApcInProgress;
  unsigned __int8 KernelApcPending;
  unsigned __int8 UserApcPending;
};

/* 1614 */
struct _AXP64_THREAD
{
  _DISPATCHER_HEADER64 Header;
  LIST_ENTRY64 MutantListHead;
  unsigned __int64 InitialStack;
  unsigned __int64 StackLimit;
  unsigned __int64 Teb;
  unsigned __int64 TlsArray;
  unsigned __int64 KernelStack;
  unsigned __int8 DebugActive;
  unsigned __int8 State;
  unsigned __int8 Alerted[2];
  unsigned __int8 Iopl;
  unsigned __int8 NpxState;
  char Saturation;
  char Priority;
  _KAPC_STATE64 ApcState;
};

/* 1615 */
struct _IA64_THREAD
{
  _DISPATCHER_HEADER64 Header;
  LIST_ENTRY64 MutantListHead;
  unsigned __int64 InitialStack;
  unsigned __int64 StackLimit;
  unsigned __int64 InitialBStore;
  unsigned __int64 BStoreLimit;
  unsigned __int64 Teb;
  unsigned __int64 TlsArray;
  unsigned __int64 KernelStack;
  unsigned __int64 KernelBStore;
  unsigned __int8 DebugActive;
  unsigned __int8 State;
  unsigned __int8 Alerted[2];
  unsigned __int8 Iopl;
  unsigned __int8 NpxState;
  char Saturation;
  char Priority;
  _KAPC_STATE64 ApcState;
};

/* 1616 */
union $098640F104F321D6A0326527E38D7759
{
  _X86_THREAD X86Thread;
  _ALPHA_THREAD AlphaThread;
  _AXP64_THREAD Axp64Thread;
  _IA64_THREAD IA64Thread;
};

/* 1617 */
struct _CROSS_PLATFORM_THREAD
{
  $098640F104F321D6A0326527E38D7759 ___u0;
};

/* 1618 */
struct _IA64_KSPECIAL_REGISTERS
{
  unsigned __int64 KernelDbI0;
  unsigned __int64 KernelDbI1;
  unsigned __int64 KernelDbI2;
  unsigned __int64 KernelDbI3;
  unsigned __int64 KernelDbI4;
  unsigned __int64 KernelDbI5;
  unsigned __int64 KernelDbI6;
  unsigned __int64 KernelDbI7;
  unsigned __int64 KernelDbD0;
  unsigned __int64 KernelDbD1;
  unsigned __int64 KernelDbD2;
  unsigned __int64 KernelDbD3;
  unsigned __int64 KernelDbD4;
  unsigned __int64 KernelDbD5;
  unsigned __int64 KernelDbD6;
  unsigned __int64 KernelDbD7;
  unsigned __int64 KernelPfC0;
  unsigned __int64 KernelPfC1;
  unsigned __int64 KernelPfC2;
  unsigned __int64 KernelPfC3;
  unsigned __int64 KernelPfC4;
  unsigned __int64 KernelPfC5;
  unsigned __int64 KernelPfC6;
  unsigned __int64 KernelPfC7;
  unsigned __int64 KernelPfD0;
  unsigned __int64 KernelPfD1;
  unsigned __int64 KernelPfD2;
  unsigned __int64 KernelPfD3;
  unsigned __int64 KernelPfD4;
  unsigned __int64 KernelPfD5;
  unsigned __int64 KernelPfD6;
  unsigned __int64 KernelPfD7;
  unsigned __int64 IntH16;
  unsigned __int64 IntH17;
  unsigned __int64 IntH18;
  unsigned __int64 IntH19;
  unsigned __int64 IntH20;
  unsigned __int64 IntH21;
  unsigned __int64 IntH22;
  unsigned __int64 IntH23;
  unsigned __int64 IntH24;
  unsigned __int64 IntH25;
  unsigned __int64 IntH26;
  unsigned __int64 IntH27;
  unsigned __int64 IntH28;
  unsigned __int64 IntH29;
  unsigned __int64 IntH30;
  unsigned __int64 IntH31;
  unsigned __int64 ApCPUID0;
  unsigned __int64 ApCPUID1;
  unsigned __int64 ApCPUID2;
  unsigned __int64 ApCPUID3;
  unsigned __int64 ApCPUID4;
  unsigned __int64 ApCPUID5;
  unsigned __int64 ApCPUID6;
  unsigned __int64 ApCPUID7;
  unsigned __int64 ApKR0;
  unsigned __int64 ApKR1;
  unsigned __int64 ApKR2;
  unsigned __int64 ApKR3;
  unsigned __int64 ApKR4;
  unsigned __int64 ApKR5;
  unsigned __int64 ApKR6;
  unsigned __int64 ApKR7;
  unsigned __int64 ApITC;
  unsigned __int64 ApITM;
  unsigned __int64 ApIVA;
  unsigned __int64 ApPTA;
  unsigned __int64 ApGPTA;
  unsigned __int64 StISR;
  unsigned __int64 StIFA;
  unsigned __int64 StITIR;
  unsigned __int64 StIIPA;
  unsigned __int64 StIIM;
  unsigned __int64 StIHA;
  unsigned __int64 SaLID;
  unsigned __int64 SaIVR;
  unsigned __int64 SaTPR;
  unsigned __int64 SaEOI;
  unsigned __int64 SaIRR0;
  unsigned __int64 SaIRR1;
  unsigned __int64 SaIRR2;
  unsigned __int64 SaIRR3;
  unsigned __int64 SaITV;
  unsigned __int64 SaPMV;
  unsigned __int64 SaCMCV;
  unsigned __int64 SaLRR0;
  unsigned __int64 SaLRR1;
  unsigned __int64 Rr0;
  unsigned __int64 Rr1;
  unsigned __int64 Rr2;
  unsigned __int64 Rr3;
  unsigned __int64 Rr4;
  unsigned __int64 Rr5;
  unsigned __int64 Rr6;
  unsigned __int64 Rr7;
  unsigned __int64 Pkr0;
  unsigned __int64 Pkr1;
  unsigned __int64 Pkr2;
  unsigned __int64 Pkr3;
  unsigned __int64 Pkr4;
  unsigned __int64 Pkr5;
  unsigned __int64 Pkr6;
  unsigned __int64 Pkr7;
  unsigned __int64 Pkr8;
  unsigned __int64 Pkr9;
  unsigned __int64 Pkr10;
  unsigned __int64 Pkr11;
  unsigned __int64 Pkr12;
  unsigned __int64 Pkr13;
  unsigned __int64 Pkr14;
  unsigned __int64 Pkr15;
  unsigned __int64 TrI0;
  unsigned __int64 TrI1;
  unsigned __int64 TrI2;
  unsigned __int64 TrI3;
  unsigned __int64 TrI4;
  unsigned __int64 TrI5;
  unsigned __int64 TrI6;
  unsigned __int64 TrI7;
  unsigned __int64 TrD0;
  unsigned __int64 TrD1;
  unsigned __int64 TrD2;
  unsigned __int64 TrD3;
  unsigned __int64 TrD4;
  unsigned __int64 TrD5;
  unsigned __int64 TrD6;
  unsigned __int64 TrD7;
  unsigned __int64 SrMSR0;
  unsigned __int64 SrMSR1;
  unsigned __int64 SrMSR2;
  unsigned __int64 SrMSR3;
  unsigned __int64 SrMSR4;
  unsigned __int64 SrMSR5;
  unsigned __int64 SrMSR6;
  unsigned __int64 SrMSR7;
};

/* 1619 */
struct _IA64_KEXCEPTION_FRAME
{
  unsigned __int64 ApEC;
  unsigned __int64 ApLC;
  unsigned __int64 IntNats;
  unsigned __int64 IntS0;
  unsigned __int64 IntS1;
  unsigned __int64 IntS2;
  unsigned __int64 IntS3;
  unsigned __int64 BrS0;
  unsigned __int64 BrS1;
  unsigned __int64 BrS2;
  unsigned __int64 BrS3;
  unsigned __int64 BrS4;
  _FLOAT128 FltS0;
  _FLOAT128 FltS1;
  _FLOAT128 FltS2;
  _FLOAT128 FltS3;
  _FLOAT128 FltS4;
  _FLOAT128 FltS5;
  _FLOAT128 FltS6;
  _FLOAT128 FltS7;
  _FLOAT128 FltS8;
  _FLOAT128 FltS9;
  _FLOAT128 FltS10;
  _FLOAT128 FltS11;
  _FLOAT128 FltS12;
  _FLOAT128 FltS13;
  _FLOAT128 FltS14;
  _FLOAT128 FltS15;
  _FLOAT128 FltS16;
  _FLOAT128 FltS17;
  _FLOAT128 FltS18;
  _FLOAT128 FltS19;
};

/* 1620 */
struct _IA64_KSWITCH_FRAME
{
  unsigned __int64 SwitchPredicates;
  unsigned __int64 SwitchRp;
  unsigned __int64 SwitchPFS;
  unsigned __int64 SwitchFPSR;
  unsigned __int64 SwitchBsp;
  unsigned __int64 SwitchRnat;
  _IA64_KEXCEPTION_FRAME SwitchExceptionFrame;
};

/* 1621 */
struct $638AC9FBE06574DB3ADA9A39B5A280B5
{
  unsigned __int32 Offset : 21;
  unsigned __int32 Directory : 9;
  unsigned __int32 DirectoryPointer : 2;
};

/* 1622 */
struct $D079C538C3FD4BED9DF8EA1175177C85
{
  unsigned __int32 Offset : 12;
  unsigned __int32 Table : 9;
  unsigned __int32 Directory : 9;
  unsigned __int32 DirectoryPointer : 2;
};

/* 1623 */
union $653B9D66428DBA0E867115EBB93C22E7
{
  $D079C538C3FD4BED9DF8EA1175177C85 __s0;
  $638AC9FBE06574DB3ADA9A39B5A280B5 LargeAddress;
  unsigned int DwordPart;
};

/* 1624 */
struct _PAE_ADDRESS
{
  $653B9D66428DBA0E867115EBB93C22E7 ___u0;
};

/* 1625 */
struct _X86_FLOATING_SAVE_AREA
{
  unsigned int ControlWord;
  unsigned int StatusWord;
  unsigned int TagWord;
  unsigned int ErrorOffset;
  unsigned int ErrorSelector;
  unsigned int DataOffset;
  unsigned int DataSelector;
  unsigned __int8 RegisterArea[80];
  unsigned int Cr0NpxState;
};

/* 1626 */
struct _X86_CONTEXT
{
  unsigned int ContextFlags;
  unsigned int Dr0;
  unsigned int Dr1;
  unsigned int Dr2;
  unsigned int Dr3;
  unsigned int Dr6;
  unsigned int Dr7;
  _X86_FLOATING_SAVE_AREA FloatSave;
  unsigned int SegGs;
  unsigned int SegFs;
  unsigned int SegEs;
  unsigned int SegDs;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Ebx;
  unsigned int Edx;
  unsigned int Ecx;
  unsigned int Eax;
  unsigned int Ebp;
  unsigned int Eip;
  unsigned int SegCs;
  unsigned int EFlags;
  unsigned int Esp;
  unsigned int SegSs;
};

/* 1627 */
struct _X86_KPROCESSOR_STATE
{
  _X86_CONTEXT ContextFrame;
  _X86_KSPECIAL_REGISTERS SpecialRegisters;
};

/* 1628 */
struct __declspec(align(8)) _DBGKM_EXCEPTION64
{
  _EXCEPTION_RECORD64 ExceptionRecord;
  unsigned int FirstChance;
};

/* 1629 */
struct _DBGUI_CONTINUE
{
  _CLIENT_ID AppClientId;
  int ContinueStatus;
};

/* 1630 */
struct _GET_CURRENT_PROCESS_ADDRESS
{
  unsigned int Processor;
  unsigned __int64 CurrentThread;
  unsigned __int64 Address;
};

/* 1631 */
struct _DBGKD_READ_MEMORY64
{
  unsigned __int64 TargetBaseAddress;
  unsigned int TransferCount;
  unsigned int ActualBytesRead;
};

/* 1632 */
struct _DBGKD_READ_WRITE_IO64
{
  unsigned __int64 IoAddress;
  unsigned int DataSize;
  unsigned int DataValue;
};

/* 1633 */
struct _EXTSTACKTRACE
{
  unsigned int FramePointer;
  unsigned int ProgramCounter;
  unsigned int ReturnAddress;
  unsigned int Args[4];
};

/* 1634 */
struct _WINDBG_EXTENSION_APIS
{
  unsigned int nSize;
  void (*lpOutputRoutine)(const char *, ...);
  unsigned int (__stdcall *lpGetExpressionRoutine)(const char *);
  void (__stdcall *lpGetSymbolRoutine)(void *, unsigned __int8 *, unsigned int *);
  unsigned int (__stdcall *lpDisasmRoutine)(unsigned int *, const char *, unsigned int);
  unsigned int (__stdcall *lpCheckControlCRoutine)();
  unsigned int (__stdcall *lpReadProcessMemoryRoutine)(unsigned int, void *, unsigned int, unsigned int *);
  unsigned int (__stdcall *lpWriteProcessMemoryRoutine)(unsigned int, const void *, unsigned int, unsigned int *);
  unsigned int (__stdcall *lpGetThreadContextRoutine)(unsigned int, _CONTEXT *, unsigned int);
  unsigned int (__stdcall *lpSetThreadContextRoutine)(unsigned int, _CONTEXT *, unsigned int);
  unsigned int (__stdcall *lpIoctlRoutine)(unsigned __int16, void *, unsigned int);
  unsigned int (__stdcall *lpStackTraceRoutine)(unsigned int, unsigned int, unsigned int, _EXTSTACKTRACE *, unsigned int);
};

/* 1635 */
struct _DBGKD_WRITE_MEMORY64
{
  unsigned __int64 TargetBaseAddress;
  unsigned int TransferCount;
  unsigned int ActualBytesWritten;
};

/* 1636 */
struct _DBGKD_GET_CONTEXT
{
  unsigned int Unused;
};

/* 1637 */
struct _DBGKD_SET_CONTEXT
{
  unsigned int ContextFlags;
};

/* 1638 */
struct _DBGKD_RESTORE_BREAKPOINT
{
  unsigned int BreakPointHandle;
};

/* 1639 */
struct _DBGKD_CONTINUE2
{
  int ContinueStatus;
  _DBGKD_CONTROL_SET ControlSet;
};

/* 1640 */
struct __declspec(align(8)) _DBGKD_READ_WRITE_IO_EXTENDED64
{
  unsigned int DataSize;
  unsigned int InterfaceType;
  unsigned int BusNumber;
  unsigned int AddressSpace;
  unsigned __int64 IoAddress;
  unsigned int DataValue;
};

/* 1641 */
struct _DBGKD_QUERY_SPECIAL_CALLS
{
  unsigned int NumberOfSpecialCalls;
};

/* 1642 */
struct _DBGKD_SET_SPECIAL_CALL64
{
  unsigned __int64 SpecialCall;
};

/* 1643 */
struct __declspec(align(8)) _DBGKD_SET_INTERNAL_BREAKPOINT64
{
  unsigned __int64 BreakpointAddress;
  unsigned int Flags;
};

/* 1644 */
struct _DBGKD_GET_INTERNAL_BREAKPOINT64
{
  unsigned __int64 BreakpointAddress;
  unsigned int Flags;
  unsigned int Calls;
  unsigned int MaxCallsPerPeriod;
  unsigned int MinInstructions;
  unsigned int MaxInstructions;
  unsigned int TotalInstructions;
};

/* 1645 */
struct _DBGKD_GET_VERSION64
{
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned __int16 ProtocolVersion;
  unsigned __int16 Flags;
  unsigned __int16 MachineType;
  unsigned __int16 Unused[3];
  unsigned __int64 KernBase;
  unsigned __int64 PsLoadedModuleList;
  unsigned __int64 DebuggerDataList;
};

/* 1646 */
struct _DBGKD_BREAKPOINTEX
{
  unsigned int BreakPointCount;
  int ContinueStatus;
};

/* 1647 */
struct _DBGKD_READ_WRITE_MSR
{
  unsigned int Msr;
  unsigned int DataValueLow;
  unsigned int DataValueHigh;
};

/* 1648 */
union $19EAAABB9AB1606EE4031677CC8198BB
{
  _DBGKD_READ_MEMORY64 ReadMemory;
  _DBGKD_WRITE_MEMORY64 WriteMemory;
  _DBGKD_GET_CONTEXT GetContext;
  _DBGKD_SET_CONTEXT SetContext;
  _DBGKD_WRITE_BREAKPOINT64 WriteBreakPoint;
  _DBGKD_RESTORE_BREAKPOINT RestoreBreakPoint;
  _DBGKD_CONTINUE Continue;
  _DBGKD_CONTINUE2 Continue2;
  _DBGKD_READ_WRITE_IO64 ReadWriteIo;
  _DBGKD_READ_WRITE_IO_EXTENDED64 ReadWriteIoExtended;
  _DBGKD_QUERY_SPECIAL_CALLS QuerySpecialCalls;
  _DBGKD_SET_SPECIAL_CALL64 SetSpecialCall;
  _DBGKD_SET_INTERNAL_BREAKPOINT64 SetInternalBreakpoint;
  _DBGKD_GET_INTERNAL_BREAKPOINT64 GetInternalBreakpoint;
  _DBGKD_GET_VERSION64 GetVersion64;
  _DBGKD_BREAKPOINTEX BreakPointEx;
  _DBGKD_READ_WRITE_MSR ReadWriteMsr;
  _DBGKD_SEARCH_MEMORY SearchMemory;
  _DBGKD_GET_SET_BUS_DATA GetSetBusData;
};

/* 1649 */
struct _DBGKD_MANIPULATE_STATE64
{
  unsigned int ApiNumber;
  unsigned __int16 ProcessorLevel;
  unsigned __int16 Processor;
  int ReturnStatus;
  $19EAAABB9AB1606EE4031677CC8198BB u;
};

/* 1650 */
struct $BADE5BA990A758747518CE571B2F63EE
{
  unsigned __int64 Valid : 1;
  unsigned __int64 Write : 1;
  unsigned __int64 Owner : 1;
  unsigned __int64 WriteThrough : 1;
  unsigned __int64 CacheDisable : 1;
  unsigned __int64 Accessed : 1;
  unsigned __int64 Dirty : 1;
  unsigned __int64 LargePage : 1;
  unsigned __int64 Global : 1;
  unsigned __int64 CopyOnWrite : 1;
  unsigned __int64 Prototype : 1;
  unsigned __int64 reserved0 : 1;
  unsigned __int64 PageFrameNumber : 24;
  unsigned __int64 reserved1 : 28;
};

/* 1651 */
union $933D357B5670D4B0E5A05135C7F1618A
{
  $BADE5BA990A758747518CE571B2F63EE __s0;
  $B950AFB169DC87688B328897744C612F __s1;
};

/* 1652 */
struct _X86PAE_HARDWARE_PTE
{
  $933D357B5670D4B0E5A05135C7F1618A ___u0;
};

/* 1653 */
struct _DBGKM_EXCEPTION
{
  _EXCEPTION_RECORD ExceptionRecord;
  unsigned int FirstChance;
};

/* 1654 */
struct __declspec(align(8)) _DBGKD_LOAD_SYMBOLS64
{
  unsigned int PathNameLength;
  unsigned __int64 BaseOfDll;
  unsigned __int64 ProcessId;
  unsigned int CheckSum;
  unsigned int SizeOfImage;
  unsigned __int8 UnloadSymbols;
};

/* 1655 */
union $55F9B6453B044C1B24060FAC61EDF16A
{
  _DBGKM_EXCEPTION64 Exception;
  _DBGKD_LOAD_SYMBOLS64 LoadSymbols;
};

/* 1656 */
struct _DBGKD_WAIT_STATE_CHANGE64
{
  unsigned int NewState;
  unsigned __int16 ProcessorLevel;
  unsigned __int16 Processor;
  unsigned int NumberProcessors;
  unsigned __int64 Thread;
  unsigned __int64 ProgramCounter;
  $55F9B6453B044C1B24060FAC61EDF16A u;
  _DBGKD_CONTROL_REPORT ControlReport;
  _CONTEXT Context;
};

/* 1657 */
struct _DBGKD_PRINT_STRING
{
  unsigned int LengthOfString;
};

/* 1658 */
struct _EXTSTACKTRACE64
{
  unsigned __int64 FramePointer;
  unsigned __int64 ProgramCounter;
  unsigned __int64 ReturnAddress;
  unsigned __int64 Args[4];
};

/* 1659 */
struct _X86_NT5_CONTEXT
{
  unsigned int ContextFlags;
  unsigned int Dr0;
  unsigned int Dr1;
  unsigned int Dr2;
  unsigned int Dr3;
  unsigned int Dr6;
  unsigned int Dr7;
  _X86_FLOATING_SAVE_AREA FloatSave;
  unsigned int SegGs;
  unsigned int SegFs;
  unsigned int SegEs;
  unsigned int SegDs;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Ebx;
  unsigned int Edx;
  unsigned int Ecx;
  unsigned int Eax;
  unsigned int Ebp;
  unsigned int Eip;
  unsigned int SegCs;
  unsigned int EFlags;
  unsigned int Esp;
  unsigned int SegSs;
  unsigned __int8 ExtendedRegisters[512];
};

/* 1660 */
struct _DBGKM_EXCEPTION32
{
  _EXCEPTION_RECORD32 ExceptionRecord;
  unsigned int FirstChance;
};

/* 1661 */
struct __declspec(align(4)) _DBGKD_LOAD_SYMBOLS32
{
  unsigned int PathNameLength;
  unsigned int BaseOfDll;
  unsigned int ProcessId;
  unsigned int CheckSum;
  unsigned int SizeOfImage;
  unsigned __int8 UnloadSymbols;
};

/* 1662 */
union $ABF9CEEED4F0937338EDBAB64BE74659
{
  _DBGKM_EXCEPTION32 Exception;
  _DBGKD_LOAD_SYMBOLS32 LoadSymbols;
};

/* 1663 */
struct _ALPHA_CONTEXT
{
  unsigned int FltF0;
  unsigned int FltF1;
  unsigned int FltF2;
  unsigned int FltF3;
  unsigned int FltF4;
  unsigned int FltF5;
  unsigned int FltF6;
  unsigned int FltF7;
  unsigned int FltF8;
  unsigned int FltF9;
  unsigned int FltF10;
  unsigned int FltF11;
  unsigned int FltF12;
  unsigned int FltF13;
  unsigned int FltF14;
  unsigned int FltF15;
  unsigned int FltF16;
  unsigned int FltF17;
  unsigned int FltF18;
  unsigned int FltF19;
  unsigned int FltF20;
  unsigned int FltF21;
  unsigned int FltF22;
  unsigned int FltF23;
  unsigned int FltF24;
  unsigned int FltF25;
  unsigned int FltF26;
  unsigned int FltF27;
  unsigned int FltF28;
  unsigned int FltF29;
  unsigned int FltF30;
  unsigned int FltF31;
  unsigned int IntV0;
  unsigned int IntT0;
  unsigned int IntT1;
  unsigned int IntT2;
  unsigned int IntT3;
  unsigned int IntT4;
  unsigned int IntT5;
  unsigned int IntT6;
  unsigned int IntT7;
  unsigned int IntS0;
  unsigned int IntS1;
  unsigned int IntS2;
  unsigned int IntS3;
  unsigned int IntS4;
  unsigned int IntS5;
  unsigned int IntFp;
  unsigned int IntA0;
  unsigned int IntA1;
  unsigned int IntA2;
  unsigned int IntA3;
  unsigned int IntA4;
  unsigned int IntA5;
  unsigned int IntT8;
  unsigned int IntT9;
  unsigned int IntT10;
  unsigned int IntT11;
  unsigned int IntRa;
  unsigned int IntT12;
  unsigned int IntAt;
  unsigned int IntGp;
  unsigned int IntSp;
  unsigned int IntZero;
  unsigned int Fpcr;
  unsigned int SoftFpcr;
  unsigned int Fir;
  unsigned int Psr;
  unsigned int ContextFlags;
  unsigned int HighFltF0;
  unsigned int HighFltF1;
  unsigned int HighFltF2;
  unsigned int HighFltF3;
  unsigned int HighFltF4;
  unsigned int HighFltF5;
  unsigned int HighFltF6;
  unsigned int HighFltF7;
  unsigned int HighFltF8;
  unsigned int HighFltF9;
  unsigned int HighFltF10;
  unsigned int HighFltF11;
  unsigned int HighFltF12;
  unsigned int HighFltF13;
  unsigned int HighFltF14;
  unsigned int HighFltF15;
  unsigned int HighFltF16;
  unsigned int HighFltF17;
  unsigned int HighFltF18;
  unsigned int HighFltF19;
  unsigned int HighFltF20;
  unsigned int HighFltF21;
  unsigned int HighFltF22;
  unsigned int HighFltF23;
  unsigned int HighFltF24;
  unsigned int HighFltF25;
  unsigned int HighFltF26;
  unsigned int HighFltF27;
  unsigned int HighFltF28;
  unsigned int HighFltF29;
  unsigned int HighFltF30;
  unsigned int HighFltF31;
  unsigned int HighIntV0;
  unsigned int HighIntT0;
  unsigned int HighIntT1;
  unsigned int HighIntT2;
  unsigned int HighIntT3;
  unsigned int HighIntT4;
  unsigned int HighIntT5;
  unsigned int HighIntT6;
  unsigned int HighIntT7;
  unsigned int HighIntS0;
  unsigned int HighIntS1;
  unsigned int HighIntS2;
  unsigned int HighIntS3;
  unsigned int HighIntS4;
  unsigned int HighIntS5;
  unsigned int HighIntFp;
  unsigned int HighIntA0;
  unsigned int HighIntA1;
  unsigned int HighIntA2;
  unsigned int HighIntA3;
  unsigned int HighIntA4;
  unsigned int HighIntA5;
  unsigned int HighIntT8;
  unsigned int HighIntT9;
  unsigned int HighIntT10;
  unsigned int HighIntT11;
  unsigned int HighIntRa;
  unsigned int HighIntT12;
  unsigned int HighIntAt;
  unsigned int HighIntGp;
  unsigned int HighIntSp;
  unsigned int HighIntZero;
  unsigned int HighFpcr;
  unsigned int HighSoftFpcr;
  unsigned int HighFir;
  long double DoNotUseThisField;
  unsigned int HighFill[2];
};

/* 1664 */
struct _ALPHA_NT5_CONTEXT
{
  unsigned __int64 FltF0;
  unsigned __int64 FltF1;
  unsigned __int64 FltF2;
  unsigned __int64 FltF3;
  unsigned __int64 FltF4;
  unsigned __int64 FltF5;
  unsigned __int64 FltF6;
  unsigned __int64 FltF7;
  unsigned __int64 FltF8;
  unsigned __int64 FltF9;
  unsigned __int64 FltF10;
  unsigned __int64 FltF11;
  unsigned __int64 FltF12;
  unsigned __int64 FltF13;
  unsigned __int64 FltF14;
  unsigned __int64 FltF15;
  unsigned __int64 FltF16;
  unsigned __int64 FltF17;
  unsigned __int64 FltF18;
  unsigned __int64 FltF19;
  unsigned __int64 FltF20;
  unsigned __int64 FltF21;
  unsigned __int64 FltF22;
  unsigned __int64 FltF23;
  unsigned __int64 FltF24;
  unsigned __int64 FltF25;
  unsigned __int64 FltF26;
  unsigned __int64 FltF27;
  unsigned __int64 FltF28;
  unsigned __int64 FltF29;
  unsigned __int64 FltF30;
  unsigned __int64 FltF31;
  unsigned __int64 IntV0;
  unsigned __int64 IntT0;
  unsigned __int64 IntT1;
  unsigned __int64 IntT2;
  unsigned __int64 IntT3;
  unsigned __int64 IntT4;
  unsigned __int64 IntT5;
  unsigned __int64 IntT6;
  unsigned __int64 IntT7;
  unsigned __int64 IntS0;
  unsigned __int64 IntS1;
  unsigned __int64 IntS2;
  unsigned __int64 IntS3;
  unsigned __int64 IntS4;
  unsigned __int64 IntS5;
  unsigned __int64 IntFp;
  unsigned __int64 IntA0;
  unsigned __int64 IntA1;
  unsigned __int64 IntA2;
  unsigned __int64 IntA3;
  unsigned __int64 IntA4;
  unsigned __int64 IntA5;
  unsigned __int64 IntT8;
  unsigned __int64 IntT9;
  unsigned __int64 IntT10;
  unsigned __int64 IntT11;
  unsigned __int64 IntRa;
  unsigned __int64 IntT12;
  unsigned __int64 IntAt;
  unsigned __int64 IntGp;
  unsigned __int64 IntSp;
  unsigned __int64 IntZero;
  unsigned __int64 Fpcr;
  unsigned __int64 SoftFpcr;
  unsigned __int64 Fir;
  unsigned int Psr;
  unsigned int ContextFlags;
  unsigned int Fill[4];
};

/* 1665 */
struct _IA64_CONTEXT
{
  unsigned int ContextFlags;
  unsigned int Fill1[3];
  unsigned __int64 DbI0;
  unsigned __int64 DbI1;
  unsigned __int64 DbI2;
  unsigned __int64 DbI3;
  unsigned __int64 DbI4;
  unsigned __int64 DbI5;
  unsigned __int64 DbI6;
  unsigned __int64 DbI7;
  unsigned __int64 DbD0;
  unsigned __int64 DbD1;
  unsigned __int64 DbD2;
  unsigned __int64 DbD3;
  unsigned __int64 DbD4;
  unsigned __int64 DbD5;
  unsigned __int64 DbD6;
  unsigned __int64 DbD7;
  _FLOAT128 FltS0;
  _FLOAT128 FltS1;
  _FLOAT128 FltS2;
  _FLOAT128 FltS3;
  _FLOAT128 FltT0;
  _FLOAT128 FltT1;
  _FLOAT128 FltT2;
  _FLOAT128 FltT3;
  _FLOAT128 FltT4;
  _FLOAT128 FltT5;
  _FLOAT128 FltT6;
  _FLOAT128 FltT7;
  _FLOAT128 FltT8;
  _FLOAT128 FltT9;
  _FLOAT128 FltS4;
  _FLOAT128 FltS5;
  _FLOAT128 FltS6;
  _FLOAT128 FltS7;
  _FLOAT128 FltS8;
  _FLOAT128 FltS9;
  _FLOAT128 FltS10;
  _FLOAT128 FltS11;
  _FLOAT128 FltS12;
  _FLOAT128 FltS13;
  _FLOAT128 FltS14;
  _FLOAT128 FltS15;
  _FLOAT128 FltS16;
  _FLOAT128 FltS17;
  _FLOAT128 FltS18;
  _FLOAT128 FltS19;
  _FLOAT128 FltF32;
  _FLOAT128 FltF33;
  _FLOAT128 FltF34;
  _FLOAT128 FltF35;
  _FLOAT128 FltF36;
  _FLOAT128 FltF37;
  _FLOAT128 FltF38;
  _FLOAT128 FltF39;
  _FLOAT128 FltF40;
  _FLOAT128 FltF41;
  _FLOAT128 FltF42;
  _FLOAT128 FltF43;
  _FLOAT128 FltF44;
  _FLOAT128 FltF45;
  _FLOAT128 FltF46;
  _FLOAT128 FltF47;
  _FLOAT128 FltF48;
  _FLOAT128 FltF49;
  _FLOAT128 FltF50;
  _FLOAT128 FltF51;
  _FLOAT128 FltF52;
  _FLOAT128 FltF53;
  _FLOAT128 FltF54;
  _FLOAT128 FltF55;
  _FLOAT128 FltF56;
  _FLOAT128 FltF57;
  _FLOAT128 FltF58;
  _FLOAT128 FltF59;
  _FLOAT128 FltF60;
  _FLOAT128 FltF61;
  _FLOAT128 FltF62;
  _FLOAT128 FltF63;
  _FLOAT128 FltF64;
  _FLOAT128 FltF65;
  _FLOAT128 FltF66;
  _FLOAT128 FltF67;
  _FLOAT128 FltF68;
  _FLOAT128 FltF69;
  _FLOAT128 FltF70;
  _FLOAT128 FltF71;
  _FLOAT128 FltF72;
  _FLOAT128 FltF73;
  _FLOAT128 FltF74;
  _FLOAT128 FltF75;
  _FLOAT128 FltF76;
  _FLOAT128 FltF77;
  _FLOAT128 FltF78;
  _FLOAT128 FltF79;
  _FLOAT128 FltF80;
  _FLOAT128 FltF81;
  _FLOAT128 FltF82;
  _FLOAT128 FltF83;
  _FLOAT128 FltF84;
  _FLOAT128 FltF85;
  _FLOAT128 FltF86;
  _FLOAT128 FltF87;
  _FLOAT128 FltF88;
  _FLOAT128 FltF89;
  _FLOAT128 FltF90;
  _FLOAT128 FltF91;
  _FLOAT128 FltF92;
  _FLOAT128 FltF93;
  _FLOAT128 FltF94;
  _FLOAT128 FltF95;
  _FLOAT128 FltF96;
  _FLOAT128 FltF97;
  _FLOAT128 FltF98;
  _FLOAT128 FltF99;
  _FLOAT128 FltF100;
  _FLOAT128 FltF101;
  _FLOAT128 FltF102;
  _FLOAT128 FltF103;
  _FLOAT128 FltF104;
  _FLOAT128 FltF105;
  _FLOAT128 FltF106;
  _FLOAT128 FltF107;
  _FLOAT128 FltF108;
  _FLOAT128 FltF109;
  _FLOAT128 FltF110;
  _FLOAT128 FltF111;
  _FLOAT128 FltF112;
  _FLOAT128 FltF113;
  _FLOAT128 FltF114;
  _FLOAT128 FltF115;
  _FLOAT128 FltF116;
  _FLOAT128 FltF117;
  _FLOAT128 FltF118;
  _FLOAT128 FltF119;
  _FLOAT128 FltF120;
  _FLOAT128 FltF121;
  _FLOAT128 FltF122;
  _FLOAT128 FltF123;
  _FLOAT128 FltF124;
  _FLOAT128 FltF125;
  _FLOAT128 FltF126;
  _FLOAT128 FltF127;
  unsigned __int64 StFPSR;
  unsigned __int64 IntGp;
  unsigned __int64 IntT0;
  unsigned __int64 IntT1;
  unsigned __int64 IntS0;
  unsigned __int64 IntS1;
  unsigned __int64 IntS2;
  unsigned __int64 IntS3;
  unsigned __int64 IntV0;
  unsigned __int64 IntT2;
  unsigned __int64 IntT3;
  unsigned __int64 IntT4;
  unsigned __int64 IntSp;
  unsigned __int64 IntTeb;
  unsigned __int64 IntT5;
  unsigned __int64 IntT6;
  unsigned __int64 IntT7;
  unsigned __int64 IntT8;
  unsigned __int64 IntT9;
  unsigned __int64 IntT10;
  unsigned __int64 IntT11;
  unsigned __int64 IntT12;
  unsigned __int64 IntT13;
  unsigned __int64 IntT14;
  unsigned __int64 IntT15;
  unsigned __int64 IntT16;
  unsigned __int64 IntT17;
  unsigned __int64 IntT18;
  unsigned __int64 IntT19;
  unsigned __int64 IntT20;
  unsigned __int64 IntT21;
  unsigned __int64 IntT22;
  unsigned __int64 IntNats;
  unsigned __int64 Preds;
  unsigned __int64 BrRp;
  unsigned __int64 BrS0;
  unsigned __int64 BrS1;
  unsigned __int64 BrS2;
  unsigned __int64 BrS3;
  unsigned __int64 BrS4;
  unsigned __int64 BrT0;
  unsigned __int64 BrT1;
  unsigned __int64 ApUNAT;
  unsigned __int64 ApLC;
  unsigned __int64 ApEC;
  unsigned __int64 ApCCV;
  unsigned __int64 ApDCR;
  unsigned __int64 RsPFS;
  unsigned __int64 RsBSP;
  unsigned __int64 RsBSPSTORE;
  unsigned __int64 RsRSC;
  unsigned __int64 RsRNAT;
  unsigned __int64 StIPSR;
  unsigned __int64 StIIP;
  unsigned __int64 StIFS;
  unsigned __int64 StFCR;
  unsigned __int64 Eflag;
  unsigned __int64 SegCSD;
  unsigned __int64 SegSSD;
  unsigned __int64 Cflag;
  unsigned __int64 StFSR;
  unsigned __int64 StFIR;
  unsigned __int64 StFDR;
  unsigned __int64 UNUSEDPACK;
};

/* 1666 */
union $D4304F8521D5DB5AA417C42138EA2892
{
  _X86_CONTEXT X86Context;
  _X86_NT5_CONTEXT X86Nt5Context;
  _ALPHA_CONTEXT AlphaContext;
  _ALPHA_NT5_CONTEXT AlphaNt5Context;
  _IA64_CONTEXT IA64Context;
};

/* 1667 */
struct _CROSS_PLATFORM_CONTEXT
{
  $D4304F8521D5DB5AA417C42138EA2892 ___u0;
};

/* 1668 */
struct _CROSS_PLATFORM_WAIT_STATE_CHANGE32
{
  unsigned int NewState;
  unsigned __int16 ProcessorLevel;
  unsigned __int16 Processor;
  unsigned int NumberProcessors;
  unsigned int Thread;
  unsigned int ProgramCounter;
  $ABF9CEEED4F0937338EDBAB64BE74659 u;
  _DBGKD_CONTROL_REPORT ControlReport;
  _CROSS_PLATFORM_CONTEXT Context;
};

/* 1669 */
struct _DBGKM_EXIT_PROCESS
{
  int ExitStatus;
};

/* 1670 */
struct _DBGKM_UNLOAD_DLL
{
  void *BaseAddress;
};

/* 1671 */
struct _IA64_KNONVOLATILE_CONTEXT_POINTERS
{
  _FLOAT128 *FltS0;
  _FLOAT128 *FltS1;
  _FLOAT128 *FltS2;
  _FLOAT128 *FltS3;
  _FLOAT128 *HighFloatingContext[10];
  _FLOAT128 *FltS4;
  _FLOAT128 *FltS5;
  _FLOAT128 *FltS6;
  _FLOAT128 *FltS7;
  _FLOAT128 *FltS8;
  _FLOAT128 *FltS9;
  _FLOAT128 *FltS10;
  _FLOAT128 *FltS11;
  _FLOAT128 *FltS12;
  _FLOAT128 *FltS13;
  _FLOAT128 *FltS14;
  _FLOAT128 *FltS15;
  _FLOAT128 *FltS16;
  _FLOAT128 *FltS17;
  _FLOAT128 *FltS18;
  _FLOAT128 *FltS19;
  unsigned __int64 *IntS0;
  unsigned __int64 *IntS1;
  unsigned __int64 *IntS2;
  unsigned __int64 *IntS3;
  unsigned __int64 *IntSp;
  unsigned __int64 *IntS0Nat;
  unsigned __int64 *IntS1Nat;
  unsigned __int64 *IntS2Nat;
  unsigned __int64 *IntS3Nat;
  unsigned __int64 *IntSpNat;
  unsigned __int64 *Preds;
  unsigned __int64 *BrRp;
  unsigned __int64 *BrS0;
  unsigned __int64 *BrS1;
  unsigned __int64 *BrS2;
  unsigned __int64 *BrS3;
  unsigned __int64 *BrS4;
  unsigned __int64 *ApUNAT;
  unsigned __int64 *ApLC;
  unsigned __int64 *ApEC;
  unsigned __int64 *RsPFS;
  unsigned __int64 *StFSR;
  unsigned __int64 *StFIR;
  unsigned __int64 *StFDR;
  unsigned __int64 *Cflag;
};

/* 1672 */
struct $DFC37EF810B92CBB99CB77472A2095CA
{
  unsigned __int64 Valid : 1;
  unsigned __int64 Write : 1;
  unsigned __int64 Owner : 1;
  unsigned __int64 WriteThrough : 1;
  unsigned __int64 CacheDisable : 1;
  unsigned __int64 Accessed : 1;
  unsigned __int64 Dirty : 1;
  unsigned __int64 LargePage : 1;
  unsigned __int64 Global : 1;
  unsigned __int64 CopyOnWrite : 1;
  unsigned __int64 Prototype : 1;
  unsigned __int64 reserved0 : 1;
  unsigned __int64 reserved2 : 9;
  unsigned __int64 PageFrameNumber : 15;
  unsigned __int64 reserved1 : 28;
};

/* 1673 */
union $A55D143CA517A85EB2818FCBEE04AD53
{
  $BADE5BA990A758747518CE571B2F63EE __s0;
  $B950AFB169DC87688B328897744C612F __s1;
  $DFC37EF810B92CBB99CB77472A2095CA Large;
  unsigned __int64 QuadPart;
};

/* 1674 */
struct _X86PAE_HARDWARE_PDE
{
  $A55D143CA517A85EB2818FCBEE04AD53 ___u0;
};

/* 1675 */
struct _DBGSS_CREATE_PROCESS
{
  _CLIENT_ID DebugUiClientId;
  _DBGKM_CREATE_PROCESS NewProcess;
};

/* 1676 */
struct _DBGKM_EXIT_THREAD
{
  int ExitStatus;
};

/* 1677 */
struct _DBGKM_LOAD_DLL
{
  void *FileHandle;
  void *BaseOfDll;
  unsigned int DebugInfoFileOffset;
  unsigned int DebugInfoSize;
};

/* 1678 */
union $763FEFEA6B7CFBA6783D35D0E21EE14B
{
  _DBGKM_EXCEPTION Exception;
  _DBGKM_CREATE_THREAD CreateThread;
  _DBGSS_CREATE_PROCESS CreateProcessInfo;
  _DBGKM_EXIT_THREAD ExitThread;
  _DBGKM_EXIT_PROCESS ExitProcess;
  _DBGKM_LOAD_DLL LoadDll;
  _DBGKM_UNLOAD_DLL UnloadDll;
};

/* 1679 */
struct _DBGSS_APIMSG
{
  _PORT_MESSAGE h;
  _DBGKM_APINUMBER ApiNumber;
  int ReturnedStatus;
  _CLIENT_ID AppClientId;
  void *ContinueKey;
  $763FEFEA6B7CFBA6783D35D0E21EE14B u;
};

/* 1680 */
struct _CROSS_PLATFORM_WAIT_STATE_CHANGE64
{
  unsigned int NewState;
  unsigned __int16 ProcessorLevel;
  unsigned __int16 Processor;
  unsigned int NumberProcessors;
  unsigned __int64 Thread;
  unsigned __int64 ProgramCounter;
  $55F9B6453B044C1B24060FAC61EDF16A u;
  _DBGKD_CONTROL_REPORT ControlReport;
  _CROSS_PLATFORM_CONTEXT Context;
};

/* 1681 */
struct _IA64_UNWIND_INFO
{
  unsigned __int16 Version;
  unsigned __int16 Flags;
  unsigned int DataLength;
};

/* 1682 */
struct _DBGKD_WAIT_STATE_CHANGE32
{
  unsigned int NewState;
  unsigned __int16 ProcessorLevel;
  unsigned __int16 Processor;
  unsigned int NumberProcessors;
  unsigned int Thread;
  unsigned int ProgramCounter;
  $ABF9CEEED4F0937338EDBAB64BE74659 u;
  _DBGKD_CONTROL_REPORT ControlReport;
  _CONTEXT Context;
};

/* 1683 */
struct _TRACE_DATA_SYM
{
  unsigned int SymMin;
  unsigned int SymMax;
};

/* 1684 */
struct _DBGKD_GET_STRING
{
  unsigned int LengthOfPromptString;
  unsigned int LengthOfStringRead;
};

/* 1685 */
union $F0303055A0BDF259FE121B9007988573
{
  _DBGKD_PRINT_STRING PrintString;
  _DBGKD_GET_STRING GetString;
};

/* 1686 */
struct _DBGKD_DEBUG_IO
{
  unsigned int ApiNumber;
  unsigned __int16 ProcessorLevel;
  unsigned __int16 Processor;
  $F0303055A0BDF259FE121B9007988573 u;
};

/* 1687 */
struct _DBGKD_SET_SPECIAL_CALL32
{
  unsigned int SpecialCall;
};

/* 1688 */
struct EXT_API_VERSION
{
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned __int16 Revision;
  unsigned __int16 Reserved;
};

/* 1689 */
struct _GET_SET_SYMPATH
{
  const char *Args;
  char *Result;
  int Length;
};

/* 1690 */
struct _IOSPACE
{
  unsigned int Address;
  unsigned int Length;
  unsigned int Data;
};

/* 1691 */
struct __declspec(align(4)) _READCONTROLSPACE64
{
  unsigned __int16 Processor;
  unsigned __int64 Address;
  unsigned int BufLen;
  unsigned __int8 Buf[1];
};

/* 1692 */
struct __declspec(align(4)) _READCONTROLSPACE32
{
  unsigned __int16 Processor;
  unsigned int Address;
  unsigned int BufLen;
  unsigned __int8 Buf[1];
};

/* 1693 */
struct _IA64_KTRAP_FRAME
{
  unsigned __int64 Reserved[10];
  _FLOAT128 FltT0;
  _FLOAT128 FltT1;
  _FLOAT128 FltT2;
  _FLOAT128 FltT3;
  _FLOAT128 FltT4;
  _FLOAT128 FltT5;
  _FLOAT128 FltT6;
  _FLOAT128 FltT7;
  _FLOAT128 FltT8;
  _FLOAT128 FltT9;
  unsigned __int64 IntGp;
  unsigned __int64 IntT0;
  unsigned __int64 IntT1;
  unsigned __int64 ApUNAT;
  unsigned __int64 ApCCV;
  unsigned __int64 ApDCR;
  unsigned __int64 Preds;
  unsigned __int64 IntV0;
  unsigned __int64 IntT2;
  unsigned __int64 IntT3;
  unsigned __int64 IntT4;
  unsigned __int64 IntSp;
  unsigned __int64 IntTeb;
  unsigned __int64 IntT5;
  unsigned __int64 IntT6;
  unsigned __int64 IntT7;
  unsigned __int64 IntT8;
  unsigned __int64 IntT9;
  unsigned __int64 IntT10;
  unsigned __int64 IntT11;
  unsigned __int64 IntT12;
  unsigned __int64 IntT13;
  unsigned __int64 IntT14;
  unsigned __int64 IntT15;
  unsigned __int64 IntT16;
  unsigned __int64 IntT17;
  unsigned __int64 IntT18;
  unsigned __int64 IntT19;
  unsigned __int64 IntT20;
  unsigned __int64 IntT21;
  unsigned __int64 IntT22;
  unsigned __int64 IntNats;
  unsigned __int64 BrRp;
  unsigned __int64 BrT0;
  unsigned __int64 BrT1;
  unsigned __int64 RsRSC;
  unsigned __int64 RsBSP;
  unsigned __int64 RsBSPSTORE;
  unsigned __int64 RsRNAT;
  unsigned __int64 RsPFS;
  unsigned __int64 StIPSR;
  unsigned __int64 StIIP;
  unsigned __int64 StIFS;
  unsigned __int64 StFPSR;
  unsigned __int64 StISR;
  unsigned __int64 StIFA;
  unsigned __int64 StIIPA;
  unsigned __int64 StIIM;
  unsigned __int64 StIHA;
  unsigned int OldIrql;
  unsigned int PreviousMode;
  unsigned __int64 TrapFrame;
  unsigned __int8 ExceptionRecord[160];
  unsigned __int64 Handler;
  unsigned __int64 EOFMarker;
};

/* 1694 */
struct _BREAKPOINT_ENTRY
{
  unsigned __int8 Flags;
  unsigned __int8 Content;
  void *Address;
};

/* 1695 */
struct _DBGKD_READ_WRITE_IO_EXTENDED32
{
  unsigned int DataSize;
  unsigned int InterfaceType;
  unsigned int BusNumber;
  unsigned int AddressSpace;
  unsigned int IoAddress;
  unsigned int DataValue;
};

/* 1696 */
struct _X86_KTRAP_FRAME
{
  unsigned int DbgEbp;
  unsigned int DbgEip;
  unsigned int DbgArgMark;
  unsigned int DbgArgPointer;
  unsigned int TempSegCs;
  unsigned int TempEsp;
  unsigned int Dr0;
  unsigned int Dr1;
  unsigned int Dr2;
  unsigned int Dr3;
  unsigned int Dr6;
  unsigned int Dr7;
  unsigned int SegGs;
  unsigned int SegEs;
  unsigned int SegDs;
  unsigned int Edx;
  unsigned int Ecx;
  unsigned int Eax;
  unsigned int PreviousPreviousMode;
  unsigned int ExceptionList;
  unsigned int SegFs;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Ebx;
  unsigned int Ebp;
  unsigned int ErrCode;
  unsigned int Eip;
  unsigned int SegCs;
  unsigned int EFlags;
  unsigned int HardwareEsp;
  unsigned int HardwareSegSs;
  unsigned int V86Es;
  unsigned int V86Ds;
  unsigned int V86Fs;
  unsigned int V86Gs;
};

/* 1697 */
struct _DBGKD_WRITE_BREAKPOINT32
{
  unsigned int BreakPointAddress;
  unsigned int BreakPointHandle;
};

/* 1698 */
struct _X86_PARTIAL_KPRCB
{
  unsigned __int16 MinorVersion;
  unsigned __int16 MajorVersion;
  unsigned int CurrentThread;
  unsigned int NextThread;
  unsigned int IdleThread;
  char Number;
  char Reserved;
  unsigned __int16 BuildType;
  unsigned int SetMember;
  char CpuType;
  char CpuID;
  unsigned __int16 CpuStep;
  _X86_KPROCESSOR_STATE ProcessorState;
};

/* 1699 */
struct _X86_LDT_ENTRY
{
  unsigned __int16 LimitLow;
  unsigned __int16 BaseLow;
  $FD960E9338373C28903161EF2E75E310 HighWord;
};

/* 1700 */
struct _DBGKD_SET_INTERNAL_BREAKPOINT32
{
  unsigned int BreakpointAddress;
  unsigned int Flags;
};

/* 1701 */
struct _DBGKD_GET_VERSION32
{
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned __int16 ProtocolVersion;
  unsigned __int16 Flags;
  unsigned int KernBase;
  unsigned int PsLoadedModuleList;
  unsigned __int16 MachineType;
  unsigned __int16 ThCallbackStack;
  unsigned __int16 NextCallback;
  unsigned __int16 FramePointer;
  unsigned int KiCallUserMode;
  unsigned int KeUserCallbackDispatcher;
  unsigned int BreakpointWithStatus;
  unsigned int DebuggerDataList;
};

/* 1702 */
struct __declspec(align(8)) _DBGKD_WAIT_STATE_CHANGE64_X86_NT5
{
  unsigned int NewState;
  unsigned __int16 ProcessorLevel;
  unsigned __int16 Processor;
  unsigned int NumberProcessors;
  unsigned __int64 Thread;
  unsigned __int64 ProgramCounter;
  $55F9B6453B044C1B24060FAC61EDF16A u;
  _DBGKD_CONTROL_REPORT ControlReport;
  _X86_NT5_CONTEXT Context;
};

/* 1703 */
struct _DBGKD_WRITE_MEMORY32
{
  unsigned int TargetBaseAddress;
  unsigned int TransferCount;
  unsigned int ActualBytesWritten;
};

/* 1704 */
struct __declspec(align(8)) _IOSPACE_EX64
{
  unsigned __int64 Address;
  unsigned int Length;
  unsigned int Data;
  unsigned int InterfaceType;
  unsigned int BusNumber;
  unsigned int AddressSpace;
};

/* 1705 */
union $01BF8606E0F85E4A5CF31DF8A6424FD0
{
  _DBGKM_EXCEPTION Exception;
  _DBGKM_CREATE_THREAD CreateThread;
  _DBGKM_CREATE_PROCESS CreateProcessInfo;
  _DBGKM_EXIT_THREAD ExitThread;
  _DBGKM_EXIT_PROCESS ExitProcess;
  _DBGKM_LOAD_DLL LoadDll;
  _DBGKM_UNLOAD_DLL UnloadDll;
};

/* 1706 */
struct __declspec(align(8)) _DBGKM_APIMSG
{
  _PORT_MESSAGE h;
  _DBGKM_APINUMBER ApiNumber;
  int ReturnedStatus;
  $01BF8606E0F85E4A5CF31DF8A6424FD0 u;
};

/* 1707 */
struct __declspec(align(4)) _PHYSICAL
{
  unsigned __int64 Address;
  unsigned int BufLen;
  unsigned __int8 Buf[1];
};

/* 1708 */
struct _EXTSTACKTRACE32
{
  unsigned int FramePointer;
  unsigned int ProgramCounter;
  unsigned int ReturnAddress;
  unsigned int Args[4];
};

/* 1709 */
struct _WINDBG_EXTENSION_APIS32
{
  unsigned int nSize;
  void (*lpOutputRoutine)(const char *, ...);
  unsigned int (__stdcall *lpGetExpressionRoutine)(const char *);
  void (__stdcall *lpGetSymbolRoutine)(unsigned int, unsigned __int8 *, unsigned int *);
  unsigned int (__stdcall *lpDisasmRoutine)(unsigned int *, const char *, unsigned int);
  unsigned int (__stdcall *lpCheckControlCRoutine)();
  unsigned int (__stdcall *lpReadProcessMemoryRoutine)(unsigned int, void *, unsigned int, unsigned int *);
  unsigned int (__stdcall *lpWriteProcessMemoryRoutine)(unsigned int, const void *, unsigned int, unsigned int *);
  unsigned int (__stdcall *lpGetThreadContextRoutine)(unsigned int, _CONTEXT *, unsigned int);
  unsigned int (__stdcall *lpSetThreadContextRoutine)(unsigned int, _CONTEXT *, unsigned int);
  unsigned int (__stdcall *lpIoctlRoutine)(unsigned __int16, void *, unsigned int);
  unsigned int (__stdcall *lpStackTraceRoutine)(unsigned int, unsigned int, unsigned int, _EXTSTACKTRACE32 *, unsigned int);
};

/* 1710 */
struct _X86_NT5_KPROCESSOR_STATE
{
  _X86_NT5_CONTEXT ContextFrame;
  _X86_KSPECIAL_REGISTERS SpecialRegisters;
};

/* 1711 */
struct _IA64_KPROCESSOR_STATE
{
  _IA64_CONTEXT ContextFrame;
};

/* 1712 */
struct _IA64_PARTIAL_KPRCB
{
  unsigned __int16 MinorVersion;
  unsigned __int16 MajorVersion;
  unsigned __int64 CurrentThread;
  unsigned __int64 NextThread;
  unsigned __int64 IdleThread;
  char Number;
  char Reserved;
  unsigned __int16 BuildType;
  unsigned int SetMember;
  unsigned __int64 RestartBlock;
  unsigned __int64 PcrPage;
  unsigned int Spares1[4];
  unsigned __int64 SystemReserved[8];
  unsigned __int64 HalReserved[16];
  unsigned int DpcTime;
  unsigned int InterruptTime;
  unsigned int KernelTime;
  unsigned int UserTime;
  unsigned int InterruptCount;
  unsigned int DispatchInterruptCount;
  unsigned int ApcBypassCount;
  unsigned int DpcBypassCount;
  unsigned int Spare0[4];
  unsigned __int64 Spare1;
  unsigned __int64 Spare2;
  unsigned __int64 Spare3;
  volatile unsigned int IpiFrozen;
  _IA64_KPROCESSOR_STATE ProcessorState;
};

/* 1713 */
struct _READ_WRITE_MSR
{
  unsigned int Msr;
  __int64 Value;
};

/* 1714 */
struct _DBGUI_CREATE_THREAD
{
  void *HandleToThread;
  _DBGKM_CREATE_THREAD NewThread;
};

/* 1715 */
struct _DBGUI_CREATE_PROCESS
{
  void *HandleToProcess;
  void *HandleToThread;
  _DBGKM_CREATE_PROCESS NewProcess;
};

/* 1716 */
union $9887D7B6F33602DDA696914AF5A843E2
{
  _DBGKM_EXCEPTION Exception;
  _DBGUI_CREATE_THREAD CreateThread;
  _DBGUI_CREATE_PROCESS CreateProcessInfo;
  _DBGKM_EXIT_THREAD ExitThread;
  _DBGKM_EXIT_PROCESS ExitProcess;
  _DBGKM_LOAD_DLL LoadDll;
  _DBGKM_UNLOAD_DLL UnloadDll;
};

/* 1717 */
struct _DBGUI_WAIT_STATE_CHANGE
{
  _DBG_STATE NewState;
  _CLIENT_ID AppClientId;
  $9887D7B6F33602DDA696914AF5A843E2 StateInfo;
};

/* 1718 */
union $31FEB39016EE125A54E870591CB10FD9
{
  _DBGUI_CONTINUE Continue;
  _DBGUI_WAIT_STATE_CHANGE WaitStateChange;
};

/* 1719 */
union $97AC986C954AD8412DF579CBB13F439E
{
  void *DbgStateChangeSemaphore;
  _DBGKM_APINUMBER ApiNumber;
};

/* 1720 */
struct _DBGUI_APIMSG
{
  _PORT_MESSAGE h;
  $97AC986C954AD8412DF579CBB13F439E ___u1;
  int ReturnedStatus;
  $31FEB39016EE125A54E870591CB10FD9 u;
};

/* 1721 */
struct _DBGKD_GET_INTERNAL_BREAKPOINT32
{
  unsigned int BreakpointAddress;
  unsigned int Flags;
  unsigned int Calls;
  unsigned int MaxCallsPerPeriod;
  unsigned int MinInstructions;
  unsigned int MaxInstructions;
  unsigned int TotalInstructions;
};

/* 1722 */
struct _GETSETBUSDATA
{
  unsigned int BusDataType;
  unsigned int BusNumber;
  unsigned int SlotNumber;
  void *Buffer;
  unsigned int Offset;
  unsigned int Length;
};

/* 1723 */
struct __declspec(align(4)) _READCONTROLSPACE
{
  unsigned __int16 Processor;
  unsigned int Address;
  unsigned int BufLen;
  unsigned __int8 Buf[1];
};

/* 1724 */
struct __declspec(align(8)) _DBGSRV_APIMSG
{
  _PORT_MESSAGE h;
  _DBGSRV_APINUMBER ApiNumber;
  int ReturnedStatus;
  void *ContinueKey;
};

/* 1725 */
struct __declspec(align(8)) _FIELD_INFO
{
  unsigned __int8 *fName;
  unsigned __int8 *printName;
  unsigned int size;
  unsigned int fOptions;
  unsigned __int64 address;
  void *fieldCallBack;
};

/* 1726 */
struct __declspec(align(8)) _SYM_DUMP_PARAM
{
  unsigned int size;
  unsigned __int8 *sName;
  unsigned int Options;
  unsigned __int64 addr;
  _FIELD_INFO *listLink;
  void *Context;
  unsigned int (__stdcall *CallbackRoutine)(_FIELD_INFO *, void *);
  unsigned int nFields;
  _FIELD_INFO *Fields;
};

/* 1727 */
struct _DBGKD_READ_MEMORY32
{
  unsigned int TargetBaseAddress;
  unsigned int TransferCount;
  unsigned int ActualBytesRead;
};

/* 1728 */
union $381FFF22118F06CD0C3B483C8794B08F
{
  _DBGKD_READ_MEMORY32 ReadMemory;
  _DBGKD_WRITE_MEMORY32 WriteMemory;
  _DBGKD_READ_MEMORY64 ReadMemory64;
  _DBGKD_WRITE_MEMORY64 WriteMemory64;
  _DBGKD_GET_CONTEXT GetContext;
  _DBGKD_SET_CONTEXT SetContext;
  _DBGKD_WRITE_BREAKPOINT32 WriteBreakPoint;
  _DBGKD_RESTORE_BREAKPOINT RestoreBreakPoint;
  _DBGKD_CONTINUE Continue;
  _DBGKD_CONTINUE2 Continue2;
  _DBGKD_READ_WRITE_IO32 ReadWriteIo;
  _DBGKD_READ_WRITE_IO_EXTENDED32 ReadWriteIoExtended;
  _DBGKD_QUERY_SPECIAL_CALLS QuerySpecialCalls;
  _DBGKD_SET_SPECIAL_CALL32 SetSpecialCall;
  _DBGKD_SET_INTERNAL_BREAKPOINT32 SetInternalBreakpoint;
  _DBGKD_GET_INTERNAL_BREAKPOINT32 GetInternalBreakpoint;
  _DBGKD_GET_VERSION32 GetVersion32;
  _DBGKD_BREAKPOINTEX BreakPointEx;
  _DBGKD_READ_WRITE_MSR ReadWriteMsr;
  _DBGKD_SEARCH_MEMORY SearchMemory;
};

/* 1729 */
struct __unaligned __declspec(align(4)) _DBGKD_MANIPULATE_STATE32
{
  unsigned int ApiNumber;
  unsigned __int16 ProcessorLevel;
  unsigned __int16 Processor;
  int ReturnStatus;
  $381FFF22118F06CD0C3B483C8794B08F u;
};

/* 1730 */
struct _GET_CURRENT_THREAD_ADDRESS
{
  unsigned int Processor;
  unsigned __int64 Address;
};

/* 1731 */
struct _PROCESSORINFO
{
  unsigned __int16 Processor;
  unsigned __int16 NumberProcessors;
};

/* 1732 */
struct _DBGKD_DEBUG_DATA_HEADER32
{
  LIST_ENTRY32 List;
  unsigned int OwnerTag;
  unsigned int Size;
};

/* 1733 */
struct DBGKD_INTERNAL_BREAKPOINT
{
  unsigned __int64 Addr;
  unsigned int Flags;
  unsigned int Calls;
  unsigned int CallsLastCheck;
  unsigned int MaxCallsPerPeriod;
  unsigned int MinInstructions;
  unsigned int MaxInstructions;
  unsigned int TotalInstructions;
  unsigned int Handle;
  void *Thread;
  unsigned __int64 ReturnAddress;
};

/* 1734 */
struct _KDDEBUGGER_DATA32
{
  _DBGKD_DEBUG_DATA_HEADER32 Header;
  unsigned int KernBase;
  unsigned int BreakpointWithStatus;
  unsigned int SavedContext;
  unsigned __int16 ThCallbackStack;
  unsigned __int16 NextCallback;
  unsigned __int16 FramePointer;
  unsigned __int16 PaeEnabled : 1;
  unsigned int KiCallUserMode;
  unsigned int KeUserCallbackDispatcher;
  unsigned int PsLoadedModuleList;
  unsigned int PsActiveProcessHead;
  unsigned int PspCidTable;
  unsigned int ExpSystemResourcesList;
  unsigned int ExpPagedPoolDescriptor;
  unsigned int ExpNumberOfPagedPools;
  unsigned int KeTimeIncrement;
  unsigned int KeBugCheckCallbackListHead;
  unsigned int KiBugcheckData;
  unsigned int IopErrorLogListHead;
  unsigned int ObpRootDirectoryObject;
  unsigned int ObpTypeObjectType;
  unsigned int KeSystemTime;
  unsigned int KeInterruptTime;
  unsigned int KiTimerTableListHead;
  unsigned int MmPfnDatabase;
  unsigned int MmSystemPtesStart;
  unsigned int MmSystemPtesEnd;
  unsigned int MmSubsectionBase;
  unsigned int MmNumberOfPagingFiles;
  unsigned int MmLowestPhysicalPage;
  unsigned int MmHighestPhysicalPage;
  unsigned int MmNumberOfPhysicalPages;
  unsigned int MmMaximumNonPagedPoolInBytes;
  unsigned int MmNonPagedSystemStart;
  unsigned int MmNonPagedPoolStart;
  unsigned int MmNonPagedPoolEnd;
  unsigned int MmPagedPoolStart;
  unsigned int MmPagedPoolEnd;
  unsigned int MmPagedPoolInformation;
  unsigned int MmPageSize;
  unsigned int MmSizeOfPagedPoolInBytes;
  unsigned int MmAllocatedPagesByUsage;
  unsigned int ObpObjectHandleTable;
  unsigned int MmVadRoot;
  unsigned int FscLruList;
  unsigned int FscNumberOfCachePages;
  unsigned int FscElementArray;
  unsigned int MmExtendedCommit;
  unsigned int MmZeroedPageListHead;
  unsigned int MmFreePageListHead;
  unsigned int MmStandbyPageListHead;
  unsigned int MmModifiedPageListHead;
  unsigned int MmModifiedNoWritePageListHead;
  unsigned int MmAvailablePages;
  unsigned int PoolTrackTableSize;
  unsigned int PoolTrackTable;
  unsigned int NonPagedPoolDescriptor;
  unsigned int MmHighestUserAddress;
  unsigned int MmSystemRangeStart;
  unsigned int MmUserProbeAddress;
  unsigned int KdPrintCircularBuffer;
  unsigned int KdPrintCircularBufferEnd;
  unsigned int KdPrintWritePointer;
  unsigned int KdPrintRolloverCount;
  unsigned int MmLoadedUserImageList;
};

/* 1735 */
struct _AXP64_PARTIAL_KPRCB
{
  unsigned __int16 MinorVersion;
  unsigned __int16 MajorVersion;
  unsigned __int64 CurrentThread;
};

/* 1736 */
struct _WINDBG_OLD_EXTENSION_APIS
{
  unsigned int nSize;
  void (*lpOutputRoutine)(const char *, ...);
  unsigned int (__stdcall *lpGetExpressionRoutine)(const char *);
  void (__stdcall *lpGetSymbolRoutine)(void *, unsigned __int8 *, unsigned int *);
  unsigned int (__stdcall *lpDisasmRoutine)(unsigned int *, const char *, unsigned int);
  unsigned int (__stdcall *lpCheckControlCRoutine)();
};

/* 1737 */
struct _IOSPACE64
{
  unsigned __int64 Address;
  unsigned int Length;
  unsigned int Data;
};

/* 1738 */
struct _X86_DESCRIPTOR_TABLE_ENTRY
{
  unsigned int Selector;
  _X86_LDT_ENTRY Descriptor;
};

/* 1739 */
struct _X86_KPCR
{
  _NT_TIB NtTib;
  unsigned int SelfPcr;
  unsigned int Prcb;
  unsigned __int8 Irql;
  unsigned int IRR;
  unsigned int IrrActive;
  unsigned int IDR;
  unsigned int Reserved2;
  unsigned int IDT;
  unsigned int GDT;
  unsigned int TSS;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int SetMember;
  unsigned int StallScaleFactor;
  unsigned __int8 DebugActive;
  unsigned __int8 Number;
  unsigned __int8 VdmAlert;
  unsigned __int8 Reserved[1];
  unsigned int KernelReserved[15];
  unsigned int SecondLevelCacheSize;
  unsigned int HalReserved[16];
  unsigned int InterruptMode;
  unsigned __int8 Spare1;
  unsigned int KernelReserved2[17];
  _X86_PARTIAL_KPRCB PrcbData;
};

/* 1740 */
struct _KDDEBUGGER_DATA64
{
  _DBGKD_DEBUG_DATA_HEADER64 Header;
  unsigned __int64 KernBase;
  unsigned __int64 BreakpointWithStatus;
  unsigned __int64 SavedContext;
  unsigned __int16 ThCallbackStack;
  unsigned __int16 NextCallback;
  unsigned __int16 FramePointer;
  unsigned __int16 PaeEnabled : 1;
  unsigned __int64 KiCallUserMode;
  unsigned __int64 KeUserCallbackDispatcher;
  unsigned __int64 PsLoadedModuleList;
  unsigned __int64 PsActiveProcessHead;
  unsigned __int64 PspCidTable;
  unsigned __int64 ExpSystemResourcesList;
  unsigned __int64 ExpPagedPoolDescriptor;
  unsigned __int64 ExpNumberOfPagedPools;
  unsigned __int64 KeTimeIncrement;
  unsigned __int64 KeBugCheckCallbackListHead;
  unsigned __int64 KiBugcheckData;
  unsigned __int64 IopErrorLogListHead;
  unsigned __int64 ObpRootDirectoryObject;
  unsigned __int64 ObpTypeObjectType;
  unsigned __int64 KeSystemTime;
  unsigned __int64 KeInterruptTime;
  unsigned __int64 KiTimerTableListHead;
  unsigned __int64 MmPfnDatabase;
  unsigned __int64 MmSystemPtesStart;
  unsigned __int64 MmSystemPtesEnd;
  unsigned __int64 MmSubsectionBase;
  unsigned __int64 MmNumberOfPagingFiles;
  unsigned __int64 MmLowestPhysicalPage;
  unsigned __int64 MmHighestPhysicalPage;
  unsigned __int64 MmNumberOfPhysicalPages;
  unsigned __int64 MmMaximumNonPagedPoolInBytes;
  unsigned __int64 MmNonPagedSystemStart;
  unsigned __int64 MmNonPagedPoolStart;
  unsigned __int64 MmNonPagedPoolEnd;
  unsigned __int64 MmPagedPoolStart;
  unsigned __int64 MmPagedPoolEnd;
  unsigned __int64 MmPagedPoolInformation;
  unsigned __int64 MmPageSize;
  unsigned __int64 MmSizeOfPagedPoolInBytes;
  unsigned __int64 MmAllocatedPagesByUsage;
  unsigned __int64 ObpObjectHandleTable;
  unsigned __int64 MmVadRoot;
  unsigned __int64 FscLruList;
  unsigned __int64 FscNumberOfCachePages;
  unsigned __int64 FscElementArray;
  unsigned __int64 MmExtendedCommit;
  unsigned __int64 MmZeroedPageListHead;
  unsigned __int64 MmFreePageListHead;
  unsigned __int64 MmStandbyPageListHead;
  unsigned __int64 MmModifiedPageListHead;
  unsigned __int64 MmModifiedNoWritePageListHead;
  unsigned __int64 MmAvailablePages;
  unsigned __int64 PoolTrackTableSize;
  unsigned __int64 PoolTrackTable;
  unsigned __int64 NonPagedPoolDescriptor;
  unsigned __int64 MmHighestUserAddress;
  unsigned __int64 MmSystemRangeStart;
  unsigned __int64 MmUserProbeAddress;
  unsigned __int64 KdPrintCircularBuffer;
  unsigned __int64 KdPrintCircularBufferEnd;
  unsigned __int64 KdPrintWritePointer;
  unsigned __int64 KdPrintRolloverCount;
  unsigned __int64 MmLoadedUserImageList;
};

/* 1741 */
struct _ALPHA_NT5_KPROCESSOR_STATE
{
  _ALPHA_NT5_CONTEXT ContextFrame;
};

/* 1742 */
struct _ALPHA_KEXCEPTION_FRAME
{
  unsigned __int64 IntRa;
  unsigned __int64 FltF2;
  unsigned __int64 FltF3;
  unsigned __int64 FltF4;
  unsigned __int64 FltF5;
  unsigned __int64 FltF6;
  unsigned __int64 FltF7;
  unsigned __int64 FltF8;
  unsigned __int64 FltF9;
  unsigned __int64 IntS0;
  unsigned __int64 IntS1;
  unsigned __int64 IntS2;
  unsigned __int64 IntS3;
  unsigned __int64 IntS4;
  unsigned __int64 IntS5;
  unsigned __int64 IntFp;
  unsigned __int64 SwapReturn;
  unsigned int Psr;
  unsigned int Fill[5];
};

/* 1743 */
struct _KD_PACKET
{
  unsigned int PacketLeader;
  unsigned __int16 PacketType;
  unsigned __int16 ByteCount;
  unsigned int PacketId;
  unsigned int Checksum;
};

/* 1744 */
struct _WINDBG_OLDKD_EXTENSION_APIS
{
  unsigned int nSize;
  void (*lpOutputRoutine)(const char *, ...);
  unsigned int (__stdcall *lpGetExpressionRoutine)(const char *);
  void (__stdcall *lpGetSymbolRoutine)(unsigned int, unsigned __int8 *, unsigned int *);
  unsigned int (__stdcall *lpDisasmRoutine)(unsigned int *, const char *, unsigned int);
  unsigned int (__stdcall *lpCheckControlCRoutine)();
  unsigned int (__stdcall *lpReadVirtualMemRoutine)(unsigned int, void *, unsigned int, unsigned int *);
  unsigned int (__stdcall *lpWriteVirtualMemRoutine)(unsigned int, const void *, unsigned int, unsigned int *);
  unsigned int (__stdcall *lpReadPhysicalMemRoutine)(unsigned __int64, void *, unsigned int, unsigned int *);
  unsigned int (__stdcall *lpWritePhysicalMemRoutine)(unsigned __int64, void *, unsigned int, unsigned int *);
};

/* 1745 */
struct _WINDBG_EXTENSION_APIS64
{
  unsigned int nSize;
  void (*lpOutputRoutine)(const char *, ...);
  unsigned __int64 (__stdcall *lpGetExpressionRoutine)(const char *);
  void (__stdcall *lpGetSymbolRoutine)(unsigned __int64, unsigned __int8 *, unsigned __int64 *);
  unsigned int (__stdcall *lpDisasmRoutine)(unsigned __int64 *, const char *, unsigned int);
  unsigned int (__stdcall *lpCheckControlCRoutine)();
  unsigned int (__stdcall *lpReadProcessMemoryRoutine)(unsigned __int64, void *, unsigned int, unsigned int *);
  unsigned int (__stdcall *lpWriteProcessMemoryRoutine)(unsigned __int64, const void *, unsigned int, unsigned int *);
  unsigned int (__stdcall *lpGetThreadContextRoutine)(unsigned int, _CONTEXT *, unsigned int);
  unsigned int (__stdcall *lpSetThreadContextRoutine)(unsigned int, _CONTEXT *, unsigned int);
  unsigned int (__stdcall *lpIoctlRoutine)(unsigned __int16, void *, unsigned int);
  unsigned int (__stdcall *lpStackTraceRoutine)(unsigned __int64, unsigned __int64, unsigned __int64, _EXTSTACKTRACE64 *, unsigned int);
};

/* 1746 */
struct _GET_TEB_ADDRESS
{
  unsigned __int64 Address;
};

/* 1747 */
struct _IOSPACE32
{
  unsigned int Address;
  unsigned int Length;
  unsigned int Data;
};

/* 1748 */
struct _IOSPACE_EX
{
  unsigned int Address;
  unsigned int Length;
  unsigned int Data;
  unsigned int InterfaceType;
  unsigned int BusNumber;
  unsigned int AddressSpace;
};

/* 1749 */
struct _IOSPACE_EX32
{
  unsigned int Address;
  unsigned int Length;
  unsigned int Data;
  unsigned int InterfaceType;
  unsigned int BusNumber;
  unsigned int AddressSpace;
};

/* 1750 */
struct _ALPHA_PARTIAL_KPRCB
{
  unsigned __int16 MinorVersion;
  unsigned __int16 MajorVersion;
  unsigned int CurrentThread;
  unsigned int NextThread;
  unsigned int IdleThread;
  char Number;
  char Reserved;
  unsigned __int16 BuildType;
  unsigned int SetMember;
  char CpuType;
  char CpuID;
  unsigned __int16 CpuStep;
  _ALPHA_NT5_KPROCESSOR_STATE ProcessorState;
};

/* 1751 */
struct _IOP_MINI_COMPLETION_PACKET
{
  _LIST_ENTRY ListEntry;
  $A4961D03CF1FE4E4DEC5DD5678FDF74E ___u1;
  void *KeyContext;
  void *ApcContext;
  int IoStatus;
  unsigned int IoStatusInformation;
};

/* 1752 */
struct _DUMMY_FILE_OBJECT
{
  _OBJECT_HEADER ObjectHeader;
  char FileObjectBody[72];
};

/* 1753 */
struct __declspec(align(4)) _OPEN_PACKET
{
  __int16 Type;
  __int16 Size;
  _FILE_OBJECT *FileObject;
  int FinalStatus;
  unsigned int Information;
  unsigned int ParseCheck;
  _FILE_OBJECT *RelatedFileObject;
  _LARGE_INTEGER AllocationSize;
  unsigned int CreateOptions;
  unsigned __int16 FileAttributes;
  unsigned __int16 ShareAccess;
  unsigned int Options;
  unsigned int Disposition;
  unsigned int DesiredAccess;
  _FILE_NETWORK_OPEN_INFORMATION *NetworkInformation;
  _DUMMY_FILE_OBJECT *LocalFileObject;
  unsigned __int8 QueryOnly;
  unsigned __int8 DeleteOnly;
};

/* 1754 */
struct __declspec(align(8)) _ETIMER
{
  _KTIMER KeTimer;
  _KAPC TimerApc;
  _KDPC TimerDpc;
  _LIST_ENTRY ActiveTimerListEntry;
  int Period;
  unsigned __int8 ApcAssociated;
};

/* 1755 */
struct _SETTING_ENTRY_INFO
{
  unsigned __int8 Type;
  unsigned __int8 Index;
  unsigned __int8 Size;
  unsigned __int8 Offset;
};

/* 1756 */
struct _SMBUS_STATUS_BLOCK
{
  int Status;
  unsigned int DataValue;
  _KEVENT CompletionEvent;
};

/* 1757 */
struct XProfpGlobals
{
  unsigned int *bufnext;
  unsigned int *bufend;
  unsigned int *bufnext_stopped;
  unsigned int *bufstart;
  unsigned int start_type;
  unsigned int start_param;
  int lock;
  int reserved;
};

/* 1758 */
struct _DMGD
{
  volatile unsigned int *FrameCounter;
  unsigned int *volatile FlipCounter;
  D3DSurface *Surface;
  void **RegisterBase;
  void *PerfCounters;
  unsigned int *volatile pdwOpcode;
  unsigned __int8 **ppSnapshotBuffer;
  void *D3DInternalsFunction;
  unsigned int DMGDVersion;
};

/* 1759 */
struct _DMXAPI
{
  unsigned __int8 XapiStarted;
  unsigned int LastErrorTlsOff;
  unsigned int CurrentFiberTlsOff;
};

/* 1760 */
struct $C0E193A0BC7A2109A93766CAB09DBAE1
{
  unsigned __int32 BlockCount : 7;
  unsigned __int32 LBA : 24;
  unsigned __int32 InProgress : 1;
};

/* 1761 */
union $CE496CA7528AABBC018E1D3E230F785F
{
  $C0E193A0BC7A2109A93766CAB09DBAE1 __s0;
  unsigned int Parameters;
};

/* 1762 */
struct _DMDVD
{
  _ULARGE_INTEGER Timestamp;
  $CE496CA7528AABBC018E1D3E230F785F ___u1;
  unsigned int ResponseTime;
};

/* 1763 */
struct _DMINIT
{
  unsigned __int8 (__stdcall **DebugRoutine)(_KTRAP_FRAME *, _KTRAP_FRAME *, _EXCEPTION_RECORD *, _CONTEXT *, unsigned __int8);
  _LIST_ENTRY *LoadedModuleList;
  unsigned int Flags;
  void **ClockIntRoutine;
  void **ProfIntRoutine;
  unsigned int (__stdcall *TellRoutine)(unsigned int, void *);
  void **CtxSwapNotifyRoutine;
  void *XProfpDataPtr;
  _DMGD *D3DDriverData;
  _DMXAPI *XapiData;
  unsigned __int8 *DisallowXbdm;
  void (__stdcall *HalStartProfileRoutine)(unsigned int);
  void (__stdcall *HalStopProfileRoutine)(unsigned int);
  void (__stdcall *HalProfileIntervalRoutine)(unsigned int);
  void **DpcDispatchNotifyRoutine;
  _DMDVD *NextDVDSample;
};

/* 1764 */
struct _DMREGISTERPERFCOUNTERPARAMBLOCK
{
  const char *szName;
  unsigned int dwType;
  void *pvArg;
};

/* 1765 */
struct TheVerts
{
  float x;
  float y;
  float z;
  float w;
  float u;
  float v;
};

/* 1766 */
struct _IMAGE_RUN1
{
  unsigned __int32 fOne : 1;
  unsigned __int32 Size : 3;
  unsigned __int32 Intensity : 4;
};

/* 1767 */
struct _IMAGE_RUN2
{
  unsigned __int32 fOne : 1;
  unsigned __int32 fTwo : 1;
  unsigned __int32 Size : 10;
  unsigned __int32 Intensity : 4;
};

/* 1768 */
struct _IMAGE_RUN3
{
  unsigned __int32 fOne : 1;
  unsigned __int32 fTwo : 1;
  unsigned __int32 Size : 18;
  unsigned __int32 Intensity : 4;
};

/* 1769 */
struct __declspec(align(4)) _CPPORT
{
  unsigned __int8 *Address;
  unsigned int Baud;
  unsigned __int16 Flags;
  _TIME_FIELDS CarrierLostTime;
};

/* 1770 */
struct $67E5F20A35E6B9DD304D3F37B9233706
{
  unsigned __int32 FunctionAddress : 7;
  unsigned __int32 EndpointAddress : 4;
  unsigned __int32 Direction : 2;
  unsigned __int32 Speed : 1;
  unsigned __int32 Skip : 1;
  unsigned __int32 Format : 1;
  unsigned __int32 MaximumPacketSize : 11;
  unsigned __int32 FutureSoftwareUse : 5;
};

/* 1771 */
union _OHCI_ENDPOINT_CONTROL
{
  unsigned int ul;
  $67E5F20A35E6B9DD304D3F37B9233706 __s1;
};

/* 1772 */
struct _OHCI_ENDPOINT_DESCRIPTOR
{
  _OHCI_ENDPOINT_CONTROL Control;
  unsigned int TailP;
  unsigned int HeadPHaltCarry;
  unsigned int NextED;
};

/* 1773 */
struct _OHCD_ENDPOINT
{
  _OHCI_ENDPOINT_DESCRIPTOR HcEndpointDescriptor;
  unsigned __int8 Flags;
  unsigned __int8 EndpointType;
  unsigned __int8 ScheduleIndex;
  unsigned __int8 PollingInterval;
  unsigned int PhysicalAddress;
  _OHCD_ENDPOINT *Next;
  unsigned int PauseFrame;
  unsigned __int8 PendingPauseCount;
  unsigned __int8 Padding;
  unsigned __int16 Bandwidth;
  unsigned __int16 TDInUseCount;
  unsigned __int8 QueuedUrbCount;
  unsigned __int8 ProgrammedUrbCount;
  void *PendingUrbHeadP;
  void *PendingUrbTailP;
};

/* 1774 */
struct _OHCI_HCCA
{
  unsigned int InterruptTable[32];
  unsigned __int16 FrameNumber;
  unsigned __int16 Pad1;
  unsigned int DoneHead;
  unsigned __int8 Reserved[120];
};

/* 1775 */
struct $E2A29A09D3C63EA0A686564B9EDBBF48
{
  unsigned __int32 ControlBulkServiceRatio : 2;
  unsigned __int32 PeriodicListEnable : 1;
  unsigned __int32 IsochronousEnable : 1;
  unsigned __int32 ControlListEnable : 1;
  unsigned __int32 BulkListEnable : 1;
  unsigned __int32 HostControllerFunctionalState : 2;
  unsigned __int32 InterruptRouting : 1;
  unsigned __int32 RemoteWakeupConnected : 1;
  unsigned __int32 RemoteWakeupEnabled : 1;
  unsigned __int32 Reserved : 21;
};

/* 1776 */
union _HC_CONTROL_REGISTER
{
  unsigned int ul;
  $E2A29A09D3C63EA0A686564B9EDBBF48 __s1;
};

/* 1777 */
struct $EC9750A5879E743505B6CD1DED80F5E9
{
  unsigned __int32 HostControllerReset : 1;
  unsigned __int32 ControlListFilled : 1;
  unsigned __int32 BulkListFilled : 1;
  unsigned __int32 OwnerShipChangeRequest : 1;
  unsigned __int32 Reserved : 12;
  unsigned __int32 SchedulingOverrunCount : 2;
  unsigned __int32 Reserved2 : 14;
};

/* 1778 */
union _HC_COMMAND_STATUS
{
  unsigned int ul;
  $EC9750A5879E743505B6CD1DED80F5E9 __s1;
};

/* 1779 */
struct $D1C14619B81D4C91205002C94EACBEA0
{
  unsigned __int32 FrameInterval : 14;
  unsigned __int32 Reserved : 2;
  unsigned __int32 FullSpeedMaximumPacketSize : 15;
  unsigned __int32 FrameIntervalToggle : 1;
};

/* 1780 */
union _HC_FRAME_INTERVAL
{
  unsigned int ul;
  $D1C14619B81D4C91205002C94EACBEA0 __s1;
};

/* 1781 */
struct $84F6B70093ACA564E41C136DC20E7C5B
{
  unsigned __int8 NumberDownstreamPorts;
  unsigned __int8 PowerSwitchingMode : 1;
  unsigned __int8 NoPowerSwitch : 1;
  unsigned __int8 DeviceType : 1;
  unsigned __int8 OverCurrentProtectionMode : 1;
  unsigned __int8 NoOverCurrentProtection : 1;
  unsigned __int8 ReservedBits : 3;
  unsigned __int8 Reserved;
  unsigned __int8 PowerOnToPowerGoodTime;
};

/* 1782 */
union _HC_RH_DESCRIPTOR_A
{
  unsigned int ul;
  $84F6B70093ACA564E41C136DC20E7C5B __s1;
};

/* 1783 */
struct $35D5C6B45D706A7AA0A4EBF9D2061BB8
{
  unsigned __int16 DeviceRemovable;
  unsigned __int16 PortPowerControlMask;
};

/* 1784 */
union _HC_RH_DESCRIPTOR_B
{
  unsigned int ul;
  $35D5C6B45D706A7AA0A4EBF9D2061BB8 __s1;
};

/* 1785 */
struct $9E89DDEA946A691FC9DB67A86A5DC63F
{
  unsigned __int16 HubStatus;
  unsigned __int16 HubStatusChange;
};

/* 1786 */
union _HC_RH_STATUS
{
  unsigned int ul;
  $9E89DDEA946A691FC9DB67A86A5DC63F __s1;
};

/* 1787 */
struct $C045B4DA275D44A182A6A32B64361261
{
  unsigned __int16 PortStatus;
  unsigned __int16 PortStatusChange;
};

/* 1788 */
union _HC_RH_PORT_STATUS
{
  unsigned int ul;
  $C045B4DA275D44A182A6A32B64361261 __s1;
};

/* 1789 */
struct _OHCI_OPERATIONAL_REGISTERS
{
  unsigned int HcRevision;
  _HC_CONTROL_REGISTER HcControl;
  _HC_COMMAND_STATUS HcCommandStatus;
  unsigned int HcInterruptStatus;
  unsigned int HcInterruptEnable;
  unsigned int HcInterruptDisable;
  unsigned int HcHCCA;
  unsigned int HcPeriodCurrentED;
  unsigned int HcControlHeadED;
  unsigned int HcControlCurrentED;
  unsigned int HcBulkHeadED;
  unsigned int HcBulkCurrentED;
  unsigned int HcDoneHead;
  _HC_FRAME_INTERVAL HcFmInterval;
  unsigned int HcFmRemaining;
  unsigned int HcFmNumber;
  unsigned int HcPeriodicStart;
  unsigned int HcLSThreshold;
  _HC_RH_DESCRIPTOR_A HcRhDescriptorA;
  _HC_RH_DESCRIPTOR_B HcRhDescriptorB;
  _HC_RH_STATUS HcRhStatus;
  _HC_RH_PORT_STATUS HcRhPortStatus[1];
};

/* 1790 */
struct _OHCD_INTERRUPT_SCHEDULE_NODE
{
  unsigned __int8 RegisterHead;
  unsigned __int8 Pad;
  unsigned __int16 Bandwidth;
  unsigned __int16 BandwidthChildren;
  unsigned __int16 BandwidthParents;
  _OHCD_ENDPOINT *EndpointHead;
  _OHCD_ENDPOINT *EndpointTail;
};

/* 1791 */
struct _OHCD_ENDPOINT_SCHEDULE
{
  _OHCD_INTERRUPT_SCHEDULE_NODE InterruptSchedule[64];
  _OHCD_ENDPOINT *ControlHead;
  _OHCD_ENDPOINT *BulkHead;
  unsigned __int16 BandwidthPeriodic;
  unsigned __int16 BandwidthTotal;
};

/* 1792 */
struct _OHCD_DEVICE_EXTENSION
{
  _OHCI_OPERATIONAL_REGISTERS *OperationalRegisters;
  unsigned int OperationalRegistersLength;
  _OHCI_HCCA *HCCA;
  _OHCD_ENDPOINT_SCHEDULE Schedule;
};

/* 1793 */
struct _CONTROL_WORD
{
  unsigned __int16 ControlWord;
  unsigned int MXCsr;
};

/* 1794 */
union $F15A299A0220C433C3BB5ED1265031B1
{
  _CONTROL_WORD Fcw;
  _FX_SAVE_AREA *Context;
};

/* 1795 */
struct FLOAT_SAVE
{
  unsigned __int8 Flags;
  unsigned __int8 Irql;
  unsigned __int8 PreviousNpxIrql;
  unsigned __int8 Spare[2];
  $F15A299A0220C433C3BB5ED1265031B1 u;
  unsigned int Cr0NpxState;
  _KTHREAD *Thread;
};

/* 1796 */
struct KMOD
{
  unsigned __int8 RmDisplaceOnly;
  unsigned __int8 RmSib;
  unsigned __int8 RmDisplace;
  unsigned __int8 Disp;
};

/* 1797 */
struct _DPC_ENTRY
{
  _KDPC *Dpc;
  void (__stdcall *Routine)(_KDPC *, void *, void *, void *);
  void *Context;
};

/* 1798 */
struct $47E84AEB77998D4201FAD431A4BE3734
{
  void *WaitObjectsSmall[9];
  _KWAIT_BLOCK WaitBlocks[9];
};

/* 1799 */
union $A2437B2A8354D0EB82A2014692F36395
{
  void *WaitObjects[64];
  $47E84AEB77998D4201FAD431A4BE3734 __s1;
};

/* 1800 */
struct _DISPATCHER_CONTEXT
{
  _EXCEPTION_REGISTRATION_RECORD *RegistrationPointer;
};

/* 1801 */
struct _RUN_ENTRY
{
  unsigned int BaseCode;
  unsigned __int16 RunLength;
  unsigned __int16 CodeSize;
};

/* 1802 */
struct _UDF_DIRECTORY_MAPPING
{
  _UDF_VOLUME_EXTENSION *VolumeExtension;
  _IRP *Irp;
  _UDF_FCB *DirectoryFcb;
  unsigned int LogicalSectorNumber;
  unsigned int FileBytesRemaining;
  unsigned int CacheBytesRemaining;
  void *CacheBuffer;
  unsigned __int8 *CurrentBuffer;
};

/* 1803 */
union $7E320F7CC93775C9876054730EDF4BE6
{
  NSR_FID FileIdentifierDescriptor;
  unsigned __int8 FileID[256];
};

/* 1804 */
struct _VSD_IDENT_LOOKUP_TABLE
{
  unsigned __int8 Ident[5];
  unsigned __int8 IdentEnum;
};

/* 1805 */
struct __declspec(align(4)) _D3DVERTEXSHADERINPUT
{
  unsigned int StreamIndex;
  unsigned int Offset;
  unsigned int Format;
  unsigned __int8 TessType;
  unsigned __int8 TessSource;
};

/* 1806 */
struct _D3DVERTEXATTRIBUTEFORMAT
{
  _D3DVERTEXSHADERINPUT Input[16];
};

/* 1807 */
struct _D3DCOPYRECTROPSTATE
{
  unsigned int Rop;
  unsigned int Shape;
  unsigned int PatternSelect;
  unsigned int MonoColor0;
  unsigned int MonoColor1;
  unsigned int MonoPattern0;
  unsigned int MonoPattern1;
  const unsigned int *ColorPattern;
};

/* 1808 */
struct _D3DCOPYRECTSTATE
{
  _D3DCOPYRECTCOLORFORMAT ColorFormat;
  _D3DCOPYRECTOPERATION Operation;
  int ColorKeyEnable;
  unsigned int ColorKeyValue;
  unsigned int BlendAlpha;
  unsigned int PremultAlpha;
  unsigned int ClippingPoint;
  unsigned int ClippingSize;
};

/* 1809 */
struct _D3DSWAPDATA
{
  unsigned int Swap;
  unsigned int SwapVBlank;
  unsigned int MissedVBlanks;
  unsigned int TimeUntilSwapVBlank;
  unsigned int TimeBetweenSwapVBlanks;
};

/* 1810 */
struct _D3DVBLANKDATA
{
  unsigned int VBlank;
  unsigned int Swap;
  unsigned int Flags;
};

/* 1811 */
struct _D3DVECTOR4
{
  float x;
  float y;
  float z;
  float w;
};

/* 1812 */
struct $BB8E7B2B76749C8B0CE108F1E658709A
{
  unsigned int crc;
  unsigned int mask0;
  unsigned int mask1;
  unsigned int mask2;
  unsigned int mask3;
};

/* 1813 */
struct $847F783DA3975CBFDC2F4665BC17FAD9
{
  unsigned int intr;
  unsigned int intr_mk;
  unsigned int swtr_cntl;
  unsigned int swtr_itc;
  unsigned __int8 gap1[112];
  unsigned int tx_cntl;
  unsigned int tx_en;
  unsigned int tx_sta;
  unsigned int rx_cntl_0;
  unsigned int rx_cntl_1;
  unsigned int rx_en;
  unsigned int rx_sta;
  unsigned int bkoff_cntl;
  unsigned int tx_def;
  unsigned int rx_def;
  unsigned int uni0;
  unsigned int uni1;
  unsigned int mult0;
  unsigned int mult1;
  unsigned int mult_mk0;
  unsigned int mult_mk1;
  unsigned __int8 gap2[64];
  unsigned int tx_dadr;
  unsigned int rx_dadr;
  unsigned int dlen;
  unsigned int tx_poll;
  unsigned int rx_poll;
  unsigned int tx_pcnt;
  unsigned int rx_pcnt;
  unsigned int tx_cur_dadr;
  unsigned int rx_cur_dadr;
  unsigned int tx_cur_prd0;
  unsigned int tx_cur_prd1;
  unsigned int rx_cur_prd0;
  unsigned int rx_cur_prd1;
  unsigned int tx_nxt_dadr;
  unsigned int rx_nxt_dadr;
  unsigned int tx_fifo_wm;
  unsigned int rx_fifo_wm;
  unsigned int mode;
  unsigned __int8 gap3[56];
  unsigned int mintr;
  unsigned int mintr_mk;
  unsigned int mii_cs;
  unsigned int mii_tm;
  unsigned int mdio_adr;
  unsigned int mdio_data;
  unsigned __int8 gap4[104];
  unsigned int pm_cntl;
  $BB8E7B2B76749C8B0CE108F1E658709A pmc_crc[5];
  unsigned int pmc_alias;
  unsigned int pmcsr_alias;
};

/* 1814 */
volatile struct $92EDA9352521CF8B803F3949380779C8
{
  unsigned int intr;
  unsigned int intr_mk;
  unsigned int swtr_cntl;
  unsigned int swtr_itc;
  unsigned __int8 gap1[112];
  unsigned int tx_cntl;
  unsigned int tx_en;
  unsigned int tx_sta;
  unsigned int rx_cntl_0;
  unsigned int rx_cntl_1;
  unsigned int rx_en;
  unsigned int rx_sta;
  unsigned int bkoff_cntl;
  unsigned int tx_def;
  unsigned int rx_def;
  unsigned int uni0;
  unsigned int uni1;
  unsigned int mult0;
  unsigned int mult1;
  unsigned int mult_mk0;
  unsigned int mult_mk1;
  unsigned __int8 gap2[64];
  unsigned int tx_dadr;
  unsigned int rx_dadr;
  unsigned int dlen;
  unsigned int tx_poll;
  unsigned int rx_poll;
  unsigned int tx_pcnt;
  unsigned int rx_pcnt;
  unsigned int tx_cur_dadr;
  unsigned int rx_cur_dadr;
  unsigned int tx_cur_prd0;
  unsigned int tx_cur_prd1;
  unsigned int rx_cur_prd0;
  unsigned int rx_cur_prd1;
  unsigned int tx_nxt_dadr;
  unsigned int rx_nxt_dadr;
  unsigned int tx_fifo_wm;
  unsigned int rx_fifo_wm;
  unsigned int mode;
  unsigned __int8 gap3[56];
  unsigned int mintr;
  unsigned int mintr_mk;
  unsigned int mii_cs;
  unsigned int mii_tm;
  unsigned int mdio_adr;
  unsigned int mdio_data;
  unsigned __int8 gap4[104];
  unsigned int pm_cntl;
  $BB8E7B2B76749C8B0CE108F1E658709A pmc_crc[5];
  unsigned int pmc_alias;
  unsigned int pmcsr_alias;
};

/* 1815 */
struct DOUBLE
{
  long double x;
};

/* 1816 */
union $C8014B43F160BFD769FAE3F15553333C
{
  char sz[512];
};

/* 1817 */
union $519E2A0ABDBAFFC353FD5D86715BA24D
{
  char *sz;
  unsigned __int16 *wz;
};

/* 1818 */
struct _count_string
{
  __int16 Length;
  __int16 MaximumLength;
  char *Buffer;
};

/* 1819 */
struct __declspec(align(32)) _JMP_BUF
{
  unsigned int saved_ebp;
  unsigned int saved_ebx;
  unsigned int saved_edi;
  unsigned int saved_esi;
  unsigned int saved_esp;
  unsigned int saved_return;
  unsigned int saved_xregistration;
  unsigned int saved_trylevel;
  unsigned int version_cookie;
  unsigned int unwind_func;
  unsigned int unwind_data;
};

/* 1820 */
struct _SCOPETABLE_ENTRY
{
  int EnclosingLevel;
  void *FilterFunc;
  void *HandlerFunc;
};

/* 1821 */
struct _EXCEPTION_REGISTRATION
{
  unsigned int prev;
  unsigned int handler;
};

/* 1822 */
struct _NLG_INFO
{
  unsigned int dwSig;
  unsigned int uoffDestination;
  unsigned int dwCode;
  unsigned int uoffFramePointer;
};

/* 1823 */
struct _C9_EXCEPTION_REGISTRATION
{
  _BYTE gap0[8];
  unsigned int scopetable;
  unsigned int trylevel;
};

/* 1824 */
struct _EXCEPTION_REGISTRATION_COMMON
{
  _BYTE gap0[8];
  unsigned int scopetable;
  unsigned int trylevel;
};

/* 1825 */
struct _XBEIMAGE_CERTIFICATE
{
  unsigned int SizeOfCertificate;
  unsigned int TimeDateStamp;
  unsigned int TitleID;
  unsigned __int16 TitleName[40];
  unsigned int AlternateTitleIDs[16];
  unsigned int AllowedMediaTypes;
  unsigned int GameRegion;
  unsigned int GameRatings;
  unsigned int DiskNumber;
  unsigned int Version;
  unsigned __int8 LANKey[16];
  unsigned __int8 SignatureKey[16];
  unsigned __int8 AlternateSignatureKeys[16][16];
  unsigned int OriginalSizeOfCertificate;
  unsigned int OnlineServiceName;
  unsigned int RuntimeSecurityFlags;
  unsigned __int8 CodeEncryptionKey[16];
};

/* 1826 */
struct _XBEIMAGE_SECTION
{
  unsigned int SectionFlags;
  unsigned int VirtualAddress;
  unsigned int VirtualSize;
  unsigned int PointerToRawData;
  unsigned int SizeOfRawData;
  unsigned __int8 *SectionName;
  unsigned int SectionReferenceCount;
  unsigned __int16 *HeadSharedPageReferenceCount;
  unsigned __int16 *TailSharedPageReferenceCount;
  unsigned __int8 SectionDigest[20];
};

/* 1827 */
struct _XBEIMAGE_IMPORT_DESCRIPTOR
{
  _IMAGE_THUNK_DATA32 *ImageThunkData;
  unsigned __int16 *ImageName;
};

/* 1828 */
struct _XBEIMAGE_LIBRARY_VERSION
{
  unsigned __int8 LibraryName[8];
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned __int16 BuildVersion;
  unsigned __int16 QFEVersion : 8;
  unsigned __int16 Unused : 3;
  unsigned __int16 LibFeature : 1;
  unsigned __int16 XBEVersion : 1;
  unsigned __int16 ApprovedLibrary : 2;
  unsigned __int16 DebugBuild : 1;
};

/* 1829 */
struct _XBEIMAGE_HEADER
{
  unsigned int Signature;
  unsigned __int8 EncryptedDigest[256];
  void *BaseAddress;
  unsigned int SizeOfHeaders;
  unsigned int SizeOfImage;
  unsigned int SizeOfImageHeader;
  unsigned int TimeDateStamp;
  _XBEIMAGE_CERTIFICATE *Certificate;
  unsigned int NumberOfSections;
  _XBEIMAGE_SECTION *SectionHeaders;
  unsigned int InitFlags;
  void (__cdecl *AddressOfEntryPoint)();
  _IMAGE_TLS_DIRECTORY32 *TlsDirectory;
  unsigned int SizeOfStackCommit;
  unsigned int SizeOfHeapReserve;
  unsigned int SizeOfHeapCommit;
  void *NtBaseOfDll;
  unsigned int NtSizeOfImage;
  unsigned int NtCheckSum;
  unsigned int NtTimeDateStamp;
  unsigned __int8 *DebugPathName;
  unsigned __int8 *DebugFileName;
  unsigned __int16 *DebugUnicodeFileName;
  _IMAGE_THUNK_DATA32 *XboxKernelThunkData;
  _XBEIMAGE_IMPORT_DESCRIPTOR *ImportDirectory;
  unsigned int NumberOfLibraryVersions;
  _XBEIMAGE_LIBRARY_VERSION *LibraryVersions;
  _XBEIMAGE_LIBRARY_VERSION *XboxKernelLibraryVersion;
  _XBEIMAGE_LIBRARY_VERSION *XapiLibraryVersion;
  void *MicrosoftLogo;
  unsigned int SizeOfMicrosoftLogo;
  _XBEIMAGE_LIBRARY_VERSION *LibraryFeatures;
  unsigned int NumberOfLibraryFeatures;
  void *CodeViewDebugInfo;
};

/* 1830 */
struct BSAFE_PRV_KEY
{
  unsigned int magic;
  unsigned int keylen;
  unsigned int bitlen;
  unsigned int datalen;
  unsigned int pubexp;
};

/* 1831 */
struct BSAFE_PUB_KEY
{
  unsigned int magic;
  unsigned int keylen;
  unsigned int bitlen;
  unsigned int datalen;
  unsigned int pubexp;
};

/* 1832 */
struct BSAFE_KEY_PARTS
{
  unsigned __int8 *modulus;
  unsigned __int8 *prvexp;
  unsigned __int8 *prime1;
  unsigned __int8 *prime2;
  unsigned __int8 *exp1;
  unsigned __int8 *exp2;
  unsigned __int8 *coef;
  unsigned __int8 *invmod;
  unsigned __int8 *invpr1;
  unsigned __int8 *invpr2;
};

/* 1833 */
struct BenalohData
{
  unsigned int N;
  unsigned int *M;
  unsigned int *U;
  unsigned int *V;
  unsigned int *product;
};

/* 1834 */
struct _destable
{
  unsigned int keytab[16][2];
};

/* 1835 */
struct _DES3TABLE
{
  _destable keytab1;
  _destable keytab2;
  _destable keytab3;
};

/* 1836 */
struct track_info
{
  unsigned __int16 patch;
  char pan;
  unsigned __int8 volume;
  unsigned __int8 lfo_sens;
  unsigned __int16 pitch;
  unsigned __int16 loop_counter[4];
  unsigned __int16 *loop_addr[4];
  unsigned __int8 loop_level;
  unsigned __int16 *mux_addr[3];
  unsigned __int8 mux_level;
  __int16 transpose;
  unsigned __int16 filtercutoff;
  unsigned __int16 filterres;
};

/* 1837 */
struct __declspec(align(4)) process
{
  process *next;
  process *prev;
  $2680AC85811A6ACA0EB9DAE57ABC077B mem_ptr;
  __int16 timer;
  __int16 prev_timer;
  unsigned __int16 function;
  unsigned __int8 level;
  unsigned __int8 hard_channel;
  unsigned __int8 type;
  unsigned __int16 data1;
  unsigned __int16 data2;
};

/* 1838 */
union $2680AC85811A6ACA0EB9DAE57ABC077B
{
  unsigned __int8 *c;
  unsigned __int16 *i;
};

/* 1839 */
struct DSPpatch
{
  unsigned __int16 *Start;
  unsigned __int16 Length;
  unsigned __int16 LoopStart;
  unsigned __int16 LoopLength;
  unsigned __int16 LoopEnable;
  _DSENVELOPEDESC *lpAmpEnvelope;
  _DSENVELOPEDESC *lpMultiEnvelope;
};

/* 1840 */
struct sound
{
  const unsigned __int8 type;
  const unsigned __int8 priority;
  const unsigned __int16 track_map;
  const unsigned __int16 **tbl_ptr;
};

/* 1841 */
struct fifo
{
  unsigned __int8 fifo_read;
  unsigned __int8 fifo_write;
  unsigned __int8 data[16];
};

/* 1842 */
struct CamControlNodeData
{
  unsigned __int8 ucTime;
  char scTension;
  char scBias;
  _D3DVECTOR ptPosition;
  _D3DVECTOR vecLookAt;
};

/* 1843 */
struct CamControlNode
{
  float fTime;
  _D3DVECTOR ptPosition;
  _D3DVECTOR vecVelocity;
  _D3DVECTOR vecLookAt;
  _D3DVECTOR vecLookAtW;
  float tension;
  float bias;
};

/* 1844 */
struct Shield
{
  _D3DMATRIX m_CurOTPMatrix;
  _D3DMATRIX m_CurMatrix;
  _D3DVECTOR m_CurCenter;
  _D3DVECTOR m_ObjectCenter;
  _D3DMATRIX m_StartRotation;
  _D3DVECTOR m_RotationDir;
  float m_ThetaZero;
  float m_Speed;
  float m_RadiusScale;
};

/* 1845 */
struct ZShield
{
  D3DVertexBuffer *m_pShieldVB;
  D3DIndexBuffer *m_pShieldIB;
  unsigned int m_dwNumVertices;
  unsigned int m_dwNumIndices;
  _D3DMATRIX m_CurMatrix;
  float m_Speed;
  float m_Theta;
};

/* 1846 */
struct ShieldMgr
{
  Shield m_Shields[3];
  ZShield m_ZShields[5];
  int m_NumShields;
  int m_NumZShields;
  D3DVertexBuffer *m_pShieldVB;
  D3DIndexBuffer *m_pShieldIB;
  unsigned int m_dwNumVertices;
  unsigned int m_dwNumIndices;
  unsigned int m_dwVShader;
  unsigned int m_dwPShader;
  _D3DVECTOR m_Pos;
  float m_RadiusScale;
  float m_MidRadius;
};

/* 1847 */
struct LogoRenderer
{
  D3DVertexBuffer *pLipVB;
  unsigned __int16 *pLipIndices;
  unsigned int nLipVerts;
  unsigned int nLipIndices;
  D3DTexture *pLipTex;
  D3DVertexBuffer *pSurfaceVB;
  unsigned __int16 *pSurfaceIndices;
  unsigned int nSurfaceVerts;
  unsigned int nSurfaceIndices;
  D3DTexture *pSurfaceTex;
  D3DVertexBuffer *pSurfaceTopVB;
  unsigned __int16 *pSurfaceTopIndices;
  unsigned int nSurfaceTopVerts;
  unsigned int nSurfaceTopIndices;
  D3DTexture *pSurfaceTopTex;
  D3DVertexBuffer *pInteriorVB;
  unsigned __int16 *pInteriorIndices;
  unsigned int nInteriorVerts;
  unsigned int nInteriorIndices;
  bool bRenderText;
  D3DVertexBuffer *pText_VB;
  unsigned __int16 *pText_Indices;
  unsigned int nText_Verts;
  unsigned int nText_Indices;
  _D3DMATRIX matText_Anim;
  D3DVertexBuffer *pSlashTM_VB;
  unsigned __int16 *pSlashTM_Indices;
  unsigned int nSlashTM_Verts;
  unsigned int nSlashTM_Indices;
  D3DVertexBuffer *pTextTM_VB;
  unsigned __int16 *pTextTM_Indices;
  unsigned int nTextTM_Verts;
  unsigned int nTextTM_Indices;
  D3DTexture *pTMTex;
  float fTMAlpha;
  unsigned int dwInteriorPShader;
  unsigned int dwInteriorVShader;
  D3DTexture *pSlashTexture;
  bool bHasWordmark;
  unsigned __int16 *indices_xboxlogolip_0;
  float *verts_xboxlogolip_0;
  unsigned __int16 *indices_xboxlogosurface_0;
  float *verts_xboxlogosurface_0;
  unsigned __int16 *indices_xboxlogosurfacetop_0;
  float *verts_xboxlogosurfacetop_0;
  unsigned __int16 *indices_xboxlogointerior_0;
  float *verts_xboxlogointerior_0;
  unsigned __int16 *indices_tm_wordmark_0;
  float *verts_tm_wordmark_0;
  unsigned __int16 *indices_tm_slash_0;
  float *verts_tm_slash_0;
  unsigned __int16 *indices_text_0;
  float *verts_text_0;
};

/* 1848 */
struct QRand
{
  int seed;
};

/* 1849 */
struct Renderer
{
  Direct3D *pD3D8;
  D3DDevice *pD3DDev8;
  _D3DPRESENT_PARAMETERS_ d3dPresentParams;
};

/* 1850 */
struct __cppobj D3DVECTOR4 : _D3DVECTOR
{
  float w;
};

/* 1851 */
struct Camera
{
  D3DVECTOR4 clipPlanes[4];
  bool bClipPlanesSet;
  float fNearPlane;
  float fFarPlane;
  float fAspectRatio;
  bool bWTPValid;
  float fTime;
  _D3DVECTOR vPos;
  _D3DVECTOR vLook;
  _D3DVECTOR vUp;
  _D3DMATRIX matWTP;
  _D3DMATRIX matCTW;
  _D3DMATRIX matWTC;
  _D3DMATRIX matProj;
};

/* 1852 */
struct PrimitiveVersionRecord
{
  unsigned int dwVertexStart;
  unsigned int dwVertexCount;
  unsigned int dwIndexStart;
  unsigned int dwPrimCount;
  unsigned int dwIndexCount;
  unsigned int dwParameter;
};

/* 1853 */
struct __declspec(align(4)) PrimitiveInstanceRecord
{
  unsigned __int16 idxVersion;
  __int16 idxPosAnim;
  __int16 idxRotAnim;
  _D3DMATRIX matOffset;
  _D3DMATRIX matInvOffset;
  _D3DMATRIX matScale;
  D3DVECTOR4 vObjScale;
  _D3DMATRIX matScaleOffset;
  bool bHiZ;
};

/* 1854 */
struct __declspec(align(4)) PrimitiveSet
{
  D3DVertexBuffer *pBaseStream;
  D3DVertexBuffer *pExtraStream;
  D3DIndexBuffer *pIB;
  PrimitiveVersionRecord *aVersRecs;
  int nVersions;
  PrimitiveInstanceRecord *aInstRecs;
  int nInstances;
  _D3DPRIMITIVETYPE d3dType;
  D3DTexture *pNormalMap;
  D3DCubeTexture *pCubeMap;
  D3DVECTOR4 vAmbient;
  D3DVECTOR4 vDiffuse;
  D3DVECTOR4 vSpecular;
  unsigned int dwPShader;
  unsigned int dwVShader;
  ShaderTypes shaderType;
  PrimitiveTypes primitiveType;
  bool bHiZ;
};

/* 1855 */
struct SceneRenderer
{
  PrimitiveSet *pSetHiDet[6];
  PrimitiveSet *pSetLoDet[6];
  D3DSurface *pSBufTarget;
  D3DSurface *pRenderTarget;
  D3DSurface *pZBuffer;
  D3DSurface fakeTarget;
  float fZOffset;
  float fZSlopeScale;
  bool bUseLoDetail;
  D3DVECTOR4 *pQuats;
  __int16 *pQuatIdSeq[29];
  _D3DVECTOR *pPos;
  __int16 *pPosIdSeq[32];
  D3DTexture *pSBufDepthHi;
  D3DTexture *pSBufDepthLo;
  _D3DMATRIX matWTSHi;
  _D3DMATRIX matWTSLo;
  _D3DMATRIX *pRotAnims;
  int nRotAnims;
  _D3DVECTOR *pPosAnims;
  int nPosAnims;
};

/* 1856 */
struct VBloblet
{
  float fRadius;
  _D3DVECTOR vPosition;
  bool bFarSide;
  _D3DVECTOR vDirection;
  float fStartTime;
  float fTimeMultiple;
  float fMaxDist;
  float fCurDist;
  float fWobble;
  float fWobbleDirection;
};

/* 1857 */
struct __declspec(align(4)) VBlobBump
{
  float fRadius;
  float fRadius2;
  float fOORadius2;
  float fMagnitude;
  _D3DVECTOR vPosition;
  int facesOfInterest;
  _D3DVECTOR vDirection;
  float fStartTime;
  float fTimeMul;
  float fMaxMagnitude;
  VBloblet *pMyBloblet;
  bool bStillAttachedToBloblet;
};

/* 1858 */
struct VBlob
{
  D3DVertexBuffer *m_pBlobletVB;
  D3DIndexBuffer *m_pBlobletIB;
  D3DVertexBuffer *pHaloQuadVB;
  D3DVertexBuffer *m_pBlobVBConst;
  D3DVertexBuffer *m_pBlobVBChangingR;
  D3DVertexBuffer *m_pBlobVBChangingU;
  D3DIndexBuffer *m_pBlobIB;
  _D3DVECTOR *m_pUnitSphereNormals;
  unsigned int m_dwNumVertices;
  unsigned int m_dwNumBlobletVertices;
  unsigned int m_dwNumIndices;
  unsigned int m_dwNumBlobletIndices;
  int m_NumVertsPerFace;
  unsigned int m_dwVShaderBlob;
  unsigned int m_dwVShaderBloblet;
  unsigned int m_dwPShaderBlob;
  unsigned int m_dwPShaderBloblet;
  D3DVECTOR4 m_BlobColor;
  _D3DVECTOR m_Pos;
  _D3DVECTOR m_Scale;
  float m_fRadius;
  VBlobBump m_BlobBumps[32];
  int m_NumBlobBumps;
  VBloblet m_Bloblets[8];
  int m_NumBloblets;
};

/* 1859 */
struct CameraController
{
  CamControlNode finishNodes[8];
  _D3DMATRIX xfSlash;
  _D3DVECTOR ptSlashCenter;
  _D3DVECTOR ptFinalLookAt;
  int numNodes;
  int numPaths;
  int curPathNum;
  int curStartNode;
  int curNumNodes;
  int curVariableNodes;
  float fCameraLookatInterpStart;
  float fOOCameraLookatInterpDelta;
};

/* 1860 */
struct GreenFog
{
  D3DVertexBuffer *pQuadVB;
  D3DVertexBuffer *pIntensityQuadVB;
  D3DTexture *pPlasmaTexture[3];
  D3DTexture *pIntensityTextureR;
  D3DTexture *pIntensityTextureU;
  D3DSurface *pIntensityZ;
  unsigned int dwFogPShader;
  unsigned int dwFogVShader;
};

/* 1861 */
struct __declspec(align(2)) XBoxStartupApp
{
  int nWidth;
  int nHeight;
  bool bPaused;
  bool bActive;
  bool bLoop;
  bool bCameraUnderControl;
  bool bUserControlledIntensity;
  bool bRenderGeom;
  bool bRenderSlash;
  float fTimeElapsed;
  float fJogDeltaTime;
  float fIIDT;
  float fBaseBlobIntensity;
  float fBlobIntensity;
  float fSmoothedBlobIntensity;
  unsigned int dwLastTick;
  unsigned int dwLastFramecountTick;
  _D3DVECTOR vPulses[12];
  ShieldMgr shieldMgr;
  LogoRenderer logoGeom;
  QRand qrand;
  float fCamRad;
  float fSavedCamRad;
  float fCamTheta;
  float fSavedCamTheta;
  float fCamPhi;
  float fSavedCamPhi;
  float fCamRadBlob;
  Renderer theRenderer;
  Camera theCamera;
  _D3DLIGHT8 blobLight;
  _D3DLIGHT8 moodLight;
  D3DCubeTexture *pNormalCubeMapLoRes;
  D3DCubeTexture *pNormalCubeMapHiRes;
  D3DCubeTexture *pStaticReflectionCubeMap;
  D3DTexture *pRoughBumpMap;
  D3DTexture *pGlowMap;
  unsigned int dwPShader[4];
  unsigned int dwVShader[4];
  SceneRenderer sceneGeom;
  VBlob vblob;
  CameraController camController;
  GreenFog greenFog;
  int nBootCount;
  int appSpeedId;
  bool bSceneShadowsOn;
  bool bFogOn;
  bool bWideScreen;
};

/* 1862 */
struct __declspec(align(4)) SurfOfRevPt
{
  float x;
  float y;
  float z;
  char flags;
};

/* 1863 */
struct __declspec(align(2)) ConeInst
{
  char idQuat;
  __int16 tx;
  __int16 ty;
  __int16 tz;
  char idVersion;
  char idPosAnim;
  char idRotAnim;
};

/* 1864 */
struct TorusInst
{
  char idQuat;
  __int16 tx;
  __int16 ty;
  __int16 tz;
  char idVersion;
  char idPosAnim;
  char idRotAnim;
  float fRad1;
};

/* 1865 */
struct CylinderVers
{
  char nHeightSeg;
  char nSides;
};

/* 1866 */
struct __declspec(align(4)) TorusVers
{
  float fRatio;
  char nSegs;
  char nSides;
};

/* 1867 */
struct __declspec(align(4)) ConeVers
{
  float fRad1;
  float fRad2;
  float fHeight;
  char nHeightSeg;
  char nSides;
};

/* 1868 */
struct SphereVers
{
  char nSegs;
};

/* 1869 */
struct BoxInst
{
  char idQuat;
  __int16 tx;
  __int16 ty;
  __int16 tz;
  char idVersion;
  char idPosAnim;
  char idRotAnim;
  float fLen;
  float fHeight;
  float fWidth;
};

/* 1870 */
struct __declspec(align(2)) SurfOfRevInst
{
  char idQuat;
  __int16 tx;
  __int16 ty;
  __int16 tz;
  char idVersion;
  char idPosAnim;
  char idRotAnim;
};

/* 1871 */
struct CylinderInst
{
  char idQuat;
  __int16 tx;
  __int16 ty;
  __int16 tz;
  char idVersion;
  char idPosAnim;
  char idRotAnim;
  float fRad;
  float fHalfHeight;
};

/* 1872 */
struct __declspec(align(4)) SurfOfRevVers
{
  SurfOfRevPt pts[19];
  float ax;
  float ay;
  float az;
  float px;
  float py;
  float pz;
  char nSegs;
  char nPts;
};

/* 1873 */
struct SphereInst
{
  __int16 tx;
  __int16 ty;
  __int16 tz;
  char idVersion;
  char idPosAnim;
  char idRotAnim;
  float fRad;
};

/* 1874 */
struct __m128
{
  float m128_f32[4];
};

/* 1875 */
struct __cppobj Swizzler
{
  unsigned int m_Width;
  unsigned int m_Height;
  unsigned int m_Depth;
  unsigned int m_MaskU;
  unsigned int m_MaskV;
  unsigned int m_MaskW;
  unsigned int m_u;
  unsigned int m_v;
  unsigned int m_w;
};

/* 1876 */
union __m64
{
  unsigned __int64 m64_u64;
  float m64_f32[2];
  char m64_i8[8];
  __int16 m64_i16[4];
  int m64_i32[2];
  __int64 m64_i64;
  unsigned __int8 m64_u8[8];
  unsigned __int16 m64_u16[4];
  unsigned int m64_u32[2];
};

/* 1877 */
struct XGBuffer
{
  unsigned int refCount;
  void *pData;
  unsigned int size;
};

/* 1878 */
struct BaseStream
{
  _D3DVECTOR p;
};

/* 1879 */
struct GreenFogVertexBuffer
{
  _D3DVECTOR pos;
  float tu0;
  float tv0;
  float tu1;
  float tv1;
};

/* 1880 */
struct xbt_vertex
{
  float x;
  float y;
  float z;
};

/* 1881 */
struct xbl_vertex
{
  float x;
  float y;
  float z;
  float u0;
  float v0;
};

/* 1882 */
struct RotAnimSeq
{
  char quatIds[90];
};

/* 1883 */
struct PosAnimSeq
{
  char posIds[90];
};

/* 1884 */
struct PhongStream
{
  _D3DVECTOR s;
  _D3DVECTOR t;
  _D3DVECTOR n;
};

/* 1885 */
struct BumpStream
{
  float u;
  float v;
  _D3DVECTOR s;
  _D3DVECTOR t;
  _D3DVECTOR n;
};

/* 1886 */
struct VBlobChangingVertex
{
  D3DVECTOR4 normal;
};

/* 1887 */
struct VBlobConstantVertex
{
  _D3DVECTOR unit_sphere_normal;
};

/* 1888 */
struct VBlob::render::__l2::_decalvert
{
  _D3DVECTOR p;
  float u;
  float v;
};

/* 1889 */
struct _D3DWAITINFO
{
  unsigned int Count;
  unsigned __int64 Cycles;
};

/* 1890 */
struct _D3DOVERRIDERENDERSTATE
{
  int Override;
  unsigned int Value;
};

/* 1891 */
struct __declspec(align(8)) _D3DPERF
{
  unsigned __int64 m_TSCLastResetVal;
  unsigned __int64 m_TSCLastPresentVal;
  _D3DWAITINFO m_FrameTimeMin;
  _D3DWAITINFO m_FrameTimeMax;
  unsigned int m_BreakCount;
  _D3DPERF_PerformanceCounters m_Breakperfctr;
  unsigned int *m_pPutLocationAtReset;
  unsigned __int64 m_PushBufferEndDwordsSkipped;
  unsigned int m_FrameRateIntervalTime;
  unsigned int m_dwDumpFPSInfoMask;
  void (__stdcall *m_pfnDumpFrameRateInfoHandler)();
  unsigned int m_DumpWaitCycleTimesThreshold;
  void (__stdcall *m_pfnCycleThresholdHandler)(_D3DPERF_PerformanceCounters, unsigned __int64);
  int m_SetRenderStateOverridesOnReset;
  unsigned int m_ProfileSamples;
  unsigned __int64 m_TSCProfileStartTime;
  unsigned __int16 m_ProfileData[105000];
  unsigned int m_ProfileBusyCounts[3];
  _D3DOVERRIDERENDERSTATE m_RenderStateOverrides[144];
  _D3DWAITINFO m_PerformanceCounters[30];
  unsigned int m_APICounters[235];
  unsigned int m_RenderStateCounters[144];
  unsigned int m_TextureStateCounters[32];
};

/* 1892 */
struct SinCosPair
{
  float fCos;
  float fSin;
};

/* 1893 */
struct _TheVerts
{
  float x;
  float y;
  float z;
  float w;
  float u;
  float v;
};

/* 1894 */
struct _FILTER_TABLES
{
  unsigned int BandpassChromaTable[5][3];
  unsigned int BasebandChromaTable[10][2];
  unsigned int ComponentChromaTable[10][8];
  unsigned int ComponentLumaTable[16][8];
  unsigned int CompositeLumaTable[32][16];
};

/* 1895 */
struct D3DK::D3DK::CMiniport::GENERALINFO
{
  unsigned int ChipId;
  unsigned int VideoRamSize;
  unsigned int VideoRamType;
  unsigned int ChipIntrEn0;
  unsigned int MpVIPSlavePresent;
  unsigned int CrystalFreq;
  unsigned int MaskRevision;
};

/* 1896 */
struct D3DK::D3DK::CMiniport::DACINFO
{
  unsigned int MClk;
  unsigned int VClk;
  unsigned int NVClk;
  unsigned int MPllM;
  unsigned int MPllN;
  unsigned int MPllO;
  unsigned int MPllP;
  unsigned int VPllM;
  unsigned int VPllN;
  unsigned int VPllO;
  unsigned int VPllP;
  unsigned int NVPllM;
  unsigned int NVPllN;
  unsigned int NVPllO;
  unsigned int NVPllP;
};

/* 1897 */
struct D3DK::D3DK::CMiniport::HALINFO
{
  int FifoChID;
  unsigned int FifoMode;
  int FifoInUse;
  unsigned int FifoInstance;
  unsigned int FifoAllocCount;
  int FifoCacheDepth;
  unsigned int FifoObjectCount;
  unsigned int FifoIntrEn0;
  unsigned int FifoRetryCount;
  unsigned int FifoUserBase;
  unsigned int FifoContextAddr1;
  unsigned int FifoContextAddr2;
  unsigned int HashTableAddr;
  unsigned int GrChID;
  unsigned int GrCtxTable[2];
  unsigned int GrCtxTableBase;
  unsigned int GrCurrentObjects3d[2];
  unsigned int FbSave0;
  unsigned int FbSave1;
  unsigned int McSave;
  unsigned int McSaveIntrEn0;
};

/* 1898 */
struct D3DK::D3DK::CMiniport::VIDEOMODETIMING
{
  unsigned int HorizontalVisible;
  unsigned int VerticalVisible;
  unsigned int Refresh;
  unsigned int HorizontalTotal;
  unsigned int HorizontalBlankStart;
  unsigned int HorizontalRetraceStart;
  unsigned int HorizontalRetraceEnd;
  unsigned int HorizontalBlankEnd;
  unsigned int VerticalTotal;
  unsigned int VerticalBlankStart;
  unsigned int VerticalRetraceStart;
  unsigned int VerticalRetraceEnd;
  unsigned int VerticalBlankEnd;
  unsigned int PixelClock;
  unsigned int HorizontalSyncPolarity;
  unsigned int VerticalSyncPolarity;
};

/* 1899 */
struct D3DK::D3DK::CMiniport::HW_HASHENTRY
{
  unsigned int ht_ObjectHandle;
  unsigned int ht_Context;
};

/* 1900 */
struct D3DK::D3DK::CMiniport::OBJECTINFO
{
  unsigned int Handle;
  unsigned __int16 SubChannel;
  unsigned __int16 Engine;
  unsigned int ClassNum;
  unsigned int Instance;
};

/* 1901 */
struct D3DK::D3DK::CMiniport::VBLANKFLIPS
{
  int Pending;
  unsigned int Offset;
};

/* 1902 */
struct D3DK::D3DK::CMiniport::PUSHBUFFERFIXUPINFO
{
  unsigned int *pFixup;
  unsigned __int8 *pStart;
  unsigned int ReturnOffset;
  unsigned int *ReturnAddress;
};

/* 1903 */
struct D3DK::D3DK::CMiniport
{
  void *m_RegisterBase;
  unsigned int m_PresentationInterval;
  unsigned int m_SurfacePitch;
  unsigned int m_DisplayMode;
  unsigned int m_Format;
  void *m_InstMem;
  _KINTERRUPT m_InterruptObject;
  _KDPC m_Dpc;
  int m_InterruptsEnabled;
  D3DK::D3DK::CMiniport::GENERALINFO m_GenInfo;
  D3DK::D3DK::CMiniport::DACINFO m_DacInfo;
  D3DK::D3DK::CMiniport::HALINFO m_HalInfo;
  D3DK::D3DK::CMiniport::VIDEOMODETIMING m_VideoModeTiming;
  unsigned int m_VideoModeDepth;
  unsigned int m_FreeInstAddr;
  _HAL_SHUTDOWN_REGISTRATION m_ShutdownRegistration;
  D3DK::D3DK::CMiniport::VBLANKFLIPS m_VBlankFlips[5];
  unsigned int m_VBlankFlipNext;
  unsigned int m_VBlankQueueNext;
  void (__cdecl *m_pVerticalBlankCallback)(unsigned int);
  _KEVENT m_VerticalBlankEvent;
  _KEVENT m_BusyBlockEvent;
  unsigned int m_CurrentAvInfo;
  int m_FirstFlip;
  volatile unsigned int m_VBlankFlipCount;
  _D3DGAMMARAMP m_GammaRamp[2];
  int m_GammaUpdated[2];
  unsigned int m_GammaCurrentIndex;
  volatile unsigned int m_VBlankCount;
  unsigned int m_OverlayVBlank;
  unsigned int m_DebugRegister[11];
  unsigned int m_PusherGetRunSize;
};

/* 1904 */
struct D3DK::AntiAliasedSavedState
{
  D3DSurface *pRenderTarget;
  D3DSurface *pZBuffer;
  D3DBaseTexture *pTexture;
  D3DK::PixelShader *pPixelShader;
  unsigned int VertexShaderHandle;
  _D3DVIEWPORT8 Viewport;
  unsigned int Stage1ColorOp;
  unsigned int PSTextureModes;
  unsigned int RenderState[16];
  unsigned int TextureState[11];
  unsigned int PixelShaderState[57];
  unsigned int VertexShaders[48];
  D3DTexture SrcTexture;
};

/* 1906 */
union $791BE597EC47968D6459042B878807F8
{
  IUnknown *pUnknown;
  unsigned __int8 Data[1];
};

/* 1905 */
struct D3DK::PrivateDataNode
{
  D3DK::PrivateDataNode *pNext;
  void *pObject;
  _GUID guid;
  unsigned int size;
  unsigned int flags;
  $791BE597EC47968D6459042B878807F8 ___u5;
};

/* 1907 */
struct D3DK::_regval
{
  __int16 a;
  __int16 r;
  __int16 g;
  __int16 b;
};

/* 1908 */
struct D3DK::_capture
{
  unsigned int dwPreColor;
  unsigned int dwPreDepth;
  unsigned int dwCombinerCount;
  D3DK::_regval v0[9];
  D3DK::_regval v1[9];
  D3DK::_regval t0[9];
  D3DK::_regval t1[9];
  D3DK::_regval t2[9];
  D3DK::_regval t3[9];
  D3DK::_regval c0[9];
  D3DK::_regval c1[9];
  D3DK::_regval r0[9];
  D3DK::_regval r1[9];
  D3DK::_regval fog;
  D3DK::_regval sum;
  D3DK::_regval prod;
  unsigned int dwPostColor;
  unsigned int dwPostDepth;
};

/* 1909 */
struct D3DK::_userstateentry
{
  _D3DRENDERSTATETYPE Enum;
  unsigned int Value;
};

/* 1910 */
struct D3DK::DebugSnapshot
{
  unsigned int DrawVertType;
  _D3DPRIMITIVETYPE PrimitiveType;
  unsigned int VertexCount;
  const void *pIndexData;
  const void *pVertexStreamZeroData;
  unsigned int VertexStreamZeroStride;
  unsigned int StartVertex;
  unsigned int dwCaptureCount;
  unsigned int dwX;
  unsigned int dwY;
  D3DSurface *pBackBuffer;
  D3DSurface *pDepthBuffer;
  D3DK::_capture cpt;
  unsigned int dwXScale;
  unsigned int dwYScale;
  D3DK::_userstateentry UserState[50];
  unsigned int UserStateCount;
  unsigned int dwScissorRectCount;
  _D3DRECT ScissorRects[8];
  int bScissorExclusive;
};

/* 1911 */
struct D3DK::D3DPERF_PROFDATA
{
  int Sampling;
};

/* 1912 */
struct $517E25849C077644E2FD2EB43B5F523C
{
  unsigned int State;
  const char *Name;
};

/* 1913 */
const struct $CC001E3CEE606F197F04747EB18F1B30
{
  unsigned int State;
  const char *Name;
};

/* 1914 */
struct __cppobj D3DK::PERFFIXEDPOINT
{
  unsigned int IntPart;
  unsigned int DecPart;
};

/* 1915 */
struct _XGPOINT3D
{
  unsigned int u;
  unsigned int v;
  unsigned int w;
};

/* 1916 */
struct __cppobj XGRAPHICS::XGInternalSwizzler<unsigned short>
{
};

/* 1917 */
struct __cppobj XGRAPHICS::XGINTERNALSWIZZLE
{
  const void *pSource;
  unsigned int Pitch;
  unsigned int SLeft;
  unsigned int STop;
  unsigned int RWidth;
  unsigned int RHeight;
  void *pDest;
  unsigned int Width;
  unsigned int Height;
  unsigned int DTop;
  unsigned int DLeft;
  int xOff;
  int yOff;
  int uWidth;
  int uHeight;
  int bpp;
  Swizzler swiz;
  unsigned int mask[2];
};

/* 1918 */
struct __cppobj XGRAPHICS::XGInternalSwizzler<__int64>
{
};

/* 1919 */
struct __cppobj XGRAPHICS::XGInternalSwizzler<unsigned char>
{
};

/* 1920 */
struct __cppobj XGRAPHICS::XGInternalSwizzler<unsigned long>
{
};

/* 1921 */
struct __cppobj CRefCount
{
  CRefCount_vtbl *__vftable /*VFT*/;
  unsigned int m_ulRefCount;
};

/* 1922 */
struct /*VFT*/ CRefCount_vtbl
{
  void (__thiscall *~CRefCount)(CRefCount *this);
  unsigned int (__stdcall *AddRef)(CRefCount *this);
  unsigned int (__stdcall *Release)(CRefCount *this);
};

/* 1923 */
struct __cppobj CDirectSoundSettings : CRefCount
{
  unsigned int m_dwSpeakerConfig;
  _DSEFFECTIMAGELOC m_EffectLocations;
};

/* 1924 */
struct /*VFT*/ CDirectSoundSettings_vtbl
{
  void (__thiscall *~CRefCount)(CRefCount *this);
  unsigned int (__stdcall *AddRef)(CRefCount *this);
  unsigned int (__stdcall *Release)(CRefCount *this);
};

/* 1927 */
struct MCPX_ALLOC_CONTEXT
{
  void *VirtualAddress;
  unsigned int PhysicalAddress;
  unsigned int Size;
};

/* 1932 */
struct __cppobj CAc97Device
{
  CAc97Channel *m_apChannels[2];
  unsigned int m_dwFlags;
  _HAL_SHUTDOWN_REGISTRATION m_HalShutdownData;
  _KDPC m_dpc;
  unsigned __int8 m_abPendingBufferCompletions[2][2];
};

/* 1925 */
struct __cppobj CMcpxCore
{
  CMcpxCore_vtbl *__vftable /*VFT*/;
  MCPX_ALLOC_CONTEXT m_ctxMemory[16];
  CDirectSoundSettings *m_pSettings;
  CMcpxGPDspManager *m_pGpDspManager;
  CAc97Device m_Ac97;
};

/* 1926 */
struct /*VFT*/ CMcpxCore_vtbl
{
  void (__thiscall *~CMcpxCore)(CMcpxCore *this);
};

/* 1930 */
struct HOST_TO_DSP_COMMANDBLOCK
{
  unsigned int dwOffset;
  unsigned int dwCodeLength;
  unsigned int dwStateOffset;
  unsigned int dwStateLength;
  unsigned int dwCommandFlags;
  unsigned int dwDspStatus;
};

/* 1931 */
struct __cppobj CMcpxGPDspManager
{
  CMcpxCore *m_pApu;
  unsigned int m_uAC3BufferOffset;
  unsigned int m_uMultipassBufferOffset;
  CMcpxDspScratchDma *m_pScratchDma;
  CMcpxDspImage *m_pDspImage;
  unsigned int m_uPMemOffset;
  unsigned int m_uPMemMaxSize;
  unsigned int m_dwCurrentLowestScratchOffset;
  unsigned int m_dwStateSizeToCommit;
  _DSEFFECTIMAGEDESC *m_pFxDescriptor;
  HOST_TO_DSP_COMMANDBLOCK m_InitialCmdBlock;
};

/* 1934 */
struct __cppobj CAc97Channel
{
  const AC97CHANNELTYPE m_nChannelType;
  unsigned int m_dwPosition;
  CAc97Device *m_pDevice;
  unsigned int m_dwFlags;
  void (__stdcall *m_pfnCallback)(void *);
  void *m_pvCallbackContext;
  ACIPRD *m_pPrdl;
  unsigned int m_dwPrdlAddress;
  void *m_pvSilence;
  unsigned __int8 m_bPrdCount;
  unsigned __int8 m_bCurrentPrd;
  unsigned int m_dwMode;
  unsigned int m_dwLastPosition;
};

/* 1928 */
struct __cppobj CMcpxDspScratchDma
{
  unsigned int m_dwMaxPages;
  unsigned int m_dwReservedPages;
  int m_fGpScratch;
  MCPX_ALLOC_CONTEXT *m_pSGETableContext;
  MCPX_ALLOC_CONTEXT *m_pDmaBufferContext;
  MCPX_ALLOC_CONTEXT m_ctxFxScratch;
  CMcpxCore *m_pApu;
  unsigned int m_uRegOffsetValidPages;
};

/* 1929 */
struct __cppobj CMcpxDspImage
{
  void *m_pLoader;
  unsigned int m_uLoaderSize;
};

/* 1933 */
struct ACIPRD
{
  unsigned int dwPhysicalAddress;
  unsigned __int32 wLength : 16;
  unsigned __int32 wReserved : 14;
  __int32 fBufferUnderrunPolicy : 1;
  __int32 fInterruptOnCompletion : 1;
};

/* 1938 */
struct __cppobj CList<_SGEHEAPRUNMARKER>
{
  _SGEHEAPRUNMARKER *m_pHead;
  _SGEHEAPRUNMARKER *m_pTail;
};

/* 1935 */
struct __cppobj CHeap<_SGEHEAPRUNMARKER>
{
  CHeap<_SGEHEAPRUNMARKER>_vtbl *__vftable /*VFT*/;
  CList<_SGEHEAPRUNMARKER> m_lstFree;
  CList<_SGEHEAPRUNMARKER> m_lstAllocated;
  unsigned __int16 m_wFreeElementCount;
  CList<_SGEHEAPRUNMARKER> m_lstMarkers;
  _SGEHEAPRUNMARKER *m_paMarkers;
};

/* 1937 */
struct /*VFT*/ CHeap<_SGEHEAPRUNMARKER>_vtbl
{
  void (__thiscall *~CHeap<_SGEHEAPRUNMARKER>)(CHeap<_SGEHEAPRUNMARKER> *this);
  int (__thiscall *Initialize)(CHeap<_SGEHEAPRUNMARKER> *this, unsigned __int16);
  _SGEHEAPRUNMARKER *(__thiscall *Alloc)(CHeap<_SGEHEAPRUNMARKER> *this, unsigned __int16);
  void (__thiscall *Free)(CHeap<_SGEHEAPRUNMARKER> *this, _SGEHEAPRUNMARKER *);
  _SGEHEAPRUNMARKER *(__thiscall *CoalesceRuns)(CHeap<_SGEHEAPRUNMARKER> *this, _SGEHEAPRUNMARKER *, _SGEHEAPRUNMARKER *);
};

/* 1936 */
struct _SGEHEAPRUNMARKER
{
  _SGEHEAPRUNMARKER *pPrev;
  _SGEHEAPRUNMARKER *pNext;
  unsigned __int8 bRefCount;
  void *pvBufferBase;
  unsigned __int16 wElement;
  unsigned __int16 wLength;
};

/* 1939 */
struct __cppobj CMcpxBufferSgeHeap : CHeap<_SGEHEAPRUNMARKER>
{
};

/* 1940 */
struct /*VFT*/ CMcpxBufferSgeHeap_vtbl
{
  void (__thiscall *~CHeap<_SGEHEAPRUNMARKER>)(CHeap<_SGEHEAPRUNMARKER> *this);
  int (__thiscall *Initialize)(CHeap<_SGEHEAPRUNMARKER> *this, unsigned __int16);
  _SGEHEAPRUNMARKER *(__thiscall *Alloc)(CHeap<_SGEHEAPRUNMARKER> *this, unsigned __int16);
  void (__thiscall *Free)(CHeap<_SGEHEAPRUNMARKER> *this, _SGEHEAPRUNMARKER *);
  _SGEHEAPRUNMARKER *(__thiscall *CoalesceRuns)(CHeap<_SGEHEAPRUNMARKER> *this, _SGEHEAPRUNMARKER *, _SGEHEAPRUNMARKER *);
  _SGEHEAPRUNMARKER *(__thiscall *Alloc)(CMcpxBufferSgeHeap *this, void *, unsigned int);
};

/* 1958 */
struct $6DBFEDF6808F44DBF78DD245EF3AE49B
{
  unsigned __int32 General : 1;
  unsigned __int32 DeltaWarning : 1;
  unsigned __int32 RetriggerEvent : 1;
  unsigned __int32 DeltaPanic : 1;
  unsigned __int32 FETrap : 1;
  unsigned __int32 FENotify : 1;
  unsigned __int32 FEVoice : 1;
  unsigned __int32 FEMethodOverFlow : 1;
  unsigned __int32 GPMailbox : 1;
  unsigned __int32 GPNotify : 1;
  unsigned __int32 EPMailbox : 1;
  unsigned __int32 EPNotify : 1;
};

/* 1959 */
union __declspec(align(8)) R_INTR
{
  $6DBFEDF6808F44DBF78DD245EF3AE49B __s0;
  unsigned int uValue;
};

/* 1941 */
struct __cppobj __declspec(align(8)) CMcpxAPU : CRefCount, CMcpxCore
{
  unsigned __int16 m_wFree2dVoiceCount;
  unsigned __int16 m_wFree3dVoiceCount;
  _LIST_ENTRY m_lst3dVoices;
  CMcpxBufferSgeHeap m_SgeHeap;
  _DS3DLISTENER m_3dListener;
  _DSI3DL2LISTENER m_I3dl2Listener;
  unsigned int m_dw3dParameterMask;
  D3DXVECTOR3 m_v3dNormalizedOrientation;
  unsigned int m_dwState;
  volatile unsigned int m_dwVoiceMapLock;
  CMcpxVoiceClient *m_apVoiceMap[256];
  _LIST_ENTRY m_alstActiveVoices[3];
  _LIST_ENTRY m_lstPendingInactiveVoices;
  R_INTR m_arInterruptStatus[2];
  _KDPC m_dpcInterrupt;
  _KTIMER m_tmrDeferredCommandsHigh;
  _KDPC m_dpcDeferredCommandsHigh;
  _LIST_ENTRY m_lstDeferredCommandsHigh;
  MCPX_DEFERRED_COMMAND *m_apDeferredCommandsLow[512];
  _HAL_SHUTDOWN_REGISTRATION m_HalShutdownData;
};

/* 1942 */
struct MCPX_VOICE_REGCACHE
{
  unsigned int CfgFMT;
  unsigned int CfgMISC;
  unsigned int CfgENV0;
  unsigned int CfgENVA;
  unsigned int CfgENV1;
  unsigned int CfgENVF;
  unsigned int CfgLFODLY;
  unsigned int LFOENV;
  unsigned int LFOMOD;
  unsigned int TarFCA;
  unsigned int TarFCB;
  unsigned int VoiceOn;
};

/* 1955 */
struct MCPX_3DVOICE_DATA
{
  _D3DVECTOR vNormP;
  _D3DVECTOR vPDot;
  long double fAbsP;
  float fAzimuth;
  float fElevation;
  float fThetaS;
  int lDistanceVolume;
  int lConeVolume;
  int lFrontVolume;
  int lRearVolume;
  float fDoppler;
};

/* 1956 */
struct DSFX_I3DL2SOURCE_PARAMS
{
  int lDirect;
  int lDirectHF;
  int lSource;
  int lSourceHF;
  int nDirectIir;
  int nReverbIir;
};

/* 1945 */
struct __cppobj __declspec(align(8)) CMcpxVoiceClient : CRefCount
{
  volatile unsigned int m_dwStatus;
  CMcpxAPU *m_pMcpxApu;
  void *m_ahVoices[3];
  _DS3DBUFFER m_3dBuffer;
  _DSI3DL2BUFFER m_I3dl2Buffer;
  unsigned int m_dw3dParameterMask;
  MCPX_VOICE_REGCACHE m_RegCache;
  _LIST_ENTRY m_lstSourceVoices;
  _LIST_ENTRY m_leActiveVoice;
  _LIST_ENTRY m_lePendingInactiveVoice;
  _LIST_ENTRY m_le3dVoice;
  _LIST_ENTRY m_leSourceVoice;
  unsigned __int8 m_bVoiceList;
  CDirectSoundVoiceSettings *m_pSettings;
  MCPX_3DVOICE_DATA m_3dData;
  DSFX_I3DL2SOURCE_PARAMS m_I3dl2Data;
  unsigned __int8 m_bAvailable3dFilter;
};

/* 1950 */
struct __declspec(align(8)) MCPX_DEFERRED_COMMAND
{
  _LIST_ENTRY leListEntry;
  unsigned int dwFlags;
  __int64 rtTimestamp;
  CMcpxVoiceClient *pVoice;
  unsigned int dwCommand;
  unsigned int dwContext;
};

/* 1946 */
struct __cppobj CDirectSoundVoiceSettings : CRefCount
{
  CDirectSoundSettings *m_pGlobalSettings;
  unsigned int m_dwFlags;
  tWAVEFORMATEX *m_pwfxFormat;
  int m_lPitch;
  int m_lVolume;
  unsigned int m_dwHeadroom;
  unsigned int m_dwMixBinMask;
  int m_alMixBinVolumes[8];
  CDirectSoundBuffer *m_pMixinBuffer;
};

/* 1943 */
struct __cppobj CDirectSoundVoice : CRefCount
{
  CDirectSoundVoice *pPrev;
  CDirectSoundVoice *pNext;
  CDirectSound *m_pDirectSound;
  CMcpxVoiceClient *m_pVoice;
  CDirectSoundVoiceSettings *m_pSettings;
};

/* 1952 */
struct __cppobj CDirectSoundBuffer : CDirectSoundVoice, IDirectSoundBuffer
{
  CDirectSoundBufferSettings *m_pSettings;
  CMcpxBuffer *m_pBuffer;
  _DSBPOSITIONNOTIFY *m_paNotifies;
  unsigned int m_dwNotifyCount;
  unsigned int m_dwLastNotifyPosition;
};

/* 1961 */
struct __cppobj CList<CDirectSoundVoice>
{
  CDirectSoundVoice *m_pHead;
  CDirectSoundVoice *m_pTail;
};

/* 1944 */
struct __cppobj CDirectSound : CRefCount, IDirectSound
{
  CDirectSoundSettings *m_pSettings;
  CMcpxAPU *m_pDevice;
  CList<CDirectSoundVoice> m_lstVoices;
  IDirectSoundBuffer *m_apKeepAliveBuffers[1];
};

/* 1948 */
struct __cppobj __unaligned __declspec(align(4)) CDirectSoundBufferSettings : CDirectSoundVoiceSettings
{
  void *m_pvBufferData;
  unsigned int m_dwBufferSize;
  unsigned int m_dwLoopStart;
  unsigned int m_dwLoopLength;
  unsigned int m_dwInputMixBinMask;
};

/* 1949 */
struct VADBUFFEREVENTSINK
{
  void (__stdcall *OnPositionDelta)(unsigned int, void *);
  void (__stdcall *OnStop)(void *);
};

/* 1951 */
struct __cppobj __declspec(align(8)) CMcpxBuffer : CMcpxVoiceClient
{
  CDirectSoundBufferSettings *m_pSettings;
  VADBUFFEREVENTSINK m_EventSink;
  void *m_pvEventContext;
  _SGEHEAPRUNMARKER *m_pSgeHeapEntry;
  MCPX_DEFERRED_COMMAND m_aDeferredCommands[5];
  unsigned int m_dwCachedPlayCursor;
};

/* 1947 */
struct /*VFT*/ CDirectSoundVoice_vtbl
{
  void (__thiscall *~CRefCount)(CRefCount *this);
  unsigned int (__stdcall *AddRef)(CRefCount *this);
  unsigned int (__stdcall *Release)(CRefCount *this);
};

/* 1953 */
struct /*VFT*/ CDirectSoundBuffer_vtbl
{
  void (__thiscall *~CRefCount)(CRefCount *this);
  unsigned int (__stdcall *AddRef)(CRefCount *this);
  unsigned int (__stdcall *Release)(CRefCount *this);
};

/* 1954 */
struct /*VFT*/ CDirectSoundVoiceSettings_vtbl
{
  void (__thiscall *~CRefCount)(CRefCount *this);
  unsigned int (__stdcall *AddRef)(CRefCount *this);
  unsigned int (__stdcall *Release)(CRefCount *this);
};

/* 1957 */
struct /*VFT*/ CMcpxVoiceClient_vtbl
{
  void (__thiscall *~CRefCount)(CRefCount *this);
  unsigned int (__stdcall *AddRef)(CRefCount *this);
  unsigned int (__stdcall *Release)(CRefCount *this);
  void (__thiscall *ActivateVoice)(CMcpxVoiceClient *this);
  void (__thiscall *DeactivateVoice)(CMcpxVoiceClient *this, int, int);
  int (__thiscall *ServiceVoiceInterrupt)(CMcpxVoiceClient *this);
  void (__thiscall *ServiceDeferredCommand)(CMcpxVoiceClient *this, unsigned int, unsigned int);
};

/* 1960 */
struct /*VFT*/ CMcpxAPU_vtbl
{
  void (__thiscall *~CRefCount)(CRefCount *this);
  unsigned int (__stdcall *AddRef)(CRefCount *this);
  unsigned int (__stdcall *Release)(CRefCount *this);
};

/* 1962 */
struct /*VFT*/ CDirectSound_vtbl
{
  void (__thiscall *~CRefCount)(CRefCount *this);
  unsigned int (__stdcall *AddRef)(CRefCount *this);
  unsigned int (__stdcall *Release)(CRefCount *this);
};

/* 1963 */
struct __declspec(align(4)) CIrql
{
  int m_fRaised;
  unsigned __int8 m_irql;
};

/* 1964 */
struct $1E37A7FEC939448AEDADE00FF242665D
{
  unsigned __int32 Global : 1;
  unsigned __int32 DSP : 1;
  unsigned __int32 NMI : 1;
  unsigned __int32 Abort : 1;
};

/* 1965 */
union R_GP_RESET
{
  $1E37A7FEC939448AEDADE00FF242665D __s0;
  unsigned int uValue;
};

/* 1966 */
struct MCPX_VOICE_VOLUME
{
  unsigned int TarVOLA[3];
  unsigned int TarVOLB[3];
  unsigned int TarVOLC[3];
};

/* 1967 */
struct MCPX_SSL_DESC
{
  _LIST_ENTRY lstPackets;
  unsigned int dwPrdCount;
  unsigned int dwBytesMapped;
};

/* 1968 */
struct _MCPX_HW_NOTIFICATION
{
  unsigned int GSCNT;
  unsigned int CurrentOffset;
  unsigned int Zero;
  unsigned __int8 Res0;
  unsigned __int8 SamplesAvailable;
  unsigned __int8 EnvelopeActive;
  unsigned __int8 Status;
};

/* 1969 */
struct DOLBY_CONFIG_TABLE
{
  unsigned int table_size;
  unsigned int do_surround_encode;
  unsigned int do_game_encode;
  unsigned int do_downmix_encode;
  unsigned int pcm_sample_rate_code;
  unsigned int input_ch_config;
  unsigned int lfe_present;
  unsigned int ac3_dialnorm;
  unsigned int ac3_bandwidth;
  unsigned int channel_lpf_enabled;
  unsigned int lfe_lpf_enabled;
  unsigned int dc_hpf_enabled;
  unsigned int dynrng_exists;
  unsigned int ac3_dynrng_code;
  unsigned int compr_exists;
  unsigned int ac3_compr_code;
  unsigned int surround_gain_enabled;
  unsigned int surround_gain;
  unsigned int surround_mode;
  unsigned int reserved_1;
  unsigned int reserved_2;
  unsigned int reserved_3;
  unsigned int reserved_4;
  unsigned int reserved_5;
};

/* 1970 */
struct __cppobj CAutoLock
{
  int m_fLocked;
};

/* 1971 */
struct FIRFILTER8
{
  unsigned __int8 Coeff[31];
  unsigned __int8 Delay;
};

/* 1972 */
struct $F0321F1AB7AFBD7818446593459BD4DA
{
  unsigned __int32 Start : 1;
  unsigned __int32 Ready : 1;
  unsigned __int32 ReqIOC : 1;
  unsigned __int32 ReqEOL : 1;
  unsigned __int32 ReqErr : 1;
};

/* 1973 */
union R_GPDMA_CONFIG
{
  $F0321F1AB7AFBD7818446593459BD4DA __s0;
  unsigned int uValue;
};

/* 1974 */
struct $07D82FFB4BE310D800E5F58419B80829
{
  unsigned __int32 count0 : 4;
  unsigned __int32 count1 : 10;
};

/* 1975 */
union WORD2
{
  $07D82FFB4BE310D800E5F58419B80829 field;
  unsigned int uValue;
};

/* 1976 */
struct $31BF1624AEAD1B56F02F80660FF05F44
{
  unsigned __int32 nextCommand : 14;
  unsigned __int32 EOL : 1;
};

/* 1977 */
union WORD0
{
  $31BF1624AEAD1B56F02F80660FF05F44 field;
  unsigned int uValue;
};

/* 1978 */
struct $AE7BE5CA76AE650A1EFC5F3B8E6567BA
{
  unsigned __int32 interleave : 1;
  unsigned __int32 dspToSys : 1;
  unsigned __int32 IOC : 2;
  unsigned __int32 smOffWrBack : 1;
  unsigned __int32 smBufId : 4;
  unsigned __int32 iso : 1;
  unsigned __int32 smDataFormat : 3;
  unsigned __int32 : 1;
  unsigned __int32 increment : 11;
};

/* 1979 */
union WORD1
{
  $AE7BE5CA76AE650A1EFC5F3B8E6567BA field;
  unsigned int uValue;
};

/* 1980 */
struct $E0137DE0C50571591D20C5B6F203501C
{
  unsigned __int32 dspStart : 14;
  unsigned __int32 nul : 1;
};

/* 1981 */
union WORD3
{
  $E0137DE0C50571591D20C5B6F203501C field;
  unsigned int uValue;
};

/* 1982 */
struct DSP_CONTROL
{
  WORD0 w0;
  WORD1 w1;
  WORD2 w2;
  WORD3 w3;
};

/* 1983 */
struct __cppobj CMcpxEPDspManager
{
  CMcpxDspScratchDma *m_pScratchDma;
  CMcpxCore *m_pApu;
  CMcpxGPDspManager *m_pGlobalProc;
  unsigned __int8 *m_pConfigTable;
};

/* 1984 */
struct __cppobj CDirectSoundStreamSettings : CDirectSoundVoiceSettings
{
  unsigned int m_dwMaxAttachedPackets;
  void (__stdcall *m_pfnCallback)(void *, void *, unsigned int);
  void *m_pvContext;
};

/* 1985 */
struct /*VFT*/ CDirectSoundStreamSettings_vtbl
{
  void (__thiscall *~CRefCount)(CRefCount *this);
  unsigned int (__stdcall *AddRef)(CRefCount *this);
  unsigned int (__stdcall *Release)(CRefCount *this);
};

/* 1986 */
struct VADSTREAMEVENTSINK
{
  void (__stdcall *OnPacketCompletion)(void *, void *, unsigned int);
};

/* 1987 */
struct MCPX_PACKET_CONTEXT
{
  _LIST_ENTRY leListEntry;
  _XMEDIAPACKET xmpPacket;
  unsigned int dwCompletedSize;
  unsigned int dwStatus;
  __int64 rtTimestamp;
};

/* 1988 */
struct __cppobj CMcpxStream : CMcpxVoiceClient
{
  CDirectSoundStreamSettings *m_pSettings;
  VADSTREAMEVENTSINK m_EventSink;
  void *m_pvEventContext;
  unsigned int m_dwPrdControl;
  MCPX_SSL_DESC m_aSslDesc[2];
  _LIST_ENTRY m_lstPending;
  _LIST_ENTRY m_lstAvailable;
  _LIST_ENTRY m_lstCompleted;
  MCPX_PACKET_CONTEXT *m_paPacketContexts;
  MCPX_PACKET_CONTEXT *m_pWorkingPacket;
  unsigned int m_dwWorkingPacketOffset;
  MCPX_DEFERRED_COMMAND m_aDeferredCommands[3];
  unsigned int m_dwFirstMappedSslIndex;
  unsigned int m_dwMappedSslCount;
};

/* 1989 */
struct /*VFT*/ CMcpxStream_vtbl
{
  void (__thiscall *~CRefCount)(CRefCount *this);
  unsigned int (__stdcall *AddRef)(CRefCount *this);
  unsigned int (__stdcall *Release)(CRefCount *this);
  void (__thiscall *ActivateVoice)(CMcpxVoiceClient *this);
  void (__thiscall *DeactivateVoice)(CMcpxVoiceClient *this, int, int);
  int (__thiscall *ServiceVoiceInterrupt)(CMcpxVoiceClient *this);
  void (__thiscall *ServiceDeferredCommand)(CMcpxVoiceClient *this, unsigned int, unsigned int);
};

/* 1990 */
struct $198BA3C2E79B4DAA3F7EBD842C5A9D77
{
  unsigned __int8 write;
  unsigned __int8 read;
};

/* 1991 */
union _MCPX_DSP_MBOX
{
  $198BA3C2E79B4DAA3F7EBD842C5A9D77 Ptr;
  unsigned __int16 uVal;
};

/* 1992 */
struct $90A0076B947705FFA78340A115184D24
{
  unsigned __int32 Idle : 1;
  unsigned __int32 Stopped : 1;
  unsigned __int32 EnableStop : 1;
  unsigned __int32 IntrNotify : 1;
};

/* 1993 */
union R_GP_CONTROL
{
  $90A0076B947705FFA78340A115184D24 __s0;
  unsigned int uValue;
};

/* 1994 */
struct _DSFX_CROSSTALK_STATE
{
  unsigned int dwScratchOffset;
  unsigned int dwScratchLength;
  unsigned int dwYMemoryOffset;
  unsigned int dwYMemoryLength;
  unsigned int dwFlags;
  unsigned int dwInMixbinPtrs[4];
  unsigned int dwOutMixbinPtrs[4];
};

/* 1995 */
struct __cppobj __declspec(align(4)) CMcpxDspScratchQ
{
  unsigned int m_uBaseOffset;
  unsigned int m_uRegOffset;
  _MCPX_DSP_MBOX m_MailBox;
  CMcpxCore *m_pApu;
  CMcpxDspScratchDma *m_pScratchDma;
  unsigned int m_uStartFlag;
  unsigned __int8 m_uWrapIndex;
};

/* 1996 */
struct $F5A3945E9CB5CF78D6FDC9321F8432E4
{
  unsigned __int32 ReadISO : 1;
  unsigned __int32 WriteISO : 1;
  unsigned __int32 SampleReadISO : 1;
  unsigned __int32 GSCUpdate : 2;
  unsigned __int32 DeltaWarn : 1;
  unsigned __int32 Retriggered : 1;
  unsigned __int32 DeltaPanic : 1;
};

/* 1997 */
union R_SE_CONTROL
{
  $F5A3945E9CB5CF78D6FDC9321F8432E4 __s0;
  unsigned int uValue;
};

/* 1998 */
struct __cppobj CDirectSoundStream : IDirectSoundStream, CDirectSoundVoice
{
  CDirectSoundStreamSettings *m_pSettings;
  CMcpxStream *m_pStream;
};

/* 1999 */
struct /*VFT*/ CDirectSoundStream_vtbl
{
  unsigned int (__stdcall *AddRef)(XMediaObject *this);
  unsigned int (__stdcall *Release)(XMediaObject *this);
  int (__stdcall *GetInfo)(XMediaObject *this, _XMEDIAINFO *);
  int (__stdcall *GetStatus)(XMediaObject *this, unsigned int *);
  int (__stdcall *Process)(XMediaObject *this, const _XMEDIAPACKET *, const _XMEDIAPACKET *);
  int (__stdcall *Discontinuity)(XMediaObject *this);
  int (__stdcall *Flush)(XMediaObject *this);
};

/* 2000 */
struct __cppobj CAutoIrql
{
  CIrql m_irql;
};

/* 2001 */
struct __cppobj CFpState
{
};

/* 2002 */
struct $64A6F8A9853CE387CB1DB8998682E731
{
  unsigned __int32 NotifyISO : 1;
  unsigned __int32 ReadISO : 1;
  unsigned __int32 WriteISO : 1;
  unsigned __int32 TrapOnNotifier : 1;
  unsigned __int32 Lock : 1;
  unsigned __int32 Mode : 3;
  unsigned __int32 TrapReason : 4;
  unsigned __int32 PIOClass : 1;
  unsigned __int32 EnableLock : 1;
  unsigned __int32 MethodOrigin : 1;
  unsigned __int32 ValidSESSL : 1;
  unsigned __int32 ValidSESGE : 1;
  unsigned __int32 ValidGPSGE : 1;
};

/* 2003 */
union R_FE_CONTROL
{
  $64A6F8A9853CE387CB1DB8998682E731 __s0;
  unsigned int uValue;
};

/* 2004 */
struct $D5B17B30D6F5F09C16B597E2C98C93EB
{
  unsigned __int32 Length : 16;
  unsigned __int32 ContSize : 2;
  unsigned __int32 Samples : 5;
  unsigned __int32 Stereo : 1;
  unsigned __int32 Owner : 1;
  unsigned __int32 : 6;
  unsigned __int32 Intr : 1;
};

/* 2005 */
union $05BF53E4151B73E91D68CA6987C94F06
{
  $D5B17B30D6F5F09C16B597E2C98C93EB __s0;
  unsigned int uValue;
};

/* 2006 */
struct MCP1_PRD
{
  unsigned int uAddr;
  $05BF53E4151B73E91D68CA6987C94F06 Control;
};

/* 2007 */
struct __cppobj CAutoFpState
{
  CFpState m_fps;
};

/* 2008 */
struct __cppobj CSensaura3d
{
};

/* 2009 */
struct $645EF83E2F348B685761A902279B4FB1
{
  unsigned int TVL;
  unsigned int CVL;
  unsigned int NVL;
};

/* 2010 */
const struct $3FDBC20F28542434CB290D58A38A3033
{
  unsigned int TVL;
  unsigned int CVL;
  unsigned int NVL;
};

/* 2011 */
struct $85C18268D143D6C9D9E7E2C9A248C4F2
{
  unsigned int Size;
  unsigned int Alignment;
};

/* 2012 */
typedef void (__cdecl *D3DSWAPCALLBACK)(_D3DSWAPDATA *);

/* 2013 */
typedef _MESSAGE_RESOURCE_ENTRY *PMESSAGE_RESOURCE_ENTRY;

/* 2014 */
typedef void (__stdcall *WAITORTIMERCALLBACKFUNC)(void *, unsigned __int8);

/* 2015 */
typedef HDC__ *HDC;

/* 2016 */
typedef _RTL_HANDLE_TABLE *PRTL_HANDLE_TABLE;

/* 2017 */
typedef _IMAGE_DEBUG_DIRECTORY *PIMAGE_DEBUG_DIRECTORY;

/* 2018 */
typedef _CM_PARTIAL_RESOURCE_LIST *PCM_PARTIAL_RESOURCE_LIST;

/* 2019 */
typedef IDirectXFileBinary **LPLPDIRECTXFILEBINARY;

/* 2020 */
typedef unsigned __int16 wchar_t;

/* 2021 */
typedef $69BEB1EA134F8604F6F58F4A3DA47D43 Nv04aCharacter32[];

/* 2022 */
typedef unsigned __int8 *LPBYTE;

/* 2023 */
typedef IUnknown *LPUNKNOWN;

/* 2024 */
typedef _SYSTEM_PROCESSOR_INFORMATION *PSYSTEM_PROCESSOR_INFORMATION;

/* 2025 */
typedef _DEVICE_OBJECT *PDEVICE_OBJECT;

/* 2026 */
typedef _CSTRING *PCOBJECT_STRING;

/* 2027 */
typedef __int64 *LPREFERENCE_TIME;

/* 2028 */
typedef _IMAGE_RESOURCE_DIRECTORY_ENTRY *PIMAGE_RESOURCE_DIRECTORY_ENTRY;

/* 2029 */
typedef _KMUTANT *PRKMUTANT;

/* 2030 */
typedef _LDR_ENUM_RESOURCE_ENTRY *PLDR_ENUM_RESOURCE_ENTRY;

/* 2031 */
typedef D3DIndexBuffer *LPDIRECT3DINDEXBUFFER8;

/* 2032 */
typedef void (__stdcall *PHAL_SHUTDOWN_NOTIFICATION)(_HAL_SHUTDOWN_REGISTRATION *);

/* 2033 */
typedef sockaddr *PSOCKADDR;

/* 2034 */
typedef unsigned __int8 KIO_ACCESS_MAP[8192];

/* 2035 */
typedef _SYSTEM_CALL_COUNT_INFORMATION *PSYSTEM_CALL_COUNT_INFORMATION;

/* 2036 */
typedef HKEY__ **PHKEY;

/* 2037 */
typedef _DISK_GEOMETRY *PDISK_GEOMETRY;

/* 2038 */
typedef unsigned __int8 (__stdcall *PPROCESS_STARTER_ROUTINE)(void *);

/* 2039 */
typedef _OBJECT_SYMBOLIC_LINK *POBJECT_SYMBOLIC_LINK;

/* 2040 */
typedef _DBGKD_READ_WRITE_IO32 *PDBGKD_READ_WRITE_IO32;

/* 2041 */
typedef _OSVERSIONINFOW *POSVERSIONINFOW;

/* 2042 */
typedef _ERWLOCK *PERWLOCK;

/* 2043 */
typedef _PORT_MESSAGE *PPORT_MESSAGE;

/* 2044 */
typedef void (__stdcall *OB_CLOSE_METHOD)(void *, unsigned int);

/* 2045 */
typedef void (__stdcall *PIMAGE_TLS_CALLBACK)(void *, unsigned int, void *);

/* 2046 */
typedef HWINSTA__ *HWINSTA;

/* 2047 */
typedef int (__stdcall *PENTER_STATE_HANDLER)(void *, int (__stdcall *)(void *), void *, int, int *volatile);

/* 2048 */
typedef _OSVERSIONINFOA *POSVERSIONINFOA;

/* 2049 */
typedef _KEY_VALUE_ENTRY *PKEY_VALUE_ENTRY;

/* 2050 */
typedef NSR_EA_FILETIMES *PNSR_EA_FILETIMES;

/* 2051 */
typedef unsigned __int64 *PDWORDLONG;

/* 2052 */
typedef _IMAGE_FUNCTION_ENTRY *PIMAGE_FUNCTION_ENTRY;

/* 2053 */
typedef _ALPHA_NT5_CONTEXT *PALPHA_NT5_CONTEXT;

/* 2054 */
typedef _LDR_DATA_TABLE_ENTRY32 *PLDR_DATA_TABLE_ENTRY32;

/* 2055 */
typedef ID3DXEffect *LPD3DXEFFECT;

/* 2056 */
typedef _XINPUT_RUMBLE *PXINPUT_RUMBLE;

/* 2057 */
typedef $2B5B3004EA38C9713AA7A291F048C9C2 Nv04aCharacter128[];

/* 2058 */
typedef _BIN_RANGE *PBIN_RANGE;

/* 2059 */
typedef void *LOCALHANDLE;

/* 2060 */
typedef float NV_PATCH_CURVE_COEFFS[16][4];

/* 2061 */
typedef int (__stdcall *FARPROC)();

/* 2062 */
typedef _IMAGE_EXPORT_DIRECTORY *PIMAGE_EXPORT_DIRECTORY;

/* 2063 */
typedef _SYSTEM_SESSION_PROCESS_INFORMATION *PSYSTEM_SESSION_PROCESS_INFORMATION;

/* 2064 */
typedef _PEB_LDR_DATA *PPEB_LDR_DATA;

/* 2065 */
typedef _DSFX_ECHO_STEREO_STATE *LPDSFX_ECHO_STEREO_STATE;

/* 2066 */
typedef _EXCEPTION_RECORD *LPEXCEPTION_RECORD;

/* 2067 */
typedef unsigned __int8 (__stdcall *PRTL_CONFLICT_RANGE_CALLBACK)(void *, _RTL_RANGE *);

/* 2068 */
typedef _CM_PNP_BIOS_INSTALLATION_CHECK *PCM_PNP_BIOS_INSTALLATION_CHECK;

/* 2069 */
typedef POWER_ACTION *PPOWER_ACTION;

/* 2070 */
typedef __int16 S016;

/* 2071 */
typedef unsigned __int16 U016;

/* 2072 */
typedef NSRLBA *PNSRLBA;

/* 2073 */
typedef unsigned __int16 V016;

/* 2074 */
typedef D3DPalette *LPDIRECT3DPALETTE8;

/* 2075 */
typedef int *PSPFN_NUMBER;

/* 2076 */
typedef unsigned __int8 (__stdcall *PKSYNCHRONIZE_ROUTINE)(void *);

/* 2077 */
typedef unsigned __int16 *PTCH;

/* 2078 */
typedef char NvS8;

/* 2079 */
typedef void (*PWINDBG_OUTPUT_ROUTINE)(const char *, ...);

/* 2080 */
typedef unsigned __int64 *PUINT64;

/* 2081 */
typedef $DEF201ACE12EAAEC538CF40207F9D560 Nv04aCharacter8[];

/* 2082 */
typedef _OSVERSIONINFOW *POSVERSIONINFO;

/* 2083 */
typedef _XINPUT_FEEDBACK *PXINPUT_FEEDBACK;

/* 2084 */
typedef _FILE_LINK_INFORMATION *PFILE_LINK_INFORMATION;

/* 2085 */
typedef void *HGDIOBJ;

/* 2086 */
typedef int (__stdcall *PRTL_ENUM_HEAPS_ROUTINE)(void *, void *);

/* 2087 */
typedef unsigned int D3DPOOL;

/* 2088 */
typedef _DES3TABLE *PDES3TABLE;

/* 2089 */
typedef const _DSI3DL2LISTENER *REFDSI3DL2LISTENER;

/* 2090 */
typedef NSR_EA_GENERIC *PNSR_EA_GENERIC;

/* 2091 */
typedef _KTHREAD *PRKTHREAD;

/* 2092 */
typedef _OSVERSIONINFOEXW *POSVERSIONINFOEX;

/* 2093 */
typedef _OPC_TABLE_ENTRY *POPC_TABLE_ENTRY;

/* 2094 */
typedef _RTL_HEAP_USAGE *PRTL_HEAP_USAGE;

/* 2095 */
typedef _CDROM_DISK_DATA *PCDROM_DISK_DATA;

/* 2096 */
typedef void (__stdcall *LPFNAC97CHANNELCALLBACK)(void *);

/* 2097 */
typedef _VOLUME_CONTROL *PVOLUME_CONTROL;

/* 2098 */
typedef fd_set *PFD_SET;

/* 2099 */
typedef _CROSS_PLATFORM_THREAD *PCROSS_PLATFORM_THREAD;

/* 2100 */
typedef _FAT_ASYNC_IO_DESCRIPTOR *PFAT_ASYNC_IO_DESCRIPTOR;

/* 2101 */
typedef _SYSTEM_CRASH_STATE_INFORMATION *PSYSTEM_CRASH_STATE_INFORMATION;

/* 2102 */
typedef _ALPHA_CONTEXT *PALPHA_CONTEXT;

/* 2103 */
typedef _REASSIGN_BLOCKS *PREASSIGN_BLOCKS;

/* 2104 */
typedef unsigned int *PULONG32;

/* 2105 */
typedef _DBGKD_TRACE_DATA *PDBGKD_TRACE_DATA;

/* 2106 */
typedef _KFLOATING_SAVE *PKFLOATING_SAVE;

/* 2107 */
typedef unsigned __int8 NvU8;

/* 2108 */
typedef int *PBOOL;

/* 2109 */
typedef HICON__ *HCURSOR;

/* 2110 */
typedef tagPOINT *PPOINT;

/* 2111 */
typedef _IMAGE_AUX_SYMBOL *PIMAGE_AUX_SYMBOL;

/* 2112 */
typedef float FLOAT;

/* 2113 */
typedef _PERF_BIN *PPERF_BIN;

/* 2114 */
typedef _EISA_DMA_CONFIGURATION *PEISA_DMA_CONFIGURATION;

/* 2115 */
typedef const _DSEFFECTIMAGELOC *LPCDSEFFECTIMAGELOC;

/* 2116 */
typedef _OSVERSIONINFOEXW *POSVERSIONINFOEXW;

/* 2117 */
typedef _DVD_SET_RPC_KEY *PDVD_SET_RPC_KEY;

/* 2118 */
typedef VSD_TEA01 *PVSD_TEA01;

/* 2119 */
typedef BSAFE_KEY_PARTS *LPBSAFE_KEY_PARTS;

/* 2120 */
typedef unsigned __int8 NvV8;

/* 2121 */
typedef IClassFactory *LPCLASSFACTORY;

/* 2122 */
typedef _OSVERSIONINFOEXW *LPOSVERSIONINFOEXW;

/* 2123 */
typedef _X86_KPROCESSOR_STATE *PX86_KPROCESSOR_STATE;

/* 2124 */
typedef _OSVERSIONINFOEXA *POSVERSIONINFOEXA;

/* 2125 */
typedef _IDE_SECURITY_DATA *PIDE_SECURITY_DATA;

/* 2126 */
typedef _DVDX2_ADVANCED_DRIVE_CONTROL *PDVDX2_ADVANCED_DRIVE_CONTROL;

/* 2127 */
typedef _TOKEN_DEFAULT_DACL *PTOKEN_DEFAULT_DACL;

/* 2128 */
typedef float *PFLOAT;

/* 2129 */
typedef _READ_BLOCK_LIMITS *PREAD_BLOCK_LIMITS_DATA;

/* 2130 */
typedef _FILE_MAILSLOT_QUERY_INFORMATION *PFILE_MAILSLOT_QUERY_INFORMATION;

/* 2131 */
typedef unsigned int UINT;

/* 2132 */
typedef unsigned int *PULONG;

/* 2133 */
typedef _CDAUDIO_CONTROL_PAGE *PCDAUDIO_CONTROL_PAGE;

/* 2134 */
typedef _CM_INT13_DRIVE_PARAMETER *PCM_INT13_DRIVE_PARAMETER;

/* 2135 */
typedef unsigned __int16 BAD_TRACK_NUMBER;

/* 2136 */
typedef int *PINT;

/* 2137 */
typedef _OBJECT_NAME_INFORMATION *POBJECT_NAME_INFORMATION;

/* 2138 */
typedef const _DSFX_ECHO_MONO_STATE *LPCDSFX_ECHO_MONO_STATE;

/* 2139 */
typedef tagPOINTS *PPOINTS;

/* 2140 */
typedef HRGN__ *HRGN;

/* 2141 */
typedef unsigned int EXECUTION_STATE;

/* 2142 */
typedef _CM_SONIC_DEVICE_DATA *PCM_SONIC_DEVICE_DATA;

/* 2143 */
typedef _POINTL *PPOINTL;

/* 2144 */
typedef _GET_TEB_ADDRESS *PGET_TEB_ADDRESS;

/* 2145 */
typedef int (__stdcall *PDBGSS_DBGKM_APIMSG_FILTER)(_DBGKM_APIMSG *);

/* 2146 */
typedef unsigned int (__stdcall *PWINDBG_READ_PROCESS_MEMORY_ROUTINE)(unsigned int, void *, unsigned int, unsigned int *);

/* 2147 */
typedef unsigned int FOURCC;

/* 2148 */
typedef _FLOAT128 *PFLOAT128;

/* 2149 */
typedef _DMA_SPEED *PDMA_SPEED;

/* 2150 */
typedef _DBGKD_WRITE_BREAKPOINT64 *PDBGKD_WRITE_BREAKPOINT64;

/* 2151 */
typedef _IMAGE_RESOURCE_DIR_STRING_U *PIMAGE_RESOURCE_DIR_STRING_U;

/* 2152 */
typedef _NT_PRODUCT_TYPE *PNT_PRODUCT_TYPE;

/* 2153 */
typedef _IMAGE_THUNK_DATA32 *PIMAGE_THUNK_DATA;

/* 2154 */
typedef unsigned int (__stdcall *PHAL_PCISPACE_ACCESS_ROUTINE)(_PCI_TYPE1_CFG_BITS, unsigned int, void *);

/* 2155 */
typedef HMONITOR__ *HMONITOR;

/* 2156 */
typedef HBRUSH__ *HBRUSH;

/* 2157 */
typedef _DSFX_IIR_STATE *LPDSFX_IIR_STATE;

/* 2158 */
typedef _SE_IMPERSONATION_STATE *PSE_IMPERSONATION_STATE;

/* 2159 */
typedef void (__fastcall *PBLDR_LOAD_MEDIA_ROM_ROUTINE)(unsigned int);

/* 2160 */
typedef const mmtime_tag *LPCMMTIME;

/* 2161 */
typedef _FILE_DIRECTORY_INFORMATION *PFILE_DIRECTORY_INFORMATION;

/* 2162 */
typedef int __stdcall RTLP_START_THREAD(int (__stdcall *)(void *), void **);

/* 2163 */
typedef _SYSTEM_HANDLE_TABLE_ENTRY_INFO *PSYSTEM_HANDLE_TABLE_ENTRY_INFO;

/* 2164 */
typedef _DBGKD_GET_VERSION32 *PDBGKD_GET_VERSION32;

/* 2165 */
typedef _FSINFOCLASS *PFS_INFORMATION_CLASS;

/* 2166 */
typedef D3DVolumeTexture *PDIRECT3DVOLUMETEXTURE8;

/* 2167 */
typedef _MMPFNFREE *PMMPFNFREE;

/* 2168 */
typedef IDirectXFileEnumObject **LPLPDIRECTXFILEENUMOBJECT;

/* 2169 */
typedef unsigned int (__stdcall *PSYM_DUMP_FIELD_CALLBACK)(_FIELD_INFO *, void *);

/* 2170 */
typedef unsigned int COLORREF;

/* 2171 */
typedef unsigned __int16 *PWCHAR;

/* 2172 */
typedef const VADSTREAMEVENTSINK *REFVADSTREAMEVENTSINK;

/* 2173 */
typedef D3DDevice *LPDIRECT3DDEVICE8;

/* 2174 */
typedef _CDROM_SUB_Q_DATA_FORMAT *PCDROM_SUB_Q_DATA_FORMAT;

/* 2175 */
typedef unsigned int (__stdcall *pfXcPKDecPrivate)(unsigned __int8 *, unsigned __int8 *, unsigned __int8 *);

/* 2176 */
typedef _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY *PIMAGE_RUNTIME_FUNCTION_ENTRY;

/* 2177 */
typedef _X86_NT5_KPROCESSOR_STATE *PX86_NT5_KPROCESSOR_STATE;

/* 2178 */
typedef _LAST_EXCEPTION_LOG *PLAST_EXCEPTION_LOG;

/* 2179 */
typedef unsigned __int64 *PULONGLONG;

/* 2180 */
typedef const D3DXVECTOR3 *REFD3DXVECTOR3;

/* 2181 */
typedef _CM_EISA_FUNCTION_INFORMATION *PCM_EISA_FUNCTION_INFORMATION;

/* 2182 */
typedef _X86PAE_HARDWARE_PTE *PX86PAE_HARDWARE_PTE;

/* 2183 */
typedef _FILTER_TABLES *PFILTER_TABLES;

/* 2184 */
typedef _KSWITCHFRAME *PKSWITCHFRAME;

/* 2185 */
typedef _XBEIMAGE_SECTION *PXBEIMAGE_SECTION;

/* 2186 */
typedef _XBEIMAGE_LIBRARY_VERSION *PXBEIMAGE_LIBRARY_VERSION;

/* 2187 */
typedef int (__stdcall *PRTL_ACQUIRE_LOCK_ROUTINE)(void *);

/* 2188 */
typedef unsigned __int16 *PUSHORT;

/* 2189 */
typedef _ACL *PACL;

/* 2190 */
typedef _DBGKD_MANIPULATE_STATE64 *PDBGKD_MANIPULATE_STATE64;

/* 2191 */
typedef _PCI_PMCSR_BSE *PPCI_PMCSR_BSE;

/* 2192 */
typedef ACIPRD *LPACIPRD;

/* 2193 */
typedef unsigned int MMCOLOR;

/* 2194 */
typedef void (__fastcall *PTIME_UPDATE_NOTIFY_ROUTINE)(void *, char);

/* 2195 */
typedef _KSEMAPHORE *PKSEMAPHORE;

/* 2196 */
typedef _STRING *PSTRING;

/* 2197 */
typedef unsigned int (__stdcall *PWINDBG_WRITE_PROCESS_MEMORY_ROUTINE64)(unsigned __int64, const void *, unsigned int, unsigned int *);

/* 2198 */
typedef _SMBUS_STATUS_BLOCK *PSMBUS_STATUS_BLOCK;

/* 2199 */
typedef unsigned int *PSECURITY_INFORMATION;

/* 2200 */
typedef unsigned int *PDVD_SESSION_ID;

/* 2201 */
typedef _FILE_INTERNAL_INFORMATION *PFILE_INTERNAL_INFORMATION;

/* 2202 */
typedef IDirectXFileObject *LPDIRECTXFILEOBJECT;

/* 2203 */
typedef _SUB_Q_HEADER *PSUB_Q_HEADER;

/* 2204 */
typedef _IO_STACK_LOCATION *PIO_STACK_LOCATION;

/* 2205 */
typedef _RANGE_LIST_ITERATOR *PRTL_RANGE_LIST_ITERATOR;

/* 2206 */
typedef _EXCEPTION_REGISTRATION_RECORD *PEXCEPTION_REGISTRATION_RECORD;

/* 2207 */
typedef _DBGKD_CONTINUE2 *PDBGKD_CONTINUE2;

/* 2208 */
typedef int LRESULT;

/* 2209 */
typedef int HRESULT;

/* 2210 */
typedef void (__stdcall *PIDE_START_PACKET_ROUTINE)(_DEVICE_OBJECT *, _IRP *);

/* 2211 */
typedef unsigned int *PKAFFINITY;

/* 2212 */
typedef unsigned int (__stdcall *NVDE_TEST_FUNC)();

/* 2213 */
typedef _DBGKD_GET_INTERNAL_BREAKPOINT64 *PDBGKD_GET_INTERNAL_BREAKPOINT64;

/* 2214 */
typedef _X86_NT5_KPROCESSOR_STATE *PDBGKD_KPROCESSOR_STATE_WIRE;

/* 2215 */
typedef _SENDCMDINPARAMS *PSENDCMDINPARAMS;

/* 2216 */
typedef unsigned int *PDWORD;

/* 2217 */
typedef _DMXAPI *PDMXAPI;

/* 2218 */
typedef LIST_ENTRY32 *PLIST_ENTRY32;

/* 2219 */
typedef void (__stdcall *PWINDBG_OLD_EXTENSION_ROUTINE)(unsigned int, _WINDBG_EXTENSION_APIS *, const char *);

/* 2220 */
typedef _READCONTROLSPACE64 *PREADCONTROLSPACE64;

/* 2221 */
typedef MCPX_VOICE_VOLUME *LPMCPX_VOICE_VOLUME;

/* 2222 */
typedef NSR_IMPUSE *PNSR_IMPUSE;

/* 2223 */
typedef unsigned int Nv04cTypedef;

/* 2224 */
typedef unsigned int *PDWORD32;

/* 2225 */
typedef unsigned int uintptr_t;

/* 2226 */
typedef _DVDX2_ADVANCED_DRIVE_CONTROL_PAGE *PDVDX2_ADVANCED_DRIVE_CONTROL_PAGE;

/* 2227 */
typedef _FILE_FS_SIZE_INFORMATION *PFILE_FS_SIZE_INFORMATION;

/* 2228 */
typedef _DRIVERSTATUS *PDRIVERSTATUS;

/* 2229 */
typedef _WINDBG_EXTENSION_APIS64 *PWINDBG_EXTENSION_APIS64;

/* 2230 */
typedef __int64 LONG64;

/* 2231 */
typedef unsigned int *PLOGICAL;

/* 2232 */
typedef _IDE_DISK_EXTENSION *PIDE_DISK_EXTENSION;

/* 2233 */
typedef _PORT_DATA_ENTRY *PPORT_DATA_ENTRY;

/* 2234 */
typedef _FILE_MAILSLOT_SET_INFORMATION *PFILE_MAILSLOT_SET_INFORMATION;

/* 2235 */
typedef PROCESSOR_STATE_HANDLER *PPROCESSOR_STATE_HANDLER;

/* 2236 */
typedef _XBOX_KRNL_VERSION *PXBOX_KRNL_VERSION;

/* 2237 */
typedef void (__stdcall *PKDEFERRED_ROUTINE)(_KDPC *, void *, void *, void *);

/* 2238 */
typedef _POWER_STATE_TYPE *PPOWER_STATE_TYPE;

/* 2239 */
typedef _SYSTEM_QUERY_TIME_ADJUST_INFORMATION *PSYSTEM_QUERY_TIME_ADJUST_INFORMATION;

/* 2240 */
typedef _GDF_FCB *PGDF_FCB;

/* 2241 */
typedef EXT_API_VERSION *(__stdcall *PWINDBG_EXTENSION_API_VERSION)();

/* 2242 */
typedef _RECTL *PRECTL;

/* 2243 */
typedef void (__stdcall *WORKERCALLBACKFUNC)(void *);

/* 2244 */
typedef D3DPushBuffer *PDIRECT3DPUSHBUFFER8;

/* 2245 */
typedef _INTERFACE_TYPE *PINTERFACE_TYPE;

/* 2246 */
typedef _RTL_HEAP_USAGE_ENTRY *PRTL_HEAP_USAGE_ENTRY;

/* 2247 */
typedef _RTL_RANGE *PRTL_RANGE;

/* 2248 */
typedef _DBGKD_PRINT_STRING *PDBGKD_PRINT_STRING;

/* 2249 */
typedef _DSFX_AMPMOD_MONO_PARAMS *LPDSFX_AMPMOD_MONO_PARAMS;

/* 2250 */
typedef _XSOUNDTRACK_DATA *PXSOUNDTRACK_DATA;

/* 2251 */
typedef char *va_list;

/* 2252 */
typedef NSR_INTEG *PNSR_INTEG;

/* 2253 */
typedef NSRLENGTH *PNSRLENGTH;

/* 2254 */
typedef _EXCEPTION_POINTERS *LPEXCEPTION_POINTERS;

/* 2255 */
typedef _PROCESS_ACCESS_TOKEN *PPROCESS_ACCESS_TOKEN;

/* 2256 */
typedef D3DK::FDMatrix *FDMatrixAttrSet[16];

/* 2257 */
typedef __int16 HALF_PTR;

/* 2258 */
typedef _DBGKD_DEBUG_IO *PDBGKD_DEBUG_IO;

/* 2259 */
typedef const _DSFX_AMPMOD_MONO_STATE *LPCDSFX_AMPMOD_MONO_STATE;

/* 2260 */
typedef _DBGKD_WAIT_STATE_CHANGE64_X86_NT5 *PX86_NT5_DBGKD_WAIT_STATE_CHANGE64_X86_NT5;

/* 2261 */
typedef _SUB_Q_TRACK_ISRC *PSUB_Q_TRACK_ISRC;

/* 2262 */
typedef _DSFX_IIR2_STATE *LPDSFX_IIR2_STATE;

/* 2263 */
typedef int (__stdcall *PDBGSS_INITIALIZE_ROUTINE)(void *, int (__stdcall *)(_CLIENT_ID *, _CLIENT_ID *), int (__stdcall *)(_CLIENT_ID *, unsigned int *, unsigned __int8), int (__stdcall *)(_DBGKM_APIMSG *));

/* 2264 */
typedef HACCEL__ *HACCEL;

/* 2265 */
typedef _SCSI_PASS_THROUGH *PSCSI_PASS_THROUGH;

/* 2266 */
typedef tagSIZE *LPSIZE;

/* 2267 */
typedef _DSENVELOPEDESC *LPDSENVELOPEDESC;

/* 2268 */
typedef char _TCHAR;

/* 2269 */
typedef _SYSTEM_CONTEXT_SWITCH_INFORMATION *PSYSTEM_CONTEXT_SWITCH_INFORMATION;

/* 2270 */
typedef unsigned __int16 *PTCHAR;

/* 2271 */
typedef _EISA_IRQ_DESCRIPTOR *PEISA_IRQ_DESCRIPTOR;

/* 2272 */
typedef _LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[1];

/* 2273 */
typedef int (__stdcall *PRTL_HEAP_COMMIT_ROUTINE)(void *, void **, unsigned int *);

/* 2274 */
typedef _RTL_PERTHREAD_CURDIR *PRTL_PERTHREAD_CURDIR;

/* 2275 */
typedef SHORTAD *PAD_GENERIC;

/* 2276 */
typedef _IMAGE_TLS_DIRECTORY64 *PIMAGE_TLS_DIRECTORY64;

/* 2277 */
typedef _KWAIT_BLOCK *PRKWAIT_BLOCK;

/* 2278 */
typedef _KAPC_STATE *PKAPC_STATE;

/* 2279 */
typedef _FAT_FCB *PFAT_FCB;

/* 2280 */
typedef _IMAGE_SYMBOL *PIMAGE_SYMBOL;

/* 2281 */
typedef _PCI_DEVICE_DESCRIPTOR *PPCI_DEVICE_DESCRIPTOR;

/* 2282 */
typedef void (__stdcall *PWINDBG_EXTENSION_DLL_INIT64)(_WINDBG_EXTENSION_APIS64 *, unsigned __int16, unsigned __int16);

/* 2283 */
typedef const _DSFX_FLANGE_MONO_PARAMS *LPCDSFX_FLANGE_MONO_PARAMS;

/* 2284 */
typedef _IA64_KPROCESSOR_STATE *PIA64_KPROCESSOR_STATE;

/* 2285 */
typedef POWER_ACTION_POLICY *PPOWER_ACTION_POLICY;

/* 2286 */
typedef tagSIZE *LPSIZEL;

/* 2287 */
typedef _DBGSS_CREATE_PROCESS *PDBGSS_CREATE_PROCESS;

/* 2288 */
typedef _IA64_KTRAP_FRAME *PIA64_KTRAP_FRAME;

/* 2289 */
typedef _DBGKD_MANIPULATE_STATE64 *PDBGKD_MANIPULATE_STATE3264;

/* 2290 */
typedef _KDEVICE_QUEUE *PRKDEVICE_QUEUE;

/* 2291 */
typedef _FAT_TIME_STAMP *PFAT_TIME_STAMP;

/* 2292 */
typedef _RTL_GENERIC_TABLE *PRTL_GENERIC_TABLE;

/* 2293 */
typedef IPersist *LPPERSIST;

/* 2294 */
typedef _DVDX2_AUTHENTICATION *PDVDX2_AUTHENTICATION;

/* 2295 */
typedef const _GUID *LPCGUID;

/* 2296 */
typedef _MODE_FORMAT_PAGE *PMODE_FORMAT_PAGE;

/* 2297 */
typedef _KGDTENTRY *PKGDTENTRY;

/* 2298 */
typedef _FILE_FS_CONTROL_INFORMATION *PFILE_FS_CONTROL_INFORMATION;

/* 2299 */
typedef _OBJECT_HEADER_NAME_INFO *POBJECT_HEADER_NAME_INFO;

/* 2300 */
typedef unsigned int *LPCOLORREF;

/* 2301 */
typedef void (__stdcall *SetComplexRenderStateFunction)(unsigned int);

/* 2302 */
typedef _POOL_TRACKER_TABLE *PPOOL_TRACKER_TABLE;

/* 2303 */
typedef _DBG_STATE *PDBG_STATE;

/* 2304 */
typedef _FIRMWARE_REENTRY *PFIRMWARE_REENTRY;

/* 2305 */
typedef _IO_RESOURCE_LIST *PIO_RESOURCE_LIST;

/* 2306 */
typedef _RAW_VOLUME_EXTENSION *PRAW_VOLUME_EXTENSION;

/* 2307 */
typedef _XBEIMAGE_IMPORT_DESCRIPTOR *PXBEIMAGE_IMPORT_DESCRIPTOR;

/* 2308 */
typedef void (__stdcall *pfXcBlockCryptCBC)(unsigned int, unsigned int, unsigned __int8 *, unsigned __int8 *, unsigned __int8 *, unsigned int, unsigned __int8 *);

/* 2309 */
typedef const _DSFX_FLANGE_STEREO_STATE *LPCDSFX_FLANGE_STEREO_STATE;

/* 2310 */
typedef D3DVertexBuffer *PDIRECT3DVERTEXBUFFER8;

/* 2311 */
typedef long double F064;

/* 2312 */
typedef PARTMAP_GENERIC *PPARTMAP_GENERIC;

/* 2313 */
typedef unsigned __int8 byte;

/* 2314 */
typedef unsigned int Nv079Typedef;

/* 2315 */
typedef void (__stdcall *LPFIBER_START_ROUTINE)(void *);

/* 2316 */
typedef unsigned int Nv078Typedef;

/* 2317 */
typedef unsigned int Nv075Typedef;

/* 2318 */
typedef unsigned int Nv074Typedef;

/* 2319 */
typedef unsigned int Nv073Typedef;

/* 2320 */
typedef _DBGUI_WAIT_STATE_CHANGE *PDBGUI_WAIT_STATE_CHANGE;

/* 2321 */
typedef unsigned int Nv071Typedef;

/* 2322 */
typedef unsigned int Nv070Typedef;

/* 2323 */
typedef unsigned __int8 (__stdcall *PIDE_POLL_RESET_COMPLETE_ROUTINE)();

/* 2324 */
typedef _EISA_PORT_CONFIGURATION *PEISA_PORT_CONFIGURATION;

/* 2325 */
typedef _KEVENT *PRKEVENT;

/* 2326 */
typedef _PORT_OUTPUT *PPORT_OUTPUT;

/* 2327 */
typedef _SENDCMDOUTPARAMS *LPSENDCMDOUTPARAMS;

/* 2328 */
typedef _RTL_CRITICAL_SECTION *PRTL_CRITICAL_SECTION;

/* 2329 */
typedef _DVD_LAYER_DESCRIPTOR *PDVD_LAYER_DESCRIPTOR;

/* 2330 */
typedef unsigned __int8 (__stdcall *PRTL_OKAY_TO_LOCK_ROUTINE)(void *);

/* 2331 */
typedef HPEN__ *HPEN;

/* 2332 */
typedef _IMAGE_BASE_RELOCATION *PIMAGE_BASE_RELOCATION;

/* 2333 */
typedef D3DSurface *LPDIRECT3DSURFACE8;

/* 2334 */
typedef const _DSFX_I3DL2REVERB_DELAYLINE *LPCDSFX_I3DL2REVERB_DELAYLINE;

/* 2335 */
typedef _DBGKD_QUERY_SPECIAL_CALLS *PDBGKD_QUERY_SPECIAL_CALLS;

/* 2336 */
typedef void *PVOID;

/* 2337 */
typedef unsigned __int16 OLECHAR;

/* 2338 */
typedef _DSBPOSITIONNOTIFY *LPDSBPOSITIONNOTIFY;

/* 2339 */
typedef unsigned int UINT32;

/* 2340 */
typedef unsigned int Nv07fTypedef;

/* 2341 */
typedef unsigned int Nv07eTypedef;

/* 2342 */
typedef unsigned int Nv07dTypedef;

/* 2343 */
typedef int *PINT32;

/* 2344 */
typedef _DSFX_I3DL2REVERB_IIR *LPDSFX_I3DL2REVERB_IIR;

/* 2345 */
typedef _DSFX_AMPMOD_STEREO_STATE *LPDSFX_AMPMOD_STEREO_STATE;

/* 2346 */
typedef _SYSTEM_MEMORY_INFO *PSYSTEM_MEMORY_INFO;

/* 2347 */
typedef _RTL_HEAP_TAG_INFO *PRTL_HEAP_TAG_INFO;

/* 2348 */
typedef MCPX_DEFERRED_COMMAND *LPMCPX_DEFERRED_COMMAND;

/* 2349 */
typedef _X86_DESCRIPTOR *PX86_DESCRIPTOR;

/* 2350 */
typedef void (__stdcall *PKKERNEL_ROUTINE)(_KAPC *, void (__stdcall **)(void *, void *, void *), void **, void **, void **);

/* 2351 */
typedef _PROCESS_DEVICEMAP_INFORMATION *PPROCESS_DEVICEMAP_INFORMATION;

/* 2352 */
typedef _ALPHA_KEXCEPTION_FRAME *PALPHA_KEXCEPTION_FRAME;

/* 2353 */
typedef _MMVAD *PMMVAD;

/* 2354 */
typedef _DUMMY_FILE_OBJECT *PDUMMY_FILE_OBJECT;

/* 2355 */
typedef _KDDEBUGGER_DATA64 *PKDDEBUGGER_DATA64;

/* 2356 */
typedef ICBFILE *PICBFILE;

/* 2357 */
typedef _DBGKD_SET_INTERNAL_BREAKPOINT32 *PDBGKD_SET_INTERNAL_BREAKPOINT32;

/* 2358 */
typedef _KDEVICE_QUEUE_ENTRY *PRKDEVICE_QUEUE_ENTRY;

/* 2359 */
typedef int __stdcall LPCSVR_CONNECT(void *, _PORT_MESSAGE *, unsigned __int8 *);

/* 2360 */
typedef const _DSCAPS *LPCDSCAPS;

/* 2361 */
typedef _FILE_EA_INFORMATION *PFILE_EA_INFORMATION;

/* 2362 */
typedef _TRACK_MODE_TYPE *PTRACK_MODE_TYPE;

/* 2363 */
typedef _TOKEN_TYPE *PTOKEN_TYPE;

/* 2364 */
typedef _COMPLETION_PACKET_TYPE *PCOMPLETION_PACKET_TYPE;

/* 2365 */
typedef _ACCESS_ALLOWED_ACE *PACCESS_ALLOWED_ACE;

/* 2366 */
typedef _FP_64 *PFP_64;

/* 2367 */
typedef const _DSFILTERDESC *LPCDSFILTERDESC;

/* 2368 */
typedef volatile $92EDA9352521CF8B803F3949380779C8 *PNICCSR;

/* 2369 */
typedef const unsigned __int16 *LPCWCH;

/* 2370 */
typedef _DBGKM_EXIT_THREAD *PDBGKM_EXIT_THREAD;

/* 2371 */
typedef _DBGUI_CREATE_THREAD *PDBGUI_CREATE_THREAD;

/* 2372 */
typedef _FILE_NETWORK_OPEN_INFORMATION *PFILE_NETWORK_OPEN_INFORMATION;

/* 2373 */
typedef NSR_VD_GENERIC *PNSR_VD_GENERIC;

/* 2374 */
typedef const _DSFX_FLANGE_MONO_STATE *LPCDSFX_FLANGE_MONO_STATE;

/* 2375 */
typedef _DIRECTORY_ENUM_CONTEXT *PDIRECTORY_ENUM_CONTEXT;

/* 2376 */
typedef _RTL_HEAP_INFORMATION *PRTL_HEAP_INFORMATION;

/* 2377 */
typedef PROCESSOR_IDLE_HANDLER_INFO *PPROCESSOR_IDLE_HANDLER_INFO;

/* 2378 */
typedef unsigned __int8 *PUCHAR;

/* 2379 */
typedef unsigned __int16 TUCHAR;

/* 2380 */
typedef void (__stdcall *PIO_APC_ROUTINE)(void *, _IO_STATUS_BLOCK *, unsigned int);

/* 2381 */
typedef void *LPSECURITY_ATTRIBUTES;

/* 2382 */
typedef unsigned __int64 DWORDLONG;

/* 2383 */
typedef unsigned int (__stdcall *pfXcPKGetKeyLen)(unsigned __int8 *);

/* 2384 */
typedef int __stdcall LPCSVR_RUNDOWN(void *, _PORT_MESSAGE *);

/* 2385 */
typedef _COMPOUND_ACCESS_ALLOWED_ACE *PCOMPOUND_ACCESS_ALLOWED_ACE;

/* 2386 */
typedef _LPCSVR_FILTER_RESULT __stdcall LPCSVR_FILTER(void *, _PORT_MESSAGE *);

/* 2387 */
typedef _NLSTABLEINFO *PNLSTABLEINFO;

/* 2388 */
typedef _VM_COUNTERS *PVM_COUNTERS;

/* 2389 */
typedef _PREFIX_TABLE *PPREFIX_TABLE;

/* 2390 */
typedef _WSABUF *LPWSABUF;

/* 2391 */
typedef _ImageArchitectureEntry *PIMAGE_ARCHITECTURE_ENTRY;

/* 2392 */
typedef _LDR_DATA_TABLE_ENTRY *PLDR_DATA_TABLE_ENTRY;

/* 2393 */
typedef _ACL_SIZE_INFORMATION *PACL_SIZE_INFORMATION;

/* 2394 */
typedef CHARSPEC *PCHARSPEC;

/* 2395 */
typedef _CROSS_PLATFORM_WAIT_STATE_CHANGE64 *PCROSS_PLATFORM_WAIT_STATE_CHANGE64;

/* 2396 */
typedef const _DSFX_AMPMOD_MONO_PARAMS *LPCDSFX_AMPMOD_MONO_PARAMS;

/* 2397 */
typedef _IMAGE_DOS_HEADER *PIMAGE_DOS_HEADER;

/* 2398 */
typedef int LPARAM;

/* 2399 */
typedef _DVDX2_AUTHENTICATION_PAGE *PDVDX2_AUTHENTICATION_PAGE;

/* 2400 */
typedef _DSFX_IIR2_PARAMS *LPDSFX_IIR2_PARAMS;

/* 2401 */
typedef const void *LPCVOID;

/* 2402 */
typedef ID3DXMatrixStack *LPD3DXMATRIXSTACK;

/* 2403 */
typedef int (__stdcall *PDRIVER_DISMOUNTVOLUME)(_DEVICE_OBJECT *);

/* 2404 */
typedef unsigned __int16 *PWCH;

/* 2405 */
typedef ID3DXMesh *LPD3DXMESH;

/* 2406 */
typedef _FILE_DISPOSITION_INFORMATION *PFILE_DISPOSITION_INFORMATION;

/* 2407 */
typedef int *LPINT;

/* 2408 */
typedef _ALPHA_PARTIAL_KPRCB *PALPHA_PARTIAL_KPRCB;

/* 2409 */
typedef _SYSTEMTIME *LPSYSTEMTIME;

/* 2410 */
typedef void (__stdcall *LPFNFILTERLOOKUP)(float, float, int, const FIRFILTER8 **, const FIRFILTER8 **);

/* 2411 */
typedef _DSFX_DISTORTION_PARAMS *LPDSFX_DISTORTION_PARAMS;

/* 2412 */
typedef _FAT_VOLUME_METADATA *PFAT_VOLUME_METADATA;

/* 2413 */
typedef _MECHANICAL_STATUS_INFORMATION_HEADER *PMECHANICAL_STATUS_INFORMATION_HEADER;

/* 2414 */
typedef _SYSTEM_VDM_INSTEMUL_INFO *PSYSTEM_VDM_INSTEMUL_INFO;

/* 2415 */
typedef unsigned int WPARAM;

/* 2416 */
typedef _TRACK_INFORMATION *PTRACK_INFORMATION;

/* 2417 */
typedef _XBOOT_PARAM *PXBOOT_PARAM;

/* 2418 */
typedef _OSVERSIONINFOA *LPOSVERSIONINFOA;

/* 2419 */
typedef SYSTEM_POWER_CAPABILITIES *PSYSTEM_POWER_CAPABILITIES;

/* 2420 */
typedef int INT32;

/* 2421 */
typedef void (__stdcall *PKRUNDOWN_ROUTINE)(_KAPC *);

/* 2422 */
typedef IDirectXFileDataReference **LPLPDIRECTXFILEDATAREFERENCE;

/* 2423 */
typedef PROCESSOR_IDLE_TIMES *PPROCESSOR_IDLE_TIMES;

/* 2424 */
typedef _DSFX_ECHO_MONO_STATE *LPDSFX_ECHO_MONO_STATE;

/* 2425 */
typedef _DBGKM_UNLOAD_DLL *PDBGKM_UNLOAD_DLL;

/* 2426 */
typedef void (__stdcall *PISRCALLBACK)(unsigned int, unsigned int, unsigned int);

/* 2427 */
typedef ID3DXPMesh *LPD3DXPMESH;

/* 2428 */
typedef _SYSTEM_OBJECTTYPE_INFORMATION *PSYSTEM_OBJECTTYPE_INFORMATION;

/* 2429 */
typedef unsigned int Nv069Typedef;

/* 2430 */
typedef _IOSPACE_EX64 *PIOSPACE_EX64;

/* 2431 */
typedef unsigned int Nv068Typedef;

/* 2432 */
typedef _D3DXATTRIBUTEWEIGHTS *LPD3DXATTRIBUTEWEIGHTS;

/* 2433 */
typedef unsigned __int8 (__stdcall *pfXcVerifyPKCS1Signature)(unsigned __int8 *, unsigned __int8 *, unsigned __int8 *);

/* 2434 */
typedef _DVD_ASF *PDVD_ASF;

/* 2435 */
typedef const _DSFX_AMPMOD_STEREO_STATE *LPCDSFX_AMPMOD_STEREO_STATE;

/* 2436 */
typedef const _DSEFFECTIMAGEDESC *LPCDSEFFECTIMAGEDESC;

/* 2437 */
typedef _DBGKD_WRITE_MEMORY32 *PDBGKD_WRITE_MEMORY32;

/* 2438 */
typedef _KIDTENTRY *PKIDTENTRY;

/* 2439 */
typedef _FILE_ALIGNMENT_INFORMATION *PFILE_ALIGNMENT_INFORMATION;

/* 2440 */
typedef const _DS3DLISTENER *REFDS3DLISTENER;

/* 2441 */
typedef $D19FE64D675A740147AEFFB064D80ACE Nv04aCharacter512[];

/* 2442 */
typedef int NTSTATUS;

/* 2443 */
typedef _XINPUT_STATE *PXINPUT_STATE;

/* 2444 */
typedef void (__stdcall *PAPCFUNC)(unsigned int);

/* 2445 */
typedef _PROCESS_FOREGROUND_BACKGROUND *PPROCESS_FOREGROUND_BACKGROUND;

/* 2446 */
typedef int (__stdcall *NEARPROC)();

/* 2447 */
typedef _KINTERRUPT *PRKINTERRUPT;

/* 2448 */
typedef unsigned __int8 *PBOOLEAN;

/* 2449 */
typedef _EXCEPTION_RECORD64 *PEXCEPTION_RECORD64;

/* 2450 */
typedef D3DTexture *LPDIRECT3DTEXTURE8;

/* 2451 */
typedef _DISK_LOGGING *PDISK_LOGGING;

/* 2452 */
typedef _UDF_FCB *PUDF_FCB;

/* 2453 */
typedef _DBGKD_WRITE_BREAKPOINT64 *PDBGKD_WRITE_BREAKPOINT3264;

/* 2454 */
typedef _IMAGE_THUNK_DATA32 *PIMAGE_THUNK_DATA32;

/* 2455 */
typedef _MESSAGE_RESOURCE_BLOCK *PMESSAGE_RESOURCE_BLOCK;

/* 2456 */
typedef _SEMAPHORE_BASIC_INFORMATION *PSEMAPHORE_BASIC_INFORMATION;

/* 2457 */
typedef _DSI3DL2BUFFER *LPDSI3DL2BUFFER;

/* 2458 */
typedef _RTL_DRIVE_LETTER_CURDIR *PRTL_DRIVE_LETTER_CURDIR;

/* 2459 */
typedef __int64 LONGLONG;

/* 2460 */
typedef const unsigned __int8 *cLPBYTE;

/* 2461 */
typedef _DSI3DL2OCCLUSION *LPDSI3DL2OCCLUSION;

/* 2462 */
typedef _DISK_CACHE_INFORMATION *PDISK_CACHE_INFORMATION;

/* 2463 */
typedef _GET_CURRENT_PROCESS_ADDRESS *PGET_CURRENT_PROCESS_ADDRESS;

/* 2464 */
typedef _DBGKD_SEARCH_MEMORY *PDBGKD_SEARCH_MEMORY;

/* 2465 */
typedef void (__stdcall *PFNXMEDIAOBJECTCALLBACK)(void *, void *, unsigned int);

/* 2466 */
typedef _DSFX_I3DL2REVERB_STATE *LPDSFX_I3DL2REVERB_STATE;

/* 2467 */
typedef sockaddr *LPSOCKADDR;

/* 2468 */
typedef int (__stdcall *PDRIVER_DISPATCH)(_DEVICE_OBJECT *, _IRP *);

/* 2469 */
typedef _FP_IEEE_RECORD *PFP_IEEE_RECORD;

/* 2470 */
typedef _UNICODE_PREFIX_TABLE *PUNICODE_PREFIX_TABLE;

/* 2471 */
typedef int S032;

/* 2472 */
typedef _PHYSICAL *PPHYSICAL;

/* 2473 */
typedef void (__stdcall *PDRIVER_STARTIO)(_DEVICE_OBJECT *, _IRP *);

/* 2474 */
typedef unsigned int V032;

/* 2475 */
typedef unsigned int U032;

/* 2476 */
typedef unsigned __int8 (*PKIO_ACCESS_MAP)[8192];

/* 2477 */
typedef _IMAGE_SEPARATE_DEBUG_HEADER *PIMAGE_SEPARATE_DEBUG_HEADER;

/* 2478 */
typedef _DESCRIPTOR_TABLE_ENTRY *PDESCRIPTOR_TABLE_ENTRY;

/* 2479 */
typedef _UDF_VOLUME_EXTENSION *PUDF_VOLUME_EXTENSION;

/* 2480 */
typedef _KD_PHYSICAL_PORT *PKD_PHYSICAL_PORT;

/* 2481 */
typedef float F032;

/* 2482 */
typedef XMediaObject *LPXMEDIAOBJECT;

/* 2483 */
typedef unsigned __int16 *LP;

/* 2484 */
typedef _MODE_PARAMETER_HEADER10 *PMODE_PARAMETER_HEADER10;

/* 2485 */
typedef void (__stdcall *PRTL_FREE_STRING_ROUTINE)(void *);

/* 2486 */
typedef _IMAGE_TLS_DIRECTORY32 *PIMAGE_TLS_DIRECTORY32;

/* 2487 */
typedef unsigned int (__stdcall *PWINDBG_CHECK_CONTROL_C)();

/* 2488 */
typedef _OSVERSIONINFOEXW *PRTL_OSVERSIONINFOEXW;

/* 2489 */
typedef __int64 *PLONGLONG;

/* 2490 */
typedef $240636BF069B52CCE0BB3D6B0AE32D5B Nv04aCharacter16[];

/* 2491 */
typedef _WIN32_FIND_DATAA *LPWIN32_FIND_DATAA;

/* 2492 */
typedef unsigned __int64 ULONGLONG;

/* 2493 */
typedef tWAVEFORMATEX *LPWAVEFORMATEX;

/* 2494 */
typedef _CM_EISA_SLOT_INFORMATION *PCM_EISA_SLOT_INFORMATION;

/* 2495 */
typedef void (__cdecl *_purecall_handler)();

/* 2496 */
typedef _MM_STATISTICS *PMM_STATISTICS;

/* 2497 */
typedef _SID_AND_ATTRIBUTES (*PSID_AND_ATTRIBUTES_ARRAY)[1];

/* 2498 */
typedef _STORAGE_SET_READ_AHEAD *PSTORAGE_SET_READ_AHEAD;

/* 2499 */
typedef _SCSI_PASS_THROUGH_DIRECT *PSCSI_PASS_THROUGH_DIRECT;

/* 2500 */
typedef _GUID *LPIID;

/* 2501 */
typedef _TIMER_BASIC_INFORMATION *PTIMER_BASIC_INFORMATION;

/* 2502 */
typedef unsigned int DVD_SESSION_ID;

/* 2503 */
typedef unsigned int HANDLE_PTR;

/* 2504 */
typedef char *LPCH;

/* 2505 */
typedef _PORT_VIEW *PPORT_VIEW;

/* 2506 */
typedef _DBGKD_MANIPULATE_STATE32 *PDBGKD_MANIPULATE_STATE32;

/* 2507 */
typedef _OBJECT_DIRECTORY_INFORMATION *POBJECT_DIRECTORY_INFORMATION;

/* 2508 */
typedef tagSIZE *PSIZE;

/* 2509 */
typedef unsigned int SECURITY_INFORMATION;

/* 2510 */
typedef _DSEFFECTIMAGELOC *LPDSEFFECTIMAGELOC;

/* 2511 */
typedef void (__stdcall *PWINDBG_EXTENSION_DLL_INIT)(_WINDBG_EXTENSION_APIS *, unsigned __int16, unsigned __int16);

/* 2512 */
typedef void *HGLOBAL;

/* 2513 */
typedef _GDF_DIRECTORY_ENTRY *PGDF_DIRECTORY_ENTRY;

/* 2514 */
typedef void **LPHANDLE;

/* 2515 */
typedef _PCI_AGP_CAPABILITY *PPCI_AGP_CAPABILITY;

/* 2516 */
typedef RTL_ACE_DATA *PRTL_ACE_DATA;

/* 2517 */
typedef _NOTIFICATION_BUSY_STATUS *PNOTIFICATION_BUSY_STATUS;

/* 2518 */
typedef _LPCSVR_FILTER_RESULT (__stdcall *PLPCSVR_FILTER)(void *, _PORT_MESSAGE *);

/* 2519 */
typedef _IMAGE_IMPORT_DESCRIPTOR *PIMAGE_IMPORT_DESCRIPTOR;

/* 2520 */
typedef unsigned __int16 wint_t;

/* 2521 */
typedef unsigned int Nv016Typedef;

/* 2522 */
typedef unsigned int Nv015Typedef;

/* 2523 */
typedef void **SPHANDLE;

/* 2524 */
typedef unsigned int Nv014Typedef;

/* 2525 */
typedef void (__cdecl *PXBEIMAGE_ENTRY_POINT)();

/* 2526 */
typedef unsigned int Nv013Typedef;

/* 2527 */
typedef unsigned int Nv011Typedef;

/* 2528 */
typedef unsigned int Nv010Typedef;

/* 2529 */
typedef _OSVERSIONINFOW *PRTL_OSVERSIONINFOW;

/* 2530 */
typedef _SYSTEM_TIMEOFDAY_INFORMATION *PSYSTEM_TIMEOFDAY_INFORMATION;

/* 2531 */
typedef _IDE_PCI_PHYSICAL_REGION_DESCRIPTOR *PIDE_PCI_PHYSICAL_REGION_DESCRIPTOR;

/* 2532 */
typedef _OBJECT_HEADER *POBJECT_HEADER;

/* 2533 */
typedef _FILE_NOTIFY_INFORMATION *PFILE_NOTIFY_INFORMATION;

/* 2534 */
typedef const _DSI3DL2BUFFER *LPCDSI3DL2BUFFER;

/* 2535 */
typedef void *PVOID64;

/* 2536 */
typedef _AXP64_PARTIAL_KPRCB *PAXP64_PARTIAL_KPRCB;

/* 2537 */
typedef _KTHREAD *PKTHREAD;

/* 2538 */
typedef LIST_ENTRY64 *PLIST_ENTRY64;

/* 2539 */
typedef _PROCESSOR_POWER_STATE *PPROCESSOR_POWER_STATE;

/* 2540 */
typedef _READCONTROLSPACE32 *PREADCONTROLSPACE32;

/* 2541 */
typedef _RTL_HEAP_PARAMETERS *PRTL_HEAP_PARAMETERS;

/* 2542 */
typedef _SCSI_EXTENDED_MESSAGE *PSCSI_EXTENDED_MESSAGE;

/* 2543 */
typedef _PROCESS_BASIC_INFORMATION *PPROCESS_BASIC_INFORMATION;

/* 2544 */
typedef D3DVolume *LPDIRECT3DVOLUME8;

/* 2545 */
typedef __int64 *PINT64;

/* 2546 */
typedef unsigned __int64 UINT64;

/* 2547 */
typedef unsigned int Nv01bTypedef;

/* 2548 */
typedef unsigned int Nv01aTypedef;

/* 2549 */
typedef _COMPRESSED_DATA_INFO *PCOMPRESSED_DATA_INFO;

/* 2550 */
typedef _IDEREGS *LPIDEREGS;

/* 2551 */
typedef _XINPUT_FEEDBACK_HEADER *PXINPUT_FEEDBACK_HEADER;

/* 2552 */
typedef int (__stdcall *PRTL_DELETE_LOCK_ROUTINE)(void *);

/* 2553 */
typedef _KQUEUE *PRKQUEUE;

/* 2554 */
typedef _CDVD_TITLE_KEY_HEADER *PCDVD_TITLE_KEY_HEADER;

/* 2555 */
typedef ICBPINTEG *PICBPINTEG;

/* 2556 */
typedef _SYSTEM_POOL_INFORMATION *PSYSTEM_POOL_INFORMATION;

/* 2557 */
typedef D3DCubeTexture *PDIRECT3DCUBETEXTURE8;

/* 2558 */
typedef unsigned __int16 ATOM;

/* 2559 */
typedef _SYSTEM_CRASH_DUMP_INFORMATION *PSYSTEM_CRASH_DUMP_INFORMATION;

/* 2560 */
typedef void (__stdcall *PWINDBG_EXTENSION_DLL_INIT32)(_WINDBG_EXTENSION_APIS32 *, unsigned __int16, unsigned __int16);

/* 2561 */
typedef _KDDEBUGGER_DATA32 *PKDDEBUGGER_DATA32;

/* 2562 */
typedef _FILE_STREAM_INFORMATION *PFILE_STREAM_INFORMATION;

/* 2563 */
typedef const _DSFX_DISTORTION_STATE *LPCDSFX_DISTORTION_STATE;

/* 2564 */
typedef _KDEVICE_QUEUE_ENTRY *PKDEVICE_QUEUE_ENTRY;

/* 2565 */
typedef _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY *PIMAGE_AXP64_RUNTIME_FUNCTION_ENTRY;

/* 2566 */
typedef _GETVERSIONINPARAMS *LPGETVERSIONINPARAMS;

/* 2567 */
typedef _FP_128 *PFP_128;

/* 2568 */
typedef _INQUIRYDATA *PINQUIRYDATA;

/* 2569 */
typedef _SUB_Q_MEDIA_CATALOG_NUMBER *PSUB_Q_MEDIA_CATALOG_NUMBER;

/* 2570 */
typedef _RTL_PROCESS_MODULE_INFORMATION *PRTL_PROCESS_MODULE_INFORMATION;

/* 2571 */
typedef D3DResource *LPDIRECT3DRESOURCE8;

/* 2572 */
typedef _FP_32 *PFP_32;

/* 2573 */
typedef tagPALETTEENTRY *LPPALETTEENTRY;

/* 2574 */
typedef _SYSTEM_OBJECT_INFORMATION *PSYSTEM_OBJECT_INFORMATION;

/* 2575 */
typedef _DSFX_CHORUS_MONO_PARAMS *LPDSFX_CHORUS_MONO_PARAMS;

/* 2576 */
typedef mmtime_tag *LPMMTIME;

/* 2577 */
typedef _LDT_ENTRY *PLDT_ENTRY;

/* 2578 */
typedef void *PASSIGNED_RESOURCE;

/* 2579 */
typedef const _DSI3DL2OCCLUSION *LPCDSI3DL2OCCLUSION;

/* 2580 */
typedef _DIRENT *PDIRENT;

/* 2581 */
typedef D3DXMATERIAL *LPD3DXMATERIAL;

/* 2582 */
typedef _DBGKD_WAIT_STATE_CHANGE64_X86_NT5 *PDBGKD_WAIT_STATE_CHANGE64_WIRE;

/* 2583 */
typedef _KQUEUE *PKQUEUE;

/* 2584 */
typedef BATTERY_REPORTING_SCALE *PBATTERY_REPORTING_SCALE;

/* 2585 */
typedef void (__stdcall *PTIMERAPCROUTINE)(void *, unsigned int, unsigned int);

/* 2586 */
typedef unsigned __int8 XBOX_KEY_DATA[16];

/* 2587 */
typedef char *POSTR;

/* 2588 */
typedef unsigned int SWIZNUM;

/* 2589 */
typedef IDirectXFileSaveObject **LPLPDIRECTXFILESAVEOBJECT;

/* 2590 */
typedef _FILE_PIPE_REMOTE_INFORMATION *PFILE_PIPE_REMOTE_INFORMATION;

/* 2591 */
typedef _GETSETBUSDATA *PBUSDATA;

/* 2592 */
typedef _FSCACHE_ELEMENT *PFSCACHE_ELEMENT;

/* 2593 */
typedef char *PCCHAR;

/* 2594 */
typedef char *PSCHAR;

/* 2595 */
typedef const _DSI3DL2LISTENER *LPCDSI3DL2LISTENER;

/* 2596 */
typedef void (__stdcall *APC_CALLBACK_FUNCTION)(int, void *, void *);

/* 2597 */
typedef __int16 *PSHORT;

/* 2598 */
typedef unsigned __int16 WORD;

/* 2599 */
typedef unsigned int (__stdcall *PWINDBG_SET_THREAD_CONTEXT_ROUTINE)(unsigned int, _CONTEXT *, unsigned int);

/* 2600 */
typedef _DBGSS_APIMSG *PDBGSS_APIMSG;

/* 2601 */
typedef _LDR_DATA_TABLE_ENTRY64 *PLDR_DATA_TABLE_ENTRY64;

/* 2602 */
typedef unsigned __int16 USHORT;

/* 2603 */
typedef _KPRCB *PKPRCB;

/* 2604 */
typedef _IO_STATUS_BLOCK *PIO_STATUS_BLOCK;

/* 2605 */
typedef _DVDX2_CONTROL_DATA *PDVDX2_CONTROL_DATA;

/* 2606 */
typedef _DVDX2_HOST_CHALLENGE_RESPONSE_ENTRY *PDVDX2_HOST_CHALLENGE_RESPONSE_ENTRY;

/* 2607 */
typedef _XBEIMAGE_CERTIFICATE *PXBEIMAGE_CERTIFICATE;

/* 2608 */
typedef __int16 CSHORT;

/* 2609 */
typedef _OHCI_HCCA *POHCI_HCCA;

/* 2610 */
typedef unsigned int (__stdcall *PWINDBG_GET_THREAD_CONTEXT_ROUTINE)(unsigned int, _CONTEXT *, unsigned int);

/* 2611 */
typedef _CDVD_INACTIVITY_TIMEOUT_PAGE *PCDVD_INACTIVITY_TIMEOUT_PAGE;

/* 2612 */
typedef _RTL_RANGE_LIST *PRTL_RANGE_LIST;

/* 2613 */
typedef unsigned __int16 FSHORT;

/* 2614 */
typedef _POOL_TRACKER_BIG_PAGES *PPOOL_TRACKER_BIG_PAGES;

/* 2615 */
typedef _CM_SCSI_DEVICE_DATA *PCM_SCSI_DEVICE_DATA;

/* 2616 */
typedef _WIN32_FIND_DATAA *LPWIN32_FIND_DATA;

/* 2617 */
typedef in_addr *PIN_ADDR;

/* 2618 */
typedef _CM_MCA_POS_DATA *PCM_MCA_POS_DATA;

/* 2619 */
typedef ICBTRM *PICBTRM;

/* 2620 */
typedef _DSFX_FLANGE_MONO_STATE *LPDSFX_FLANGE_MONO_STATE;

/* 2621 */
typedef _DSFX_I3DL2REVERB_DELAYLINE *LPDSFX_I3DL2REVERB_DELAYLINE;

/* 2622 */
typedef unsigned __int8 (__stdcall *PDLL_INIT_ROUTINE)(void *, unsigned int, _CONTEXT *);

/* 2623 */
typedef unsigned __int8 (__stdcall *PKSERVICE_ROUTINE)(_KINTERRUPT *, void *);

/* 2624 */
typedef _KINTERRUPT *PKINTERRUPT;

/* 2625 */
typedef void (__stdcall *PFNCycleThresholdHandler)(D3DK::_D3DPERF_PerformanceCounters, unsigned __int64);

/* 2626 */
typedef _TOKEN_PRIVILEGES *PTOKEN_PRIVILEGES;

/* 2627 */
typedef _KWAIT_BLOCK *PKWAIT_BLOCK;

/* 2628 */
typedef unsigned int *PUINT32;

/* 2629 */
typedef int (__stdcall *PRTLP_START_THREAD)(int (__stdcall *)(void *), void **);

/* 2630 */
typedef _OSVERSIONINFOW *LPOSVERSIONINFOW;

/* 2631 */
typedef _DBGKD_CONTROL_SET *PDBGKD_CONTROL_SET;

/* 2632 */
typedef unsigned int NV_UINTPTR_T;

/* 2633 */
typedef _IMAGE_DATA_DIRECTORY *PIMAGE_DATA_DIRECTORY;

/* 2634 */
typedef _SECURITY_IMPERSONATION_LEVEL *PSECURITY_IMPERSONATION_LEVEL;

/* 2635 */
typedef _FAT_VOLUME_EXTENSION *PFAT_VOLUME_EXTENSION;

/* 2636 */
typedef unsigned int (__stdcall *PWINDBG_WRITE_PROCESS_MEMORY_ROUTINE)(unsigned int, const void *, unsigned int, unsigned int *);

/* 2637 */
typedef unsigned int Nv009Typedef;

/* 2638 */
typedef unsigned int Nv008Typedef;

/* 2639 */
typedef void *LPVOID;

/* 2640 */
typedef WSAData *LPWSADATA;

/* 2641 */
typedef unsigned int Nv007Typedef;

/* 2642 */
typedef unsigned int Nv006Typedef;

/* 2643 */
typedef unsigned __int16 *LPWORD;

/* 2644 */
typedef _DBGKD_WRITE_MEMORY64 *PDBGKD_WRITE_MEMORY3264;

/* 2645 */
typedef _DBGKD_SET_INTERNAL_BREAKPOINT64 *PDBGKD_SET_INTERNAL_BREAKPOINT64;

/* 2646 */
typedef _STRING *PCANSI_STRING;

/* 2647 */
typedef HFONT__ *HFONT;

/* 2648 */
typedef _LPCSVR_INITIALIZE *PLPCSVR_INITIALIZE;

/* 2649 */
typedef NSR_ALLOC *PNSR_ALLOC;

/* 2650 */
typedef ID3DXTechnique *LPD3DXTECHNIQUE;

/* 2651 */
typedef int LONG;

/* 2652 */
typedef int *LPLONG;

/* 2653 */
typedef _EXCEPTION_RECORD *PEXCEPTION_RECORD;

/* 2654 */
typedef unsigned int Nv00fTypedef;

/* 2655 */
typedef unsigned int Nv00eTypedef;

/* 2656 */
typedef unsigned int Nv00dTypedef;

/* 2657 */
typedef unsigned int Nv00cTypedef;

/* 2658 */
typedef unsigned int Nv00bTypedef;

/* 2659 */
typedef unsigned int Nv00aTypedef;

/* 2660 */
typedef _CM_PNP_BIOS_DEVICE_NODE *PCM_PNP_BIOS_DEVICE_NODE;

/* 2661 */
typedef _PROCESS_WS_WATCH_INFORMATION *PPROCESS_WS_WATCH_INFORMATION;

/* 2662 */
typedef _SUB_Q_CURRENT_POSITION *PSUB_Q_CURRENT_POSITION;

/* 2663 */
typedef _LAUNCH_DATA_PAGE *PLAUNCH_DATA_PAGE;

/* 2664 */
typedef _SYSTEM_MEMORY_INFORMATION *PSYSTEM_MEMORY_INFORMATION;

/* 2665 */
typedef _MMPTE *PMMPTE;

/* 2666 */
typedef _D3DXBONECOMBINATION *LPD3DXBONECOMBINATION;

/* 2667 */
typedef _SYSTEM_PROCESS_INFORMATION *PSYSTEM_PROCESS_INFORMATION;

/* 2668 */
typedef __RAW_READ_INFO *PRAW_READ_INFO;

/* 2669 */
typedef _SCSI_ADAPTER_BUS_INFO *PSCSI_ADAPTER_BUS_INFO;

/* 2670 */
typedef _ACCESS_ALLOWED_OBJECT_ACE *PACCESS_ALLOWED_OBJECT_ACE;

/* 2671 */
typedef _SECURITY_ADVANCED_QUALITY_OF_SERVICE *PSECURITY_ADVANCED_QUALITY_OF_SERVICE;

/* 2672 */
typedef _TOKEN_GROUPS *PTOKEN_GROUPS;

/* 2673 */
typedef void (__stdcall *LPTIMECALLBACK)(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);

/* 2674 */
typedef _FOUR_BYTE *PFOUR_BYTE;

/* 2675 */
typedef void (__stdcall *PTIMER_APC_ROUTINE)(void *, unsigned int, int);

/* 2676 */
typedef VSD_GENERIC *PVSD_GENERIC;

/* 2677 */
typedef const _DSBPOSITIONNOTIFY *LPCDSBPOSITIONNOTIFY;

/* 2678 */
typedef unsigned __int16 SECURITY_DESCRIPTOR_CONTROL;

/* 2679 */
typedef _DBGKD_WRITE_BREAKPOINT32 *PDBGKD_WRITE_BREAKPOINT32;

/* 2680 */
typedef _RTL_HEAP_TAG *PRTL_HEAP_TAG;

/* 2681 */
typedef _FILE_ALLOCATION_INFORMATION *PFILE_ALLOCATION_INFORMATION;

/* 2682 */
typedef _FAT_ASYNC_IO_ENTRY *PFAT_ASYNC_IO_ENTRY;

/* 2683 */
typedef unsigned __int64 *PULONG64;

/* 2684 */
typedef unsigned int (__stdcall *pfXcPKEncPublic)(unsigned __int8 *, unsigned __int8 *, unsigned __int8 *);

/* 2685 */
typedef void (__stdcall *pfXcSHAFinal)(unsigned __int8 *, unsigned __int8 *);

/* 2686 */
typedef _FILETIME *LPFILETIME;

/* 2687 */
typedef unsigned __int8 KIRQL;

/* 2688 */
typedef void (__stdcall *LPFNXMEDIAOBJECTCALLBACK)(void *, void *, unsigned int);

/* 2689 */
typedef POWER_STATE_HANDLER *PPOWER_STATE_HANDLER;

/* 2690 */
typedef _FILE_STANDARD_INFORMATION *PFILE_STANDARD_INFORMATION;

/* 2691 */
typedef timeval *PTIMEVAL;

/* 2692 */
typedef char CHAR;

/* 2693 */
typedef _OBJECT_DIRECTORY *POBJECT_DIRECTORY;

/* 2694 */
typedef _DBGKD_READ_WRITE_IO64 *PDBGKD_READ_WRITE_IO64;

/* 2695 */
typedef _DBGUI_CONTINUE *PDBGUI_CONTINUE;

/* 2696 */
typedef _SYSTEM_KERNEL_DEBUGGER_INFORMATION *PSYSTEM_KERNEL_DEBUGGER_INFORMATION;

/* 2697 */
typedef _IMAGE_FUNCTION_ENTRY64 *PIMAGE_FUNCTION_ENTRY64;

/* 2698 */
typedef _GDF_VOLUME_EXTENSION *PGDF_VOLUME_EXTENSION;

/* 2699 */
typedef _RTL_CRITICAL_SECTION *PCRITICAL_SECTION;

/* 2700 */
typedef _KAPC_RECORD *PKAPC_RECORD;

/* 2701 */
typedef _X86_KSPECIAL_REGISTERS *PX86_KSPECIAL_REGISTERS;

/* 2702 */
typedef EXT_API_VERSION *LPEXT_API_VERSION;

/* 2703 */
typedef _HAL_SHUTDOWN_REGISTRATION *PHAL_SHUTDOWN_REGISTRATION;

/* 2704 */
typedef void **PHANDLE;

/* 2705 */
typedef _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION *PSYSTEM_PROCESSOR_PERFORMANCE_INFORMATION;

/* 2706 */
typedef _QUOTA_LIMITS *PQUOTA_LIMITS;

/* 2707 */
typedef _DSFX_CHORUS_STEREO_STATE *LPDSFX_CHORUS_STEREO_STATE;

/* 2708 */
typedef void *PSECURITY_ATTRIBUTES;

/* 2709 */
typedef _X86_NT5_CONTEXT *PX86_NT5_CONTEXT;

/* 2710 */
typedef _FILE_NAME_INFORMATION *PFILE_NAME_INFORMATION;

/* 2711 */
typedef _DSFX_FLANGE_STEREO_PARAMS *LPDSFX_FLANGE_STEREO_PARAMS;

/* 2712 */
typedef _DRIVE_LAYOUT_INFORMATION *PDRIVE_LAYOUT_INFORMATION;

/* 2713 */
typedef _KPCR *PKPCR;

/* 2714 */
typedef _CM_KEYBOARD_DEVICE_DATA *PCM_KEYBOARD_DEVICE_DATA;

/* 2715 */
typedef _CROSS_PLATFORM_WAIT_STATE_CHANGE32 *PCROSS_PLATFORM_WAIT_STATE_CHANGE32;

/* 2716 */
typedef _IMAGE_TLS_DIRECTORY32 *PIMAGE_TLS_DIRECTORY;

/* 2717 */
typedef _WMAXMOFileContDesc *LPWMAXMOFileContDesc;

/* 2718 */
typedef ID3DXBuffer *LPD3DXBUFFER;

/* 2719 */
typedef const _XMEDIAINFO *LPCXMEDIAINFO;

/* 2720 */
typedef void (__stdcall *PDRIVER_DELETEDEVICE)(_DEVICE_OBJECT *);

/* 2721 */
typedef ICBTAG *PICBTAG;

/* 2722 */
typedef IDirectXFileData **LPLPDIRECTXFILEDATA;

/* 2723 */
typedef D3DSurface *PDIRECT3DSURFACE8;

/* 2724 */
typedef _EISA_PORT_DESCRIPTOR *PEISA_PORT_DESCRIPTOR;

/* 2725 */
typedef unsigned int *PUINT;

/* 2726 */
typedef _ALPHA_NT5_KPROCESSOR_STATE *PALPHA_NT5_KPROCESSOR_STATE;

/* 2727 */
typedef _IMAGE_VXD_HEADER *PIMAGE_VXD_HEADER;

/* 2728 */
typedef _MODE_PARAMETER_HEADER *PMODE_PARAMETER_HEADER;

/* 2729 */
typedef unsigned int D3DSHADERCONSTANTMODE;

/* 2730 */
typedef const _DS3DLISTENER *LPCDS3DLISTENER;

/* 2731 */
typedef D3DBaseTexture *PDIRECT3DBASETEXTURE8;

/* 2732 */
typedef _ACCESS_DENIED_ACE *PACCESS_DENIED_ACE;

/* 2733 */
typedef tagPOINTS *LPPOINTS;

/* 2734 */
typedef __int64 INT64;

/* 2735 */
typedef _DBGKD_RESTORE_BREAKPOINT *PDBGKD_RESTORE_BREAKPOINT;

/* 2736 */
typedef _SYSTEM_DPC_BEHAVIOR_INFORMATION *PSYSTEM_DPC_BEHAVIOR_INFORMATION;

/* 2737 */
typedef _IOSPACE_EX32 *PIOSPACE_EX32;

/* 2738 */
typedef _NT_TIB *PNT_TIB;

/* 2739 */
typedef unsigned int Nv035Typedef;

/* 2740 */
typedef XFileMediaObject *LPXFILEMEDIAOBJECT;

/* 2741 */
typedef _SYSTEM_HANDLE_INFORMATION *PSYSTEM_HANDLE_INFORMATION;

/* 2742 */
typedef unsigned int Nv034Typedef;

/* 2743 */
typedef unsigned int Nv033Typedef;

/* 2744 */
typedef unsigned int Nv032Typedef;

/* 2745 */
typedef unsigned int Nv031Typedef;

/* 2746 */
typedef int (__stdcall *LPTOP_LEVEL_EXCEPTION_FILTER)(_EXCEPTION_POINTERS *);

/* 2747 */
typedef NSR_ANCHOR *PNSR_ANCHOR;

/* 2748 */
typedef _SCSI_ADDRESS *PSCSI_ADDRESS;

/* 2749 */
typedef _GET_SET_SYMPATH *PGET_SET_SYMPATH;

/* 2750 */
typedef _DBGKD_WRITE_MEMORY64 *PDBGKD_WRITE_MEMORY64;

/* 2751 */
typedef unsigned __int16 *PUHALF_PTR;

/* 2752 */
typedef $BE8EA959F0E773F3B9AE84AC57884D34 Nv04aCharacter64[];

/* 2753 */
typedef _CURDIR *PCURDIR;

/* 2754 */
typedef void *(__stdcall *PRTL_ALLOCATE_STRING_ROUTINE)(unsigned int);

/* 2755 */
typedef HMETAFILE__ *HMETAFILE;

/* 2756 */
typedef _FX_SAVE_AREA *PFX_SAVE_AREA;

/* 2757 */
typedef _SET_PARTITION_INFORMATION *PSET_PARTITION_INFORMATION;

/* 2758 */
typedef VSD_BEA01 *PVSD_BEA01;

/* 2759 */
typedef D3DFixup *PDIRECT3DFIXUP8;

/* 2760 */
typedef unsigned int Nv03cTypedef;

/* 2761 */
typedef unsigned int Nv03bTypedef;

/* 2762 */
typedef unsigned int Nv03aTypedef;

/* 2763 */
typedef const xbox_adpcmwaveformat_tag *LPCXBOXADPCMWAVEFORMAT;

/* 2764 */
typedef unsigned int KSPIN_LOCK;

/* 2765 */
typedef _OSVERSIONINFOEXA *LPOSVERSIONINFOEXA;

/* 2766 */
typedef _KTSS *PKTSS;

/* 2767 */
typedef _EXCEPTION_RECORD32 *PEXCEPTION_RECORD32;

/* 2768 */
typedef xbox_adpcmwaveformat_tag *LPXBOXADPCMWAVEFORMAT;

/* 2769 */
typedef _UNICODE_STRING *PUNICODE_STRING;

/* 2770 */
typedef unsigned int *PCLONG;

/* 2771 */
typedef _CDVD_FEATURE_SET_PAGE *PCDVD_FEATURE_SET_PAGE;

/* 2772 */
typedef const _DSFX_IIR2_STATE *LPCDSFX_IIR2_STATE;

/* 2773 */
typedef _IA64_KSPECIAL_REGISTERS *PIA64_KSPECIAL_REGISTERS;

/* 2774 */
typedef _AUDIT_EVENT_TYPE *PAUDIT_EVENT_TYPE;

/* 2775 */
typedef _IMAGE_THUNK_DATA64 *PIMAGE_THUNK_DATA64;

/* 2776 */
typedef sockaddr_in *LPSOCKADDR_IN;

/* 2777 */
typedef void (__stdcall *pfXcDESKeyParity)(unsigned __int8 *, unsigned int);

/* 2778 */
typedef _TOKEN_PRIMARY_GROUP *PTOKEN_PRIMARY_GROUP;

/* 2779 */
typedef _DBGKD_READ_WRITE_IO64 *PDBGKD_READ_WRITE_IO3264;

/* 2780 */
typedef _FORMATTED_CAPACITY_LIST *PFORMATTED_CAPACITY_LIST;

/* 2781 */
typedef unsigned int (__stdcall *PWINDBG_OLDKD_READ_PHYSICAL_MEMORY)(unsigned __int64, void *, unsigned int, unsigned int *);

/* 2782 */
typedef _LZXBOX_BLOCK *PLZXBOX_BLOCK;

/* 2783 */
typedef _PCI_DEVICE_ADDRESS *PPCI_DEVICE_ADDRESS;

/* 2784 */
typedef void (__stdcall *PKSYSTEM_ROUTINE)(void (__stdcall *)(void *), void *);

/* 2785 */
typedef char *PSZ;

/* 2786 */
typedef _WINDBG_EXTENSION_APIS *PWINDBG_EXTENSION_APIS;

/* 2787 */
typedef _DBGKD_GET_INTERNAL_BREAKPOINT32 *PDBGKD_GET_INTERNAL_BREAKPOINT32;

/* 2788 */
typedef _XINPUT_GAMEPAD *PXINPUT_GAMEPAD;

/* 2789 */
typedef _TOKEN_USER *PTOKEN_USER;

/* 2790 */
typedef _PCI_TYPE2_ADDRESS_BITS *PPCI_TYPE2_ADDRESS_BITS;

/* 2791 */
typedef _FILE_TRACKING_INFORMATION *PFILE_TRACKING_INFORMATION;

/* 2792 */
typedef char *PCH;

/* 2793 */
typedef const FIRFILTER8 *LPCFIRFILTER8;

/* 2794 */
typedef __int64 USN;

/* 2795 */
typedef _DSSTREAMDESC *LPDSSTREAMDESC;

/* 2796 */
typedef _IA64_KNONVOLATILE_CONTEXT_POINTERS *PIA64_KNONVOLATILE_CONTEXT_POINTERS;

/* 2797 */
typedef _FP_80 *PFP_80;

/* 2798 */
typedef IDirectSound *LPDIRECTSOUND;

/* 2799 */
typedef PARTMAP_PROXY *PPARTMAP_PROXY;

/* 2800 */
typedef unsigned int SIZE_T;

/* 2801 */
typedef void (__stdcall *PIDE_INTERRUPT_ROUTINE)();

/* 2802 */
typedef $A2E0EF4B814F6ABA6C22D3CE7EF3495E Nv04aCharacter256[];

/* 2803 */
typedef _LUID_AND_ATTRIBUTES *PLUID_AND_ATTRIBUTES;

/* 2804 */
typedef _LUID_AND_ATTRIBUTES (*PLUID_AND_ATTRIBUTES_ARRAY)[1];

/* 2805 */
typedef _FILE_COMPRESSION_INFORMATION *PFILE_COMPRESSION_INFORMATION;

/* 2806 */
typedef unsigned __int8 (__stdcall *PKD_PORT_INITIALIZE)(unsigned __int8);

/* 2807 */
typedef _DBGKD_WAIT_STATE_CHANGE64_X86_NT5 *PDBGKD_WAIT_STATE_CHANGE3264_WIRE;

/* 2808 */
typedef _DBGKM_CREATE_THREAD *PDBGKM_CREATE_THREAD;

/* 2809 */
typedef _PROCESS_HEAP_ENTRY *PPROCESS_HEAP_ENTRY;

/* 2810 */
typedef _IRP *PIRP;

/* 2811 */
typedef _KEY_BASIC_INFORMATION *PKEY_BASIC_INFORMATION;

/* 2812 */
typedef unsigned __int8 (__stdcall *PSMBUS_COMPLETION_ROUTINE)(int);

/* 2813 */
typedef NSR_PART_H *PNSR_PART_H;

/* 2814 */
typedef _FORMAT_EX_PARAMETERS *PFORMAT_EX_PARAMETERS;

/* 2815 */
typedef _CDVD_KEY_HEADER *PCDVD_KEY_HEADER;

/* 2816 */
typedef _IMAGE_ARCHIVE_MEMBER_HEADER *PIMAGE_ARCHIVE_MEMBER_HEADER;

/* 2817 */
typedef void (__stdcall *pfXcSHAUpdate)(unsigned __int8 *, unsigned __int8 *, unsigned int);

/* 2818 */
typedef _FILETIME *PFILETIME;

/* 2819 */
typedef void (__fastcall *PPROCESSOR_IDLE_FUNCTION)(_PROCESSOR_POWER_STATE *);

/* 2820 */
typedef void __stdcall TIMECALLBACK(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);

/* 2821 */
typedef _PROCESSORINFO *PPROCESSORINFO;

/* 2822 */
typedef _DSFX_MINIREVERB_PARAMS *LPDSFX_MINIREVERB_PARAMS;

/* 2823 */
typedef NSR_EAH *PNSR_EAH;

/* 2824 */
typedef const char *PCSZ;

/* 2825 */
typedef const _DSEFFECTMAP *LPCDSEFFECTMAP;

/* 2826 */
typedef int HFILE;

/* 2827 */
typedef _DSLFODESC *LPDSLFODESC;

/* 2828 */
typedef unsigned __int64 *PDWORD64;

/* 2829 */
typedef unsigned int *PUINT_PTR;

/* 2830 */
typedef _SYSTEM_POOLTAG_INFORMATION *PSYSTEM_POOLTAG_INFORMATION;

/* 2831 */
typedef _WINDBG_EXTENSION_APIS32 *PWINDBG_EXTENSION_APIS32;

/* 2832 */
typedef _KAPC *PKAPC;

/* 2833 */
typedef const char *PCCH;

/* 2834 */
typedef fd_set *LPFD_SET;

/* 2835 */
typedef __int16 *PCSHORT;

/* 2836 */
typedef _SUB_Q_CHANNEL_DATA *PSUB_Q_CHANNEL_DATA;

/* 2837 */
typedef _SYSTEM_POOLTAG *PSYSTEM_POOLTAG;

/* 2838 */
typedef _RTL_HEAP_WALK_ENTRY *PRTL_HEAP_WALK_ENTRY;

/* 2839 */
typedef _OBJECT_HANDLE_TABLE *POBJECT_HANDLE_TABLE;

/* 2840 */
typedef _FILE_NAMES_INFORMATION *PFILE_NAMES_INFORMATION;

/* 2841 */
typedef _IMAGE_DEBUG_MISC *PIMAGE_DEBUG_MISC;

/* 2842 */
typedef unsigned int (__stdcall *PWINDBG_WRITE_PROCESS_MEMORY_ROUTINE32)(unsigned int, const void *, unsigned int, unsigned int *);

/* 2843 */
typedef const _DSI3DL2OBSTRUCTION *LPCDSI3DL2OBSTRUCTION;

/* 2844 */
typedef const _DSFX_CHORUS_STEREO_PARAMS *LPCDSFX_CHORUS_STEREO_PARAMS;

/* 2845 */
typedef unsigned __int8 SECURITY_CONTEXT_TRACKING_MODE;

/* 2846 */
typedef _ETIMER *PETIMER;

/* 2847 */
typedef _CONTEXT *LPCONTEXT;

/* 2848 */
typedef _SYM_DUMP_PARAM *PSYM_DUMP_PARAM;

/* 2849 */
typedef unsigned int Nv029Typedef;

/* 2850 */
typedef _KEY_NAME_INFORMATION *PKEY_NAME_INFORMATION;

/* 2851 */
typedef unsigned int Nv028Typedef;

/* 2852 */
typedef unsigned int Nv027Typedef;

/* 2853 */
typedef int (__stdcall *PRTL_RELEASE_LOCK_ROUTINE)(void *);

/* 2854 */
typedef _DSCAPS *LPDSCAPS;

/* 2855 */
typedef unsigned int Nv026Typedef;

/* 2856 */
typedef _IO_COMPLETION_BASIC_INFORMATION *PIO_COMPLETION_BASIC_INFORMATION;

/* 2857 */
typedef unsigned int Nv025Typedef;

/* 2858 */
typedef unsigned int Nv024Typedef;

/* 2859 */
typedef unsigned int Nv023Typedef;

/* 2860 */
typedef unsigned int Nv022Typedef;

/* 2861 */
typedef unsigned int Nv020Typedef;

/* 2862 */
typedef _SYSTEM_INTERRUPT_INFORMATION *PSYSTEM_INTERRUPT_INFORMATION;

/* 2863 */
typedef D3DXVECTOR4 *LPD3DXVECTOR4;

/* 2864 */
typedef __int16 SHORT;

/* 2865 */
typedef unsigned int (__stdcall *PWINDBG_OLDKD_WRITE_PHYSICAL_MEMORY)(unsigned __int64, void *, unsigned int, unsigned int *);

/* 2866 */
typedef void (__stdcall *PFIBER_START_ROUTINE)(void *);

/* 2867 */
typedef D3DXVECTOR3 *LPD3DXVECTOR3;

/* 2868 */
typedef D3DXVECTOR2 *LPD3DXVECTOR2;

/* 2869 */
typedef IDirectXFileData *LPDIRECTXFILEDATA;

/* 2870 */
typedef _OPEN_PACKET *POPEN_PACKET;

/* 2871 */
typedef _DBGKD_GET_VERSION64 *PDBGKD_GET_VERSION64;

/* 2872 */
typedef _X86_CONTEXT *PX86_CONTEXT;

/* 2873 */
typedef _KTRAP_FRAME *PKTRAP_FRAME;

/* 2874 */
typedef _NOTIFICATION_EVENT_STATUS_HEADER *PNOTIFICATION_EVENT_STATUS_HEADER;

/* 2875 */
typedef unsigned int Nv02fTypedef;

/* 2876 */
typedef unsigned int Nv02eTypedef;

/* 2877 */
typedef unsigned int Nv02dTypedef;

/* 2878 */
typedef unsigned int Nv02cTypedef;

/* 2879 */
typedef unsigned int Nv02bTypedef;

/* 2880 */
typedef unsigned int Nv02aTypedef;

/* 2881 */
typedef _READCONTROLSPACE *PREADCONTROLSPACE;

/* 2882 */
typedef int LONG32;

/* 2883 */
typedef _BY_HANDLE_FILE_INFORMATION *LPBY_HANDLE_FILE_INFORMATION;

/* 2884 */
typedef _KDPC *PKDPC;

/* 2885 */
typedef unsigned int (__stdcall *PWINDBG_CHECK_VERSION)();

/* 2886 */
typedef void (__stdcall *PIDE_RESET_DEVICE_ROUTINE)();

/* 2887 */
typedef _DSFILTERDESC *LPDSFILTERDESC;

/* 2888 */
typedef unsigned __int8 KINT_DIRECTION_MAP[32];

/* 2889 */
typedef xbox_adpcmwaveformat_tag *PXBOXADPCMWAVEFORMAT;

/* 2890 */
typedef _OSVERSIONINFOEXW *LPOSVERSIONINFOEX;

/* 2891 */
typedef _SYSTEM_POOL_ENTRY *PSYSTEM_POOL_ENTRY;

/* 2892 */
typedef _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY *PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;

/* 2893 */
typedef unsigned int D3DBACKBUFFER_TYPE;

/* 2894 */
typedef unsigned int (__fastcall *PTHREAD_SELECT_NOTIFY_ROUTINE)(void *);

/* 2895 */
typedef _SID_NAME_USE *PSID_NAME_USE;

/* 2896 */
typedef _XMEDIAINFO *LPXMEDIAINFO;

/* 2897 */
typedef _SENDCMDOUTPARAMS *PSENDCMDOUTPARAMS;

/* 2898 */
typedef _FAT_FCB_CLUSTER_CACHE_ENTRY *PFAT_FCB_CLUSTER_CACHE_ENTRY;

/* 2899 */
typedef const _DSFX_MINIREVERB_PARAMS *LPCDSFX_MINIREVERB_PARAMS;

/* 2900 */
typedef _DSI3DL2LISTENER *LPDSI3DL2LISTENER;

/* 2901 */
typedef _SHARE_ACCESS *PSHARE_ACCESS;

/* 2902 */
typedef void (__cdecl *D3DCALLBACK)(unsigned int);

/* 2903 */
typedef _XMEDIAPACKET *LPXMEDIAPACKET;

/* 2904 */
typedef _MMADDRESS_NODE *PMMADDRESS_NODE;

/* 2905 */
typedef IMAGE_LOAD_CONFIG_DIRECTORY64 *PIMAGE_LOAD_CONFIG_DIRECTORY64;

/* 2906 */
typedef NSR_PART *PNSR_PART;

/* 2907 */
typedef _DBGKD_READ_MEMORY64 *PDBGKD_READ_MEMORY64;

/* 2908 */
typedef _EISA_MEMORY_CONFIGURATION *PEISA_MEMORY_CONFIGURATION;

/* 2909 */
typedef VSD_NSR02 *PVSD_NSR02;

/* 2910 */
typedef _TOKEN_SOURCE *PTOKEN_SOURCE;

/* 2911 */
typedef _HISTOGRAM_BUCKET *PHISTOGRAM_BUCKET;

/* 2912 */
typedef _KDPC *PRKDPC;

/* 2913 */
typedef _STRING64 *PUNICODE_STRING64;

/* 2914 */
typedef _DSFX_AMPMOD_STEREO_PARAMS *LPDSFX_AMPMOD_STEREO_PARAMS;

/* 2915 */
typedef unsigned int (__stdcall *PWINDBG_DISASM64)(unsigned __int64 *, const char *, unsigned int);

/* 2916 */
typedef IUnknown *PUNKNOWN;

/* 2917 */
typedef int KPRIORITY;

/* 2918 */
typedef void (__stdcall *PINTERFACE_REFERENCE)(void *);

/* 2919 */
typedef _DISK_INFORMATION *PDISK_INFORMATION;

/* 2920 */
typedef _ADMINISTRATOR_POWER_POLICY *PADMINISTRATOR_POWER_POLICY;

/* 2921 */
typedef unsigned int PFN_NUMBER;

/* 2922 */
typedef void (__stdcall *PIDE_START_NEXT_PACKET_ROUTINE)();

/* 2923 */
typedef _SID_AND_ATTRIBUTES *PSID_AND_ATTRIBUTES;

/* 2924 */
typedef _MODE_INFO_EXCEPTIONS *PMODE_INFO_EXCEPTIONS;

/* 2925 */
typedef unsigned __int16 *NWPSTR;

/* 2926 */
typedef const unsigned __int16 *LPCOLESTR;

/* 2927 */
typedef _FILE_RENAME_INFORMATION *PFILE_RENAME_INFORMATION;

/* 2928 */
typedef unsigned int (__stdcall *PWINDBG_STACKTRACE_ROUTINE64)(unsigned __int64, unsigned __int64, unsigned __int64, _EXTSTACKTRACE64 *, unsigned int);

/* 2929 */
typedef sockaddr_in *PSOCKADDR_IN;

/* 2930 */
typedef void (__stdcall *PWINDBG_OLDKD_EXTENSION_ROUTINE)(unsigned int, _WINDBG_OLDKD_EXTENSION_APIS *, const char *);

/* 2931 */
typedef _CLIENT_ID *PCLIENT_ID;

/* 2932 */
typedef unsigned int UINT_PTR;

/* 2933 */
typedef _X86_LDT_ENTRY *PX86_LDT_ENTRY;

/* 2934 */
typedef _FILE_MODE_INFORMATION *PFILE_MODE_INFORMATION;

/* 2935 */
typedef int *PINT_PTR;

/* 2936 */
typedef unsigned int *PDWORD_PTR;

/* 2937 */
typedef IDirectXFileEnumObject *LPDIRECTXFILEENUMOBJECT;

/* 2938 */
typedef const _DSFX_FLANGE_STEREO_PARAMS *LPCDSFX_FLANGE_STEREO_PARAMS;

/* 2939 */
typedef unsigned __int8 *PKIRQL;

/* 2940 */
typedef _DBGUI_CREATE_PROCESS *PDBGUI_CREATE_PROCESS;

/* 2941 */
typedef const _DSFX_ECHO_STEREO_STATE *LPCDSFX_ECHO_STEREO_STATE;

/* 2942 */
typedef _IMAGE_ROM_HEADERS *PIMAGE_ROM_HEADERS;

/* 2943 */
typedef tagSIZE *PSIZEL;

/* 2944 */
typedef unsigned int *PACCESS_MASK;

/* 2945 */
typedef _WIN32_FIND_DATAA *PWIN32_FIND_DATA;

/* 2946 */
typedef _TWO_BYTE *PTWO_BYTE;

/* 2947 */
typedef IDirectXFileObject **LPLPDIRECTXFILEOBJECT;

/* 2948 */
typedef _EVENT_BASIC_INFORMATION *PEVENT_BASIC_INFORMATION;

/* 2949 */
typedef _DSBUFFERDESC *LPDSBUFFERDESC;

/* 2950 */
typedef _MODE_DISCONNECT_PAGE *PMODE_DISCONNECT_PAGE;

/* 2951 */
typedef unsigned int (__stdcall *PKD_PORT_RECEIVE_PACKET)(unsigned int, _STRING *, _STRING *, unsigned int *);

/* 2952 */
typedef void (__cdecl *_PVFV)();

/* 2953 */
typedef _NAPDATA *PNAPDATA;

/* 2954 */
typedef D3DDevice *PDIRECT3DDEVICE8;

/* 2955 */
typedef IPersistStream *LPPERSISTSTREAM;

/* 2956 */
typedef _PREFIX_TABLE_ENTRY *PPREFIX_TABLE_ENTRY;

/* 2957 */
typedef unsigned int DWORD;

/* 2958 */
typedef _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS;

/* 2959 */
typedef unsigned __int16 *PTUCHAR;

/* 2960 */
typedef unsigned int KAFFINITY;

/* 2961 */
typedef _DSEFFECTMAP *LPDSEFFECTMAP;

/* 2962 */
typedef const _DSENVELOPEDESC *LPCDSENVELOPEDESC;

/* 2963 */
typedef unsigned __int16 *PWORD;

/* 2964 */
typedef _FORMATTED_CAPACITY_DESCRIPTOR *PFORMATTED_CAPACITY_DESCRIPTOR;

/* 2965 */
typedef void (__cdecl *_secerr_handler_func)(int, void *);

/* 2966 */
typedef _NOTIFICATION_POWER_STATUS *PNOTIFICATION_POWER_STATUS;

/* 2967 */
typedef _WIN32_FIND_DATAA *PWIN32_FIND_DATAA;

/* 2968 */
typedef HGLRC__ *HGLRC;

/* 2969 */
typedef _PAE_ADDRESS *PPAE_ADDRESS;

/* 2970 */
typedef _CM_RESOURCE_LIST *PCM_RESOURCE_LIST;

/* 2971 */
typedef _HARDERROR_MSG *PHARDERROR_MSG;

/* 2972 */
typedef _FP_IEEE_VALUE *PFP_IEEE_VALUE;

/* 2973 */
typedef _GET_CURRENT_THREAD_ADDRESS *PGET_CURRENT_THREAD_ADDRESS;

/* 2974 */
typedef _GUID *LPFMTID;

/* 2975 */
typedef unsigned int (__stdcall *pfXcModExp)(unsigned int *, unsigned int *, unsigned int *, unsigned int *, unsigned int);

/* 2976 */
typedef _DXFILELOADMEMORY *LPDXFILELOADMEMORY;

/* 2977 */
typedef _PROXY_CLASS *PPROXY_CLASS;

/* 2978 */
typedef _X86_NT5_CONTEXT *PDBGKD_CONTEXT_WIRE;

/* 2979 */
typedef _ACCESS_DENIED_OBJECT_ACE *PACCESS_DENIED_OBJECT_ACE;

/* 2980 */
typedef int (__stdcall *PDBGSS_SUBSYSTEMKEY_LOOKUP)(_CLIENT_ID *, unsigned int *, unsigned __int8);

/* 2981 */
typedef void (__stdcall *pfXcBlockCrypt)(unsigned int, unsigned __int8 *, unsigned __int8 *, unsigned __int8 *, unsigned int);

/* 2982 */
typedef _DBGKD_READ_WRITE_IO_EXTENDED32 *PDBGKD_READ_WRITE_IO_EXTENDED32;

/* 2983 */
typedef _IDE_IDENTIFY_DATA *PIDE_IDENTIFY_DATA;

/* 2984 */
typedef _TOKEN_STATISTICS *PTOKEN_STATISTICS;

/* 2985 */
typedef _IO_COMPLETION_CONTEXT *PIO_COMPLETION_CONTEXT;

/* 2986 */
typedef D3DXQUATERNION *LPD3DXQUATERNION;

/* 2987 */
typedef _DBGKD_LOAD_SYMBOLS64 *PDBGKD_LOAD_SYMBOLS64;

/* 2988 */
typedef MCPX_ALLOC_CONTEXT *PMCPX_ALLOC_CONTEXT;

/* 2989 */
typedef IDirectXFileBinary *LPDIRECTXFILEBINARY;

/* 2990 */
typedef Direct3D *LPDIRECT3D8;

/* 2991 */
typedef _READ_WRITE_MSR *PREAD_WRITE_MSR;

/* 2992 */
typedef _LD_FROM_DASHBOARD *PLD_FROM_DASHBOARD;

/* 2993 */
typedef HINSTANCE__ *HMODULE;

/* 2994 */
typedef _FILE_BASIC_INFORMATION *PFILE_BASIC_INFORMATION;

/* 2995 */
typedef unsigned int Nvff3Typedef;

/* 2996 */
typedef unsigned int Nvff2Typedef;

/* 2997 */
typedef _PCI_PM_CAPABILITY *PPCI_PM_CAPABILITY;

/* 2998 */
typedef unsigned int Nvff1Typedef;

/* 2999 */
typedef _IMAGE_RESOURCE_DATA_ENTRY *PIMAGE_RESOURCE_DATA_ENTRY;

/* 3000 */
typedef unsigned int Nvff0Typedef;

/* 3001 */
typedef unsigned int Nvff4Typedef;

/* 3002 */
typedef _KSEMAPHORE *PRKSEMAPHORE;

/* 3003 */
typedef _DRIVER_OBJECT *PDRIVER_OBJECT;

/* 3004 */
typedef _KEY_VALUE_FULL_INFORMATION *PKEY_VALUE_FULL_INFORMATION;

/* 3005 */
typedef timeval *LPTIMEVAL;

/* 3006 */
typedef NSR_PART_CONTID *PNSR_PART_CONTID;

/* 3007 */
typedef unsigned int (__stdcall *LPTHREAD_START_ROUTINE)(void *);

/* 3008 */
typedef ICBUASE *PICBUASE;

/* 3009 */
typedef _DISK_CONTROLLER_NUMBER *PDISK_CONTROLLER_NUMBER;

/* 3010 */
typedef _SYSTEM_POWER_STATE *PSYSTEM_POWER_STATE;

/* 3011 */
typedef const _DSFX_ECHO_STEREO_PARAMS *LPCDSFX_ECHO_STEREO_PARAMS;

/* 3012 */
typedef _RTL_PROCESS_BACKTRACE_INFORMATION *PRTL_PROCESS_BACKTRACE_INFORMATION;

/* 3013 */
typedef const unsigned int *LPCDWORD;

/* 3014 */
typedef linger *LPLINGER;

/* 3015 */
typedef SHORTAD *PSHORTAD;

/* 3016 */
typedef _IMAGE_COFF_SYMBOLS_HEADER *PIMAGE_COFF_SYMBOLS_HEADER;

/* 3017 */
typedef unsigned int *PULONG_PTR;

/* 3018 */
typedef const char *PCSTR;

/* 3019 */
typedef _FLOATING_SAVE_AREA *PFLOATING_SAVE_AREA;

/* 3020 */
typedef unsigned int *PLCID;

/* 3021 */
typedef char *POCHAR;

/* 3022 */
typedef _PROCESS_PRIORITY_CLASS *PPROCESS_PRIORITY_CLASS;

/* 3023 */
typedef unsigned __int8 u_char;

/* 3024 */
typedef _CROSS_PLATFORM_CONTEXT *PCROSS_PLATFORM_CONTEXT;

/* 3025 */
typedef _DSI3DL2OBSTRUCTION *LPDSI3DL2OBSTRUCTION;

/* 3026 */
typedef _XCALCSIG_SIGNATURE *PXCALCSIG_SIGNATURE;

/* 3027 */
typedef _DBGKD_SET_SPECIAL_CALL32 *PDBGKD_SET_SPECIAL_CALL32;

/* 3028 */
typedef _CM_FLOPPY_DEVICE_DATA *PCM_FLOPPY_DEVICE_DATA;

/* 3029 */
typedef _SLOT_TABLE_INFORMATION *PSLOT_TABLE_INFORMATION;

/* 3030 */
typedef _DRIVERSTATUS *LPDRIVERSTATUS;

/* 3031 */
typedef _PCI_TYPE1_CFG_BITS *PPCI_TYPE1_CFG_BITS;

/* 3032 */
typedef void (__stdcall *PKSTART_ROUTINE)(void *);

/* 3033 */
typedef _FILE_REPARSE_POINT_INFORMATION *PFILE_REPARSE_POINT_INFORMATION;

/* 3034 */
typedef NSR_FID *PNSR_FID;

/* 3035 */
typedef void (__stdcall *PWINDBG_EXTENSION_ROUTINE32)(void *, void *, unsigned int, unsigned int, const char *);

/* 3036 */
typedef _SYSTEM_REGISTRY_QUOTA_INFORMATION *PSYSTEM_REGISTRY_QUOTA_INFORMATION;

/* 3037 */
typedef _WIN32_FILE_ATTRIBUTE_DATA *LPWIN32_FILE_ATTRIBUTE_DATA;

/* 3038 */
typedef const _DSFX_AMPMOD_STEREO_PARAMS *LPCDSFX_AMPMOD_STEREO_PARAMS;

/* 3039 */
typedef __int16 NvS16;

/* 3040 */
typedef void (__stdcall *PWINDBG_GET_SYMBOL64)(unsigned __int64, unsigned __int8 *, unsigned __int64 *);

/* 3041 */
typedef _X86_DESCRIPTOR_TABLE_ENTRY *PX86_DESCRIPTOR_TABLE_ENTRY;

/* 3042 */
typedef _DEVICE_FLAGS *PDEVICE_FLAGS;

/* 3043 */
typedef unsigned __int8 *PBYTE;

/* 3044 */
typedef void (__stdcall *PRTL_GENERIC_FREE_ROUTINE)(_RTL_GENERIC_TABLE *, void *);

/* 3045 */
typedef unsigned __int16 UHALF_PTR;

/* 3046 */
typedef _IMAGE_OS2_HEADER *PIMAGE_OS2_HEADER;

/* 3047 */
typedef _GUID *LPCLSID;

/* 3048 */
typedef _DATA_BLOCK_HEADER *PDATA_BLOCK_HEADER;

/* 3049 */
typedef __int16 *PHALF_PTR;

/* 3050 */
typedef ICBIND *PICBIND;

/* 3051 */
typedef _STRING *PANSI_STRING;

/* 3052 */
typedef _DSFX_ECHO_MONO_PARAMS *LPDSFX_ECHO_MONO_PARAMS;

/* 3053 */
typedef POWER_STATE_HANDLER_TYPE *PPOWER_STATE_HANDLER_TYPE;

/* 3054 */
typedef _PARTITION_INFORMATION *PPARTITION_INFORMATION;

/* 3055 */
typedef _ALPHA_THREAD *PALPHA_THREAD;

/* 3056 */
typedef void (__stdcall *pfXcRC4Key)(unsigned __int8 *, unsigned int, unsigned __int8 *);

/* 3057 */
typedef unsigned int *LPDWORD;

/* 3058 */
typedef _SECURITY_TOKEN_AUDIT_DATA *PSECURITY_TOKEN_AUDIT_DATA;

/* 3059 */
typedef _LIST_ENTRY *PLIST_ENTRY;

/* 3060 */
typedef _KTIMER *PKTIMER;

/* 3061 */
typedef int (__stdcall *PLPCSVR_CONNECT)(void *, _PORT_MESSAGE *, unsigned __int8 *);

/* 3062 */
typedef HCOLORSPACE__ *HCOLORSPACE;

/* 3063 */
typedef _MMGLOBALDATA *PMMGLOBALDATA;

/* 3064 */
typedef _IOSPACE32 *PIOSPACE32;

/* 3065 */
typedef BSAFE_PUB_KEY *LPBSAFE_PUB_KEY;

/* 3066 */
typedef void (__stdcall *PPS_APC_ROUTINE)(void *, void *, void *);

/* 3067 */
typedef _SECURITY_DESCRIPTOR_RELATIVE *PISECURITY_DESCRIPTOR_RELATIVE;

/* 3068 */
typedef unsigned __int16 NvU16;

/* 3069 */
typedef _DSFX_DISTORTION_STATE *LPDSFX_DISTORTION_STATE;

/* 3070 */
typedef _DBGKD_BREAKPOINTEX *PDBGKD_BREAKPOINTEX;

/* 3071 */
typedef _TIME_ZONE_INFORMATION *PTIME_ZONE_INFORMATION;

/* 3072 */
typedef unsigned __int64 ULONG64;

/* 3073 */
typedef unsigned int DWORD_PTR;

/* 3074 */
typedef __int64 *PLONG64;

/* 3075 */
typedef _DMINIT *PDMINIT;

/* 3076 */
typedef _EXCEPTION_POINTERS *PEXCEPTION_POINTERS;

/* 3077 */
typedef unsigned __int64 (__stdcall *PWINDBG_GET_EXPRESSION64)(const char *);

/* 3078 */
typedef mmtime_tag *PMMTIME;

/* 3079 */
typedef void (__stdcall *PDBGSS_HANDLE_MSG_ROUTINE)(_DBGKM_APIMSG *, void *);

/* 3080 */
typedef _FAT_CLUSTER_RUN *PFAT_CLUSTER_RUN;

/* 3081 */
typedef _FILE_MOVE_CLUSTER_INFORMATION *PFILE_MOVE_CLUSTER_INFORMATION;

/* 3082 */
typedef unsigned __int16 NvV16;

/* 3083 */
typedef _OBJECT_TYPE *POBJECT_TYPE;

/* 3084 */
typedef _KIPI_COUNTS *PKIPI_COUNTS;

/* 3085 */
typedef void (__stdcall *PPS_POST_PROCESS_INIT_ROUTINE)();

/* 3086 */
typedef float NvF32;

/* 3087 */
typedef _SYSTEM_EXCEPTION_INFORMATION *PSYSTEM_EXCEPTION_INFORMATION;

/* 3088 */
typedef _DMDVD *PDMDVD;

/* 3089 */
typedef _DBGKM_EXCEPTION *PDBGKM_EXCEPTION;

/* 3090 */
typedef Direct3D *PDIRECT3D8;

/* 3091 */
typedef int (__stdcall *PENTER_STATE_SYSTEM_HANDLER)(void *);

/* 3092 */
typedef _XDEVICE_PREALLOC_TYPE *PXDEVICE_PREALLOC_TYPE;

/* 3093 */
typedef _CM_FULL_RESOURCE_DESCRIPTOR *PCM_FULL_RESOURCE_DESCRIPTOR;

/* 3094 */
typedef _SCSI_BUS_DATA *PSCSI_BUS_DATA;

/* 3095 */
typedef _SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[1];

/* 3096 */
typedef _IMAGE_SECTION_HEADER *PIMAGE_SECTION_HEADER;

/* 3097 */
typedef _FILE_FS_FULL_SIZE_INFORMATION *PFILE_FS_FULL_SIZE_INFORMATION;

/* 3098 */
typedef KMOD *PKMOD;

/* 3099 */
typedef _SYSTEM_AUDIT_OBJECT_ACE *PSYSTEM_AUDIT_OBJECT_ACE;

/* 3100 */
typedef _MMPTERANGE *PMMPTERANGE;

/* 3101 */
typedef _PROCESS_SESSION_INFORMATION *PPROCESS_SESSION_INFORMATION;

/* 3102 */
typedef _KTRAP_FRAME *PKEXCEPTION_FRAME;

/* 3103 */
typedef _FILE_FS_LABEL_INFORMATION *PFILE_FS_LABEL_INFORMATION;

/* 3104 */
typedef _XTHREAD_NOTIFICATION *PXTHREAD_NOTIFICATION;

/* 3105 */
typedef _BREAKPOINT_ENTRY *PBREAKPOINT_ENTRY;

/* 3106 */
typedef NSR_FSD *PNSR_FSD;

/* 3107 */
typedef _IO_RESOURCE_REQUIREMENTS_LIST *PIO_RESOURCE_REQUIREMENTS_LIST;

/* 3108 */
typedef int INT;

/* 3109 */
typedef _FILE_FS_DEVICE_INFORMATION *PFILE_FS_DEVICE_INFORMATION;

/* 3110 */
typedef void (__fastcall *PSWAP_CONTEXT_NOTIFY_ROUTINE)(void *, void *);

/* 3111 */
typedef linger *PLINGER;

/* 3112 */
typedef unsigned int LCID;

/* 3113 */
typedef HICON__ *HICON;

/* 3114 */
typedef void (__stdcall *pfXcSHAInit)(unsigned __int8 *);

/* 3115 */
typedef int __stdcall RTLP_EXIT_THREAD(int);

/* 3116 */
typedef char *LPSTR;

/* 3117 */
typedef char *NPSTR;

/* 3118 */
typedef HWINEVENTHOOK__ *HWINEVENTHOOK;

/* 3119 */
typedef HBITMAP__ *HBITMAP;

/* 3120 */
typedef _SYSTEM_CALL_TIME_INFORMATION *PSYSTEM_CALL_TIME_INFORMATION;

/* 3121 */
typedef const _DSFX_ECHO_MONO_PARAMS *LPCDSFX_ECHO_MONO_PARAMS;

/* 3122 */
typedef _DS3DBUFFER *LPDS3DBUFFER;

/* 3123 */
typedef void *PSID;

/* 3124 */
typedef _BY_HANDLE_FILE_INFORMATION *PBY_HANDLE_FILE_INFORMATION;

/* 3125 */
typedef EXTAD *PEXTAD;

/* 3126 */
typedef _HARDWARE_PTE *PHARDWARE_PTE;

/* 3127 */
typedef void (__stdcall *PWINDBG_EXTENSION_ROUTINE)(void *, void *, unsigned int, unsigned int, const char *);

/* 3128 */
typedef IStream *LPSTREAM;

/* 3129 */
typedef D3DVertexBuffer *LPDIRECT3DVERTEXBUFFER8;

/* 3130 */
typedef _GDI_TEB_BATCH *PGDI_TEB_BATCH;

/* 3131 */
typedef _MODE_PARM_READ_WRITE *PMODE_PARM_READ_WRITE_DATA;

/* 3132 */
typedef _FILE_POSITION_INFORMATION *PFILE_POSITION_INFORMATION;

/* 3133 */
typedef _RTL_CRITICAL_SECTION *LPCRITICAL_SECTION;

/* 3134 */
typedef _SYSTEM_FILECACHE_INFORMATION *PSYSTEM_FILECACHE_INFORMATION;

/* 3135 */
typedef _QUAD *PUQUAD;

/* 3136 */
typedef void *(__stdcall *OB_ALLOCATE_METHOD)(unsigned int, unsigned int);

/* 3137 */
typedef _CDROM_SEEK_AUDIO_MSF *PCDROM_SEEK_AUDIO_MSF;

/* 3138 */
typedef unsigned __int16 *LPOLESTR;

/* 3139 */
typedef const _DS3DBUFFER *LPCDS3DBUFFER;

/* 3140 */
typedef _STRING32 *PSTRING32;

/* 3141 */
typedef _POOLED_USAGE_AND_LIMITS *PPOOLED_USAGE_AND_LIMITS;

/* 3142 */
typedef _CM_DISK_GEOMETRY_DEVICE_DATA *PCM_DISK_GEOMETRY_DEVICE_DATA;

/* 3143 */
typedef _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY *PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;

/* 3144 */
typedef int (__stdcall *PDBGSS_UI_LOOKUP)(_CLIENT_ID *, _CLIENT_ID *);

/* 3145 */
typedef _LD_LAUNCH_DASHBOARD *PLD_LAUNCH_DASHBOARD;

/* 3146 */
typedef _MICROCODE_UPDATE_DATA_BLOCK *PMICROCODE_UPDATE_DATA_BLOCK;

/* 3147 */
typedef _PS_STATISTICS *PPS_STATISTICS;

/* 3148 */
typedef ID3DXSPMesh *LPD3DXSPMESH;

/* 3149 */
typedef _X86_KTRAP_FRAME *PX86_KTRAP_FRAME;

/* 3150 */
typedef _RTL_HEAP_ENTRY *PRTL_HEAP_ENTRY;

/* 3151 */
typedef _BIN_COUNT *PBIN_COUNT;

/* 3152 */
typedef _XINPUT_CAPABILITIES *PXINPUT_CAPABILITIES;

/* 3153 */
typedef _DBGKD_DEBUG_DATA_HEADER64 *PDBGKD_DEBUG_DATA_HEADER64;

/* 3154 */
typedef void (__stdcall *PIDE_TIMEOUT_EXPIRED_ROUTINE)();

/* 3155 */
typedef _DBGKD_SET_CONTEXT *PDBGKD_SET_CONTEXT;

/* 3156 */
typedef unsigned int (__stdcall *PTHREAD_START_ROUTINE)(void *);

/* 3157 */
typedef _SYSTEMTIME *PSYSTEMTIME;

/* 3158 */
typedef _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER;

/* 3159 */
typedef _KD_SYMBOLS_INFO *PKD_SYMBOLS_INFO;

/* 3160 */
typedef void (__stdcall *OB_FREE_METHOD)(void *);

/* 3161 */
typedef _IA64_UNWIND_INFO *PIA64_UNWIND_INFO;

/* 3162 */
typedef IDirectXFileDataReference *LPDIRECTXFILEDATAREFERENCE;

/* 3163 */
typedef _DSFX_ECHO_STEREO_PARAMS *LPDSFX_ECHO_STEREO_PARAMS;

/* 3164 */
typedef _LAUNCH_DATA *PLAUNCH_DATA;

/* 3165 */
typedef HHOOK__ *HHOOK;

/* 3166 */
typedef DESTAG *PDESTAG;

/* 3167 */
typedef void *PKIPI_CONTEXT;

/* 3168 */
typedef _ETHREAD *PETHREAD;

/* 3169 */
typedef _TEB *PTEB;

/* 3170 */
typedef _FILE_OBJECT *PFILE_OBJECT;

/* 3171 */
typedef _DBGKD_READ_MEMORY64 *PDBGKD_READ_MEMORY3264;

/* 3172 */
typedef __int64 fpos_t;

/* 3173 */
typedef _POOL_BLOCK *PPOOL_BLOCK;

/* 3174 */
typedef unsigned int *LPFOURCC;

/* 3175 */
typedef int (__stdcall *PTOP_LEVEL_EXCEPTION_FILTER)(_EXCEPTION_POINTERS *);

/* 3176 */
typedef _LUN_LIST *PLUN_LIST;

/* 3177 */
typedef VSD_BOOT2 *PVSD_BOOT2;

/* 3178 */
typedef _RTL_PROCESS_BACKTRACES *PRTL_PROCESS_BACKTRACES;

/* 3179 */
typedef _CDVD_CAPABILITIES_PAGE *PCDVD_CAPABILITIES_PAGE;

/* 3180 */
typedef _ATA_PASS_THROUGH *PATA_PASS_THROUGH;

/* 3181 */
typedef _DMA_WIDTH *PDMA_WIDTH;

/* 3182 */
typedef unsigned int u_long;

/* 3183 */
typedef __int64 REFERENCE_TIME;

/* 3184 */
typedef _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER32;

/* 3185 */
typedef _RTL_DEBUG_INFORMATION *PRTL_DEBUG_INFORMATION;

/* 3186 */
typedef _MEMORY_BASIC_INFORMATION *PMEMORY_BASIC_INFORMATION;

/* 3187 */
typedef _CONTEXT *PCONTEXT;

/* 3188 */
typedef _IOP_MINI_COMPLETION_PACKET *PIOP_MINI_COMPLETION_PACKET;

/* 3189 */
typedef ID3DXRenderToEnvMap *LPD3DXRenderToEnvMap;

/* 3190 */
typedef SYSTEM_POWER_LEVEL *PSYSTEM_POWER_LEVEL;

/* 3191 */
typedef _ACL_REVISION_INFORMATION *PACL_REVISION_INFORMATION;

/* 3192 */
typedef _AUDIO_OUTPUT *PAUDIO_OUTPUT;

/* 3193 */
typedef _GETVERSIONINPARAMS *PGETVERSIONINPARAMS;

/* 3194 */
typedef XAc97MediaObject *LPAC97MEDIAOBJECT;

/* 3195 */
typedef _DSFX_AMPMOD_MONO_STATE *LPDSFX_AMPMOD_MONO_STATE;

/* 3196 */
typedef int (__cdecl *_onexit_t)();

/* 3197 */
typedef _KAPC_STATE *PRKAPC_STATE;

/* 3198 */
typedef _X86_KPCR *PX86_KPCR;

/* 3199 */
typedef int SSIZE_T;

/* 3200 */
typedef unsigned int *PSIZE_T;

/* 3201 */
typedef _READ_DVD_STRUCTURES_HEADER *PREAD_DVD_STRUCTURES_HEADER;

/* 3202 */
typedef _EXTSTACKTRACE *PEXTSTACKTRACE;

/* 3203 */
typedef _OHCI_OPERATIONAL_REGISTERS *POHCI_OPERATIONAL_REGISTERS;

/* 3204 */
typedef _LIST_ENTRY *PRLIST_ENTRY;

/* 3205 */
typedef PARTMAP_PHYSICAL *PPARTMAP_PHYSICAL;

/* 3206 */
typedef _DISK_RECORD *PDISK_RECORD;

/* 3207 */
typedef void *PACCESS_TOKEN;

/* 3208 */
typedef _FAT_FCB_BASE *PFAT_FCB_BASE;

/* 3209 */
typedef _STRING *POEM_STRING;

/* 3210 */
typedef _DBGKD_CONTINUE *PDBGKD_CONTINUE;

/* 3211 */
typedef _REMOTE_PORT_VIEW *PREMOTE_PORT_VIEW;

/* 3212 */
typedef _READ_CAPACITY_DATA *PREAD_CAPACITY_DATA;

/* 3213 */
typedef _SYSTEM_SET_TIME_ADJUST_INFORMATION *PSYSTEM_SET_TIME_ADJUST_INFORMATION;

/* 3214 */
typedef _SYSTEM_ALARM_OBJECT_ACE *PSYSTEM_ALARM_OBJECT_ACE;

/* 3215 */
typedef _DBGKD_WAIT_STATE_CHANGE64 *PDBGKD_WAIT_STATE_CHANGE3264;

/* 3216 */
typedef unsigned int (__stdcall *PWINDBG_READ_PROCESS_MEMORY_ROUTINE32)(unsigned int, void *, unsigned int, unsigned int *);

/* 3217 */
typedef _XINPUT_POLLING_PARAMETERS *PXINPUT_POLLING_PARAMETERS;

/* 3218 */
typedef _IMAGE_IA64_RUNTIME_FUNCTION_ENTRY *PIMAGE_IA64_RUNTIME_FUNCTION_ENTRY;

/* 3219 */
typedef _CDROM_AUDIO_CONTROL *PCDROM_AUDIO_CONTROL;

/* 3220 */
typedef _MEDIA_TYPE *PMEDIA_TYPE;

/* 3221 */
typedef _FSCTL_VOLUME_METADATA *PFSCTL_VOLUME_METADATA;

/* 3222 */
typedef _RTL_PROCESS_HEAPS *PRTL_PROCESS_HEAPS;

/* 3223 */
typedef _EXTSTACKTRACE32 *PEXTSTACKTRACE32;

/* 3224 */
typedef _DBGKM_APIMSG *PDBGKM_APIMSG;

/* 3225 */
typedef HTASK__ *HTASK;

/* 3226 */
typedef unsigned int (__fastcall *PMMREMOVE_PAGE_ROUTINE)(_MMPFN_BUSY_TYPE, _MMPTE *);

/* 3227 */
typedef int NvS32;

/* 3228 */
typedef unsigned int D3DCOLOR;

/* 3229 */
typedef const _XMEDIAPACKET *REFXMEDIAPACKET;

/* 3230 */
typedef _STRING32 *PANSI_STRING32;

/* 3231 */
typedef _OSVERSIONINFOW *LPOSVERSIONINFO;

/* 3232 */
typedef ID3DXRenderToSurface *LPD3DXRENDERTOSURFACE;

/* 3233 */
typedef _PRIVILEGE_SET *PPRIVILEGE_SET;

/* 3234 */
typedef ID3DXSprite *LPD3DXSPRITE;

/* 3235 */
typedef _DBGKD_CONTROL_REPORT *PDBGKD_CONTROL_REPORT;

/* 3236 */
typedef unsigned __int16 u_short;

/* 3237 */
typedef _FIBER *PFIBER;

/* 3238 */
typedef _DVD_DESCRIPTOR_HEADER *PDVD_DESCRIPTOR_HEADER;

/* 3239 */
typedef _KSPECIAL_REGISTERS *PKSPECIAL_REGISTERS;

/* 3240 */
typedef int (__stdcall *PLPCSVR_REQUEST)(void *, _PORT_MESSAGE *, _PORT_MESSAGE *);

/* 3241 */
typedef void *(__stdcall *PRTL_GENERIC_ALLOCATE_ROUTINE)(_RTL_GENERIC_TABLE *, unsigned int);

/* 3242 */
typedef void (__stdcall *PIDE_FINISHIO_ROUTINE)();

/* 3243 */
typedef unsigned __int16 *PBAD_TRACK_NUMBER;

/* 3244 */
typedef _TRACE_DATA_SYM *PTRACE_DATA_SYM;

/* 3245 */
typedef _RTL_GENERIC_COMPARE_RESULTS (__stdcall *PRTL_GENERIC_COMPARE_ROUTINE)(_RTL_GENERIC_TABLE *, void *, void *);

/* 3246 */
typedef _IOSPACE *PIOSPACE;

/* 3247 */
typedef _PCI_SLOT_NUMBER *PPCI_SLOT_NUMBER;

/* 3248 */
typedef unsigned int (__stdcall *PWINDBG_IOCTL_ROUTINE)(unsigned __int16, void *, unsigned int);

/* 3249 */
typedef _DBGKD_WAIT_STATE_CHANGE64 *PDBGKD_WAIT_STATE_CHANGE64;

/* 3250 */
typedef int INT_PTR;

/* 3251 */
typedef unsigned int NvU32;

/* 3252 */
typedef _EISA_MEMORY_TYPE *PEISA_MEMORY_TYPE;

/* 3253 */
typedef _DS3DLISTENER *LPDS3DLISTENER;

/* 3254 */
typedef _CM_VIDEO_DEVICE_DATA *PCM_VIDEO_DEVICE_DATA;

/* 3255 */
typedef _MODE_PARAMETER_BLOCK *PMODE_PARAMETER_BLOCK;

/* 3256 */
typedef _TRACK_DATA *PTRACK_DATA;

/* 3257 */
typedef D3DCubeTexture *LPDIRECT3DCUBETEXTURE8;

/* 3258 */
typedef HPALETTE__ *HPALETTE;

/* 3259 */
typedef _PORT_DATA_INFORMATION *PPORT_DATA_INFORMATION;

/* 3260 */
typedef unsigned int DWORD32;

/* 3261 */
typedef _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS32;

/* 3262 */
typedef _KEY_VALUE_BASIC_INFORMATION *PKEY_VALUE_BASIC_INFORMATION;

/* 3263 */
typedef unsigned int NvV32;

/* 3264 */
typedef void (__stdcall *PKNORMAL_ROUTINE)(void *, void *, void *);

/* 3265 */
typedef _DBGKM_EXIT_PROCESS *PDBGKM_EXIT_PROCESS;

/* 3266 */
typedef _CM_PCCARD_DEVICE_DATA *PCM_PCCARD_DEVICE_DATA;

/* 3267 */
typedef HENHMETAFILE__ *HENHMETAFILE;

/* 3268 */
typedef DVD_STRUCTURE_FORMAT *PDVD_STRUCTURE_FORMAT;

/* 3269 */
typedef D3DK::NV_PATCH_CURVE_INFO *FDCurveAttrSet[16];

/* 3270 */
typedef EXTENTAD *PEXTENTAD;

/* 3271 */
typedef _LUID *PLUID;

/* 3272 */
typedef _PROCESSOR_POWER_INFORMATION *PPROCESSOR_POWER_INFORMATION;

/* 3273 */
typedef HDESK__ *HDESK;

/* 3274 */
typedef NSR_LVOL *PNSR_LVOL;

/* 3275 */
typedef _DBGSRV_APIMSG *PDBGSRV_APIMSG;

/* 3276 */
typedef const _UNICODE_STRING *PCUNICODE_STRING;

/* 3277 */
typedef _RTL_HANDLE_TABLE_ENTRY *PRTL_HANDLE_TABLE_ENTRY;

/* 3278 */
typedef unsigned int LOGICAL;

/* 3279 */
typedef __int64 *PREFERENCE_TIME;

/* 3280 */
typedef _DBGKM_EXCEPTION32 *PDBGKM_EXCEPTION32;

/* 3281 */
typedef _DSFX_IIR_PARAMS *LPDSFX_IIR_PARAMS;

/* 3282 */
typedef _IMAGE_RESOURCE_DIRECTORY *PIMAGE_RESOURCE_DIRECTORY;

/* 3283 */
typedef _SYSTEM_VERIFIER_INFORMATION *PSYSTEM_VERIFIER_INFORMATION;

/* 3284 */
typedef void (__stdcall *_PMFN)();

/* 3285 */
typedef const _RECTL *LPCRECTL;

/* 3286 */
typedef _PCI_MSI_CAPABILITY *PPCI_PCI_CAPABILITY;

/* 3287 */
typedef _OVERLAPPED *LPWSAOVERLAPPED;

/* 3288 */
typedef ID3DXSkinMesh *LPD3DXSKINMESH;

/* 3289 */
typedef _KEY_FULL_INFORMATION *PKEY_FULL_INFORMATION;

/* 3290 */
typedef _RTL_PROCESS_LOCKS *PRTL_PROCESS_LOCKS;

/* 3291 */
typedef _IO_COUNTERS *PIO_COUNTERS;

/* 3292 */
typedef const _DSFX_IIR2_PARAMS *LPCDSFX_IIR2_PARAMS;

/* 3293 */
typedef D3DXMATRIX *LPD3DXMATRIX;

/* 3294 */
typedef _OHCD_ENDPOINT *POHCD_ENDPOINT;

/* 3295 */
typedef _SYSTEM_THREAD_INFORMATION *PSYSTEM_THREAD_INFORMATION;

/* 3296 */
typedef D3DResource *PDIRECT3DRESOURCE8;

/* 3297 */
typedef NSR_UASD *PNSR_UASD;

/* 3298 */
typedef _CM_MONITOR_DEVICE_DATA *PCM_MONITOR_DEVICE_DATA;

/* 3299 */
typedef IMAGE_LOAD_CONFIG_DIRECTORY32 *PIMAGE_LOAD_CONFIG_DIRECTORY;

/* 3300 */
typedef void (__stdcall *pfXcHMAC)(unsigned __int8 *, unsigned int, unsigned __int8 *, unsigned int, unsigned __int8 *, unsigned int, unsigned __int8 *);

/* 3301 */
typedef MCPX_PACKET_CONTEXT *PMCPX_PACKET_CONTEXT;

/* 3302 */
typedef _CDROM_TOC *PCDROM_TOC;

/* 3303 */
typedef const _DSFX_I3DL2REVERB_STATE *LPCDSFX_I3DL2REVERB_STATE;

/* 3304 */
typedef _SYSTEM_PERFORMANCE_INFORMATION *PSYSTEM_PERFORMANCE_INFORMATION;

/* 3305 */
typedef _FILE_FS_OBJECTID_INFORMATION *PFILE_FS_OBJECTID_INFORMATION;

/* 3306 */
typedef _LARGE_INTEGER *PLARGE_INTEGER;

/* 3307 */
typedef _LD_FROM_DEBUGGER_CMDLINE *PLD_FROM_DEBUGGER_CMDLINE;

/* 3308 */
typedef BSAFE_PRV_KEY *LPBSAFE_PRV_KEY;

/* 3309 */
typedef _KEY_VALUE_PARTIAL_INFORMATION *PKEY_VALUE_PARTIAL_INFORMATION;

/* 3310 */
typedef unsigned int SOCKET;

/* 3311 */
typedef _DBGKD_SET_SPECIAL_CALL64 *PDBGKD_SET_SPECIAL_CALL64;

/* 3312 */
typedef _SECURITY_SEED_AND_LENGTH *PSECURITY_SEED_AND_LENGTH;

/* 3313 */
typedef _DISK_GROW_PARTITION *PDISK_GROW_PARTITION;

/* 3314 */
typedef _IMAGE_OPTIONAL_HEADER64 *PIMAGE_OPTIONAL_HEADER64;

/* 3315 */
typedef const _DSSTREAMDESC *LPCDSSTREAMDESC;

/* 3316 */
typedef _MUTANT_BASIC_INFORMATION *PMUTANT_BASIC_INFORMATION;

/* 3317 */
typedef HINSTANCE__ *HINSTANCE;

/* 3318 */
typedef _DISK_PERFORMANCE *PDISK_PERFORMANCE;

/* 3319 */
typedef void (__stdcall *PWINDBG_EXTENSION_ROUTINE64)(void *, void *, unsigned __int64, unsigned int, const char *);

/* 3320 */
typedef unsigned int Nv1196Typedef;

/* 3321 */
typedef _KPRCB *PRKPRCB;

/* 3322 */
typedef const unsigned __int16 *LPCTSTR;

/* 3323 */
typedef _FILE_PIPE_LOCAL_INFORMATION *PFILE_PIPE_LOCAL_INFORMATION;

/* 3324 */
typedef _SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE;

/* 3325 */
typedef D3DVolumeTexture *LPDIRECT3DVOLUMETEXTURE8;

/* 3326 */
typedef unsigned int u_int;

/* 3327 */
typedef _SGEHEAPRUNMARKER *LPSGEHEAPRUNMARKER;

/* 3328 */
typedef int (__stdcall *PUSER_THREAD_START_ROUTINE)(void *);

/* 3329 */
typedef const tWAVEFORMATEX *LPCWAVEFORMATEX;

/* 3330 */
typedef _DVD_REGION *PDVD_REGION;

/* 3331 */
typedef _DBGKM_CREATE_PROCESS *PDBGKM_CREATE_PROCESS;

/* 3332 */
typedef _MESSAGE_RESOURCE_DATA *PMESSAGE_RESOURCE_DATA;

/* 3333 */
typedef _SYSTEM_DEVICE_INFORMATION *PSYSTEM_DEVICE_INFORMATION;

/* 3334 */
typedef void (__fastcall *PSET_PROCESSOR_THROTTLE)(unsigned __int8);

/* 3335 */
typedef _WINDBG_OLD_EXTENSION_APIS *PWINDBG_OLD_EXTENSION_APIS;

/* 3336 */
typedef _IMAGE_IMPORT_BY_NAME *PIMAGE_IMPORT_BY_NAME;

/* 3337 */
typedef unsigned int ACCESS_MASK;

/* 3338 */
typedef void (__cdecl *D3DWAITCALLBACK)(unsigned int);

/* 3339 */
typedef D3DIndexBuffer *PDIRECT3DINDEXBUFFER8;

/* 3340 */
typedef NSR_TERM *PNSR_TERM;

/* 3341 */
typedef _DBGKD_DEBUG_DATA_HEADER32 *PDBGKD_DEBUG_DATA_HEADER32;

/* 3342 */
typedef unsigned int Nv096Typedef;

/* 3343 */
typedef unsigned int Nv097Typedef;

/* 3344 */
typedef _SLIST_HEADER *PSLIST_HEADER;

/* 3345 */
typedef _OBJECT_ATTRIBUTES *POBJECT_ATTRIBUTES;

/* 3346 */
typedef int *PLONG32;

/* 3347 */
typedef _FILE_SEGMENT_ELEMENT *PFILE_SEGMENT_ELEMENT;

/* 3348 */
typedef void (__stdcall *PINTERFACE_DEREFERENCE)(void *);

/* 3349 */
typedef NSR_PVD *PNSR_PVD;

/* 3350 */
typedef unsigned int ULONG32;

/* 3351 */
typedef _PCI_TYPE1_CFG_CYCLE_BITS *PPCI_TYPE1_CFG_CYCLE_BITS;

/* 3352 */
typedef _DSFX_FLANGE_STEREO_STATE *LPDSFX_FLANGE_STEREO_STATE;

/* 3353 */
typedef IDirectXFileSaveObject *LPDIRECTXFILESAVEOBJECT;

/* 3354 */
typedef _TOKEN_OWNER *PTOKEN_OWNER;

/* 3355 */
typedef _XBOX_CONFIG_SECTOR *PXBOX_CONFIG_SECTOR;

/* 3356 */
typedef const unsigned __int16 *PCWSTR;

/* 3357 */
typedef _VSD_IDENT *PVSD_IDENT;

/* 3358 */
typedef _DSEFFECTIMAGEDESC *LPDSEFFECTIMAGEDESC;

/* 3359 */
typedef _DSFX_CHORUS_STEREO_PARAMS *LPDSFX_CHORUS_STEREO_PARAMS;

/* 3360 */
typedef _PCI_COMMON_CONFIG *PPCI_COMMON_CONFIG;

/* 3361 */
typedef _LPC_CLIENT_DIED_MSG *PLPC_CLIENT_DIED_MSG;

/* 3362 */
typedef long double NvF64;

/* 3363 */
typedef _KTIMER *PRKTIMER;

/* 3364 */
typedef _ACE_HEADER *PACE_HEADER;

/* 3365 */
typedef const unsigned __int16 *PCTSTR;

/* 3366 */
typedef void (__stdcall *XTHREAD_NOTIFY_PROC)(int);

/* 3367 */
typedef _MODE_CACHING_PAGE *PMODE_CACHING_PAGE;

/* 3368 */
typedef NSR_LVHD *PNSR_LVHD;

/* 3369 */
typedef TIMESTAMP *PTIMESTAMP;

/* 3370 */
typedef IDirectSoundBuffer *LPDIRECTSOUNDBUFFER;

/* 3371 */
typedef const _DSFX_CHORUS_MONO_STATE *LPCDSFX_CHORUS_MONO_STATE;

/* 3372 */
typedef _PCI_CAPABILITIES_HEADER *PPCI_CAPABILITIES_HEADER;

/* 3373 */
typedef _SYSTEM_BASIC_INFORMATION *PSYSTEM_BASIC_INFORMATION;

/* 3374 */
typedef NSR_VDP *PNSR_VDP;

/* 3375 */
typedef void (__stdcall *LPOVERLAPPED_COMPLETION_ROUTINE)(unsigned int, unsigned int, _OVERLAPPED *);

/* 3376 */
typedef int (__stdcall *PROC)();

/* 3377 */
typedef _KERNEL_USER_TIMES *PKERNEL_USER_TIMES;

/* 3378 */
typedef _BIN_RESULTS *PBIN_RESULTS;

/* 3379 */
typedef unsigned int DXFILELOADOPTIONS;

/* 3380 */
typedef const _DSFX_MINIREVERB_STATE *LPCDSFX_MINIREVERB_STATE;

/* 3381 */
typedef _KDEVICE_QUEUE *PKDEVICE_QUEUE;

/* 3382 */
typedef _IMAGE_RESOURCE_DIRECTORY_STRING *PIMAGE_RESOURCE_DIRECTORY_STRING;

/* 3383 */
typedef _FILE_INFORMATION_CLASS *PFILE_INFORMATION_CLASS;

/* 3384 */
typedef _KAPC *PRKAPC;

/* 3385 */
typedef _RTL_TIME_ZONE_INFORMATION *PRTL_TIME_ZONE_INFORMATION;

/* 3386 */
typedef _STRING32 *PUNICODE_STRING32;

/* 3387 */
typedef _DESCRIPTOR *PKDESCRIPTOR;

/* 3388 */
typedef _D3DVECTOR *LPD3DVECTOR;

/* 3389 */
typedef unsigned __int16 *PWSTR;

/* 3390 */
typedef const char *LPCSTR;

/* 3391 */
typedef _TIME_ZONE_INFORMATION *LPTIME_ZONE_INFORMATION;

/* 3392 */
typedef _SID_IDENTIFIER_AUTHORITY *PSID_IDENTIFIER_AUTHORITY;

/* 3393 */
typedef _CDVD_KEY_DATA *PCDVD_KEY_DATA;

/* 3394 */
typedef _DXFILELOADRESOURCE *LPDXFILELOADRESOURCE;

/* 3395 */
typedef NSR_SBD *PNSR_SBD;

/* 3396 */
typedef const _DSFX_I3DL2REVERB_IIR *LPCDSFX_I3DL2REVERB_IIR;

/* 3397 */
typedef _SYSTEM_LOOKASIDE_INFORMATION *PSYSTEM_LOOKASIDE_INFORMATION;

/* 3398 */
typedef int LONG_PTR;

/* 3399 */
typedef _IA64_KEXCEPTION_FRAME *PIA64_KEXCEPTION_FRAME;

/* 3400 */
typedef _FILE_FS_VOLUME_INFORMATION *PFILE_FS_VOLUME_INFORMATION;

/* 3401 */
typedef SYSTEM_BATTERY_STATE *PSYSTEM_BATTERY_STATE;

/* 3402 */
typedef _KEY_WRITE_TIME_INFORMATION *PKEY_WRITE_TIME_INFORMATION;

/* 3403 */
typedef const _DSFX_CHORUS_STEREO_STATE *LPCDSFX_CHORUS_STEREO_STATE;

/* 3404 */
typedef int *PNTSTATUS;

/* 3405 */
typedef const _DSFX_I3DL2REVERB_PARAMS *LPCDSFX_I3DL2REVERB_PARAMS;

/* 3406 */
typedef _TAPE_POSITION_DATA *PTAPE_POSITION_DATA;

/* 3407 */
typedef _RTL_PROCESS_LOCK_INFORMATION *PRTL_PROCESS_LOCK_INFORMATION;

/* 3408 */
typedef _FSCACHE_EXTENSION *PFSCACHE_EXTENSION;

/* 3409 */
typedef tagPALETTEENTRY *PPALETTEENTRY;

/* 3410 */
typedef _SRB_IO_CONTROL *PSRB_IO_CONTROL;

/* 3411 */
typedef _SINGLE_LIST_ENTRY *PSINGLE_LIST_ENTRY;

/* 3412 */
typedef _STRING64 *PANSI_STRING64;

/* 3413 */
typedef void (__stdcall *PKIPI_WORKER)(void *, void *, void *, void *);

/* 3414 */
typedef unsigned int (__stdcall *LPPROGRESS_ROUTINE)(_LARGE_INTEGER, _LARGE_INTEGER, _LARGE_INTEGER, _LARGE_INTEGER, unsigned int, unsigned int, void *, void *, void *);

/* 3415 */
typedef int intptr_t;

/* 3416 */
typedef const tagRECT *LPCRECT;

/* 3417 */
typedef _CDVD_CHALLENGE_KEY_DATA *PCDVD_CHALLENGE_KEY_DATA;

/* 3418 */
typedef _VERIFY_INFORMATION *PVERIFY_INFORMATION;

/* 3419 */
typedef _TIME_FIELDS *PTIME_FIELDS;

/* 3420 */
typedef _CDDA_OUTPUT_PORT *PCDDA_OUTPUT_PORT;

/* 3421 */
typedef _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64 *PKEY_VALUE_PARTIAL_INFORMATION_ALIGN64;

/* 3422 */
typedef void *HANDLE;

/* 3423 */
typedef const _DSFX_CHORUS_MONO_PARAMS *LPCDSFX_CHORUS_MONO_PARAMS;

/* 3424 */
typedef _UDF_DIRECTORY_MAPPING *PUDF_DIRECTORY_MAPPING;

/* 3425 */
typedef _IMAGE_FILE_HEADER *PIMAGE_FILE_HEADER;

/* 3426 */
typedef CRYPTO_VECTOR *PCRYPTO_VECTOR;

/* 3427 */
typedef _DSFX_MINIREVERB_STATE *LPDSFX_MINIREVERB_STATE;

/* 3428 */
typedef _CDVD_REPORT_ASF_DATA *PCDVD_REPORT_ASF_DATA;

/* 3429 */
typedef _DBGKD_WAIT_STATE_CHANGE32 *PDBGKD_WAIT_STATE_CHANGE32;

/* 3430 */
typedef _CDB *PCDB;

/* 3431 */
typedef int (__stdcall *PLPCSVR_RUNDOWN)(void *, _PORT_MESSAGE *);

/* 3432 */
typedef _DVDX2_HOST_CHALLENGE_RESPONSE_TABLE *PDVDX2_HOST_CHALLENGE_RESPONSE_TABLE;

/* 3433 */
typedef _PCI_PMCSR *PPCI_PMCSR;

/* 3434 */
typedef _KPROCESSOR_STATE *PKPROCESSOR_STATE;

/* 3435 */
typedef unsigned __int16 *PSECURITY_DESCRIPTOR_CONTROL;

/* 3436 */
typedef _KSYSTEM_TIME *PKSYSTEM_TIME;

/* 3437 */
typedef int CM_RESOURCE_TYPE;

/* 3438 */
typedef _SENDCMDINPARAMS *LPSENDCMDINPARAMS;

/* 3439 */
typedef _GUID *LPGUID;

/* 3440 */
typedef _ULARGE_INTEGER *PULARGE_INTEGER;

/* 3441 */
typedef _SCSI_INQUIRY_DATA *PSCSI_INQUIRY_DATA;

/* 3442 */
typedef _PCI_TYPE0_CFG_CYCLE_BITS *PPCI_TYPE0_CFG_CYCLE_BITS;

/* 3443 */
typedef unsigned __int16 *LPWCH;

/* 3444 */
typedef _CM_COMPONENT_INFORMATION *PCM_COMPONENT_INFORMATION;

/* 3445 */
typedef _SYSTEM_FLAGS_INFORMATION *PSYSTEM_FLAGS_INFORMATION;

/* 3446 */
typedef _IMAGE_CE_RUNTIME_FUNCTION_ENTRY *PIMAGE_CE_RUNTIME_FUNCTION_ENTRY;

/* 3447 */
typedef _WINDBG_OLDKD_EXTENSION_APIS *PWINDBG_OLDKD_EXTENSION_APIS;

/* 3448 */
typedef _IMAGE_RELOCATION *PIMAGE_RELOCATION;

/* 3449 */
typedef _XDATA_SECTION_HEADER *PXDATA_SECTION_HEADER;

/* 3450 */
typedef IDirectSoundStream *LPDIRECTSOUNDSTREAM;

/* 3451 */
typedef unsigned __int8 (__stdcall *PKTRANSFER_ROUTINE)();

/* 3452 */
typedef unsigned __int16 *LPTCH;

/* 3453 */
typedef volatile _MCPX_HW_NOTIFICATION *PMCPX_HW_NOTIFICATION;

/* 3454 */
typedef char KPROCESSOR_MODE;

/* 3455 */
typedef _LDT_SIZE *PPROCESS_LDT_SIZE;

/* 3456 */
typedef _OVERLAPPED *LPOVERLAPPED;

/* 3457 */
typedef _DBGKD_READ_WRITE_IO_EXTENDED64 *PDBGKD_READ_WRITE_IO_EXTENDED64;

/* 3458 */
typedef tagRECT *PRECT;

/* 3459 */
typedef unsigned int *PFOURCC;

/* 3460 */
typedef void (__cdecl *D3DVBLANKCALLBACK)(_D3DVBLANKDATA *);

/* 3461 */
typedef _GDF_VOLUME_DESCRIPTOR *PGDF_VOLUME_DESCRIPTOR;

/* 3462 */
typedef _FILE_ACCESS_INFORMATION *PFILE_ACCESS_INFORMATION;

/* 3463 */
typedef _CM_PARTIAL_RESOURCE_DESCRIPTOR *PCM_PARTIAL_RESOURCE_DESCRIPTOR;

/* 3464 */
typedef _THREAD_BASIC_INFORMATION *PTHREAD_BASIC_INFORMATION;

/* 3465 */
typedef REGID *PREGID;

/* 3466 */
typedef _DBGKM_EXCEPTION64 *PDBGKM_EXCEPTION64;

/* 3467 */
typedef _DBGKD_LOAD_SYMBOLS32 *PDBGKD_LOAD_SYMBOLS32;

/* 3468 */
typedef _FILE_PIPE_INFORMATION *PFILE_PIPE_INFORMATION;

/* 3469 */
typedef void (__stdcall *PFNDumpFrameRateInfoHandler)();

/* 3470 */
typedef _EXTSTACKTRACE64 *PEXTSTACKTRACE64;

/* 3471 */
typedef _LAUNCH_DATA_HEADER *PLAUNCH_DATA_HEADER;

/* 3472 */
typedef _FILE_ALL_INFORMATION *PFILE_ALL_INFORMATION;

/* 3473 */
typedef const _DSFX_DISTORTION_PARAMS *LPCDSFX_DISTORTION_PARAMS;

/* 3474 */
typedef IMAGE_LOAD_CONFIG_DIRECTORY32 *PIMAGE_LOAD_CONFIG_DIRECTORY32;

/* 3475 */
typedef D3DPalette *PDIRECT3DPALETTE8;

/* 3476 */
typedef _PROCESS_HEAP_ENTRY *LPPROCESS_HEAP_ENTRY;

/* 3477 */
typedef _POWER_CONDITION_PAGE *PPOWER_CONDITION_PAGE;

/* 3478 */
typedef _XPP_DEVICE_TYPE *PXPP_DEVICE_TYPE;

/* 3479 */
typedef unsigned __int8 XBEIMAGE_CERTIFICATE_KEY[16];

/* 3480 */
typedef NSR_PATH *PNSR_PATH;

/* 3481 */
typedef tWAVEFORMATEX *PWAVEFORMATEX;

/* 3482 */
typedef _SYSTEM_POWER_POLICY *PSYSTEM_POWER_POLICY;

/* 3483 */
typedef _XGAME_FIND_DATA *PXGAME_FIND_DATA;

/* 3484 */
typedef _DBGKD_GET_STRING *PDBGKD_GET_STRING;

/* 3485 */
typedef _SID *PISID;

/* 3486 */
typedef _DVD_BCA_DESCRIPTOR *PDVD_BCA_DESCRIPTOR;

/* 3487 */
typedef unsigned __int16 *PTSTR;

/* 3488 */
typedef const _GUID *__rcGUID_t;

/* 3489 */
typedef HRSRC__ *HRSRC;

/* 3490 */
typedef _IA64_PARTIAL_KPRCB *PIA64_PARTIAL_KPRCB;

/* 3491 */
typedef unsigned int DXFILEFORMAT;

/* 3492 */
typedef int (__stdcall *OB_PARSE_METHOD)(void *, _OBJECT_TYPE *, unsigned int, _STRING *, _STRING *, void *, void **);

/* 3493 */
typedef _MAPPED_ADDRESS *PMAPPED_ADDRESS;

/* 3494 */
typedef _CPTABLEINFO *PCPTABLEINFO;

/* 3495 */
typedef unsigned __int8 *PSECURITY_CONTEXT_TRACKING_MODE;

/* 3496 */
typedef char S008;

/* 3497 */
typedef unsigned __int8 U008;

/* 3498 */
typedef _IA64_KSWITCH_FRAME *PIA64_KSWITCH_FRAME;

/* 3499 */
typedef _DBGKD_GET_SET_BUS_DATA *PDBGKD_GET_SET_BUS_DATA;

/* 3500 */
typedef unsigned __int8 V008;

/* 3501 */
typedef const _DSFX_IIR_STATE *LPCDSFX_IIR_STATE;

/* 3502 */
typedef void (__stdcall *PLDR_IMPORT_MODULE_CALLBACK)(void *, char *);

/* 3503 */
typedef unsigned int (__stdcall *PWINDBG_READ_PROCESS_MEMORY_ROUTINE64)(unsigned __int64, void *, unsigned int, unsigned int *);

/* 3504 */
typedef _KPROCESS *PRKPROCESS;

/* 3505 */
typedef D3DPushBuffer *LPDIRECT3DPUSHBUFFER8;

/* 3506 */
typedef _INITIAL_TEB *PINITIAL_TEB;

/* 3507 */
typedef _DRIVER_VERIFIER_THUNK_PAIRS *PDRIVER_VERIFIER_THUNK_PAIRS;

/* 3508 */
typedef _Wx86ThreadState *PWX86THREAD;

/* 3509 */
typedef _BUS_DATA_TYPE *PBUS_DATA_TYPE;

/* 3510 */
typedef _IDEREGS *PIDEREGS;

/* 3511 */
typedef int SPFN_NUMBER;

/* 3512 */
typedef unsigned int *PPFN_NUMBER;

/* 3513 */
typedef _IMAGE_ROM_OPTIONAL_HEADER *PIMAGE_ROM_OPTIONAL_HEADER;

/* 3514 */
typedef const int *LPCLONG;

/* 3515 */
typedef unsigned __int16 wctype_t;

/* 3516 */
typedef FLOAT_SAVE *PFLOAT_SAVE;

/* 3517 */
typedef int __stdcall LPCSVR_REQUEST(void *, _PORT_MESSAGE *, _PORT_MESSAGE *);

/* 3518 */
typedef D3DFixup *LPDIRECT3DFIXUP8;

/* 3519 */
typedef _SECURITY_DESCRIPTOR *PISECURITY_DESCRIPTOR;

/* 3520 */
typedef _SYSTEM_POWER_INFORMATION *PSYSTEM_POWER_INFORMATION;

/* 3521 */
typedef _EISA_IRQ_CONFIGURATION *PEISA_IRQ_CONFIGURATION;

/* 3522 */
typedef _IOSPACE_EX *PIOSPACE_EX;

/* 3523 */
typedef _POWER_STATE *PPOWER_STATE;

/* 3524 */
typedef _XBOX_MTE_INFO *PXBOX_MTE_INFO;

/* 3525 */
typedef _MODE_READ_WRITE_RECOVERY_PAGE *PMODE_READ_WRITE_RECOVERY_PAGE;

/* 3526 */
typedef int *PSSIZE_T;

/* 3527 */
typedef unsigned int (__stdcall *PWINDBG_DISASM32)(unsigned int *, const char *, unsigned int);

/* 3528 */
typedef _IMAGE_BOUND_FORWARDER_REF *PIMAGE_BOUND_FORWARDER_REF;

/* 3529 */
typedef int (__stdcall *PRTL_INITIALIZE_LOCK_ROUTINE)(void *);

/* 3530 */
typedef unsigned int (__stdcall *PWINDBG_STACKTRACE_ROUTINE)(unsigned int, unsigned int, unsigned int, _EXTSTACKTRACE *, unsigned int);

/* 3531 */
typedef _XMEDIAINFO *PXMEDIAINFO;

/* 3532 */
typedef const _DSBUFFERDESC *LPCDSBUFFERDESC;

/* 3533 */
typedef _DBGKD_GET_CONTEXT *PDBGKD_GET_CONTEXT;

/* 3534 */
typedef unsigned int POINTER_64_INT;

/* 3535 */
typedef _CLIENT_ID64 *PCLIENT_ID64;

/* 3536 */
typedef _CM_ROM_BLOCK *PCM_ROM_BLOCK;

/* 3537 */
typedef _RTL_BITMAP *PRTL_BITMAP;

/* 3538 */
typedef _XMEDIAPACKET *PXMEDIAPACKET;

/* 3539 */
typedef XWmaFileMediaObject *LPXWMAFILEMEDIAOBJECT;

/* 3540 */
typedef void *PSECURITY_DESCRIPTOR;

/* 3541 */
typedef _KD_PACKET *PKD_PACKET;

/* 3542 */
typedef void *HLOCAL;

/* 3543 */
typedef HKEY__ *HKEY;

/* 3544 */
typedef const unsigned __int16 *PCWCH;

/* 3545 */
typedef _DBGKD_READ_MEMORY32 *PDBGKD_READ_MEMORY32;

/* 3546 */
typedef _DVD_DISK_KEY_DESCRIPTOR *PDVD_DISK_KEY_DESCRIPTOR;

/* 3547 */
typedef _LARGE_INTEGER *PPHYSICAL_ADDRESS;

/* 3548 */
typedef unsigned int VOID_PTR;

/* 3549 */
typedef void (__stdcall *pfXcKeyTable)(unsigned int, unsigned __int8 *, unsigned __int8 *);

/* 3550 */
typedef _PEB *PPEB;

/* 3551 */
typedef _EXCEPTION_DISPOSITION (__stdcall *PEXCEPTION_ROUTINE)(_EXCEPTION_RECORD *, void *, _CONTEXT *, void *);

/* 3552 */
typedef unsigned __int64 DWORD64;

/* 3553 */
typedef _IMAGE_NT_HEADERS64 *PIMAGE_NT_HEADERS64;

/* 3554 */
typedef int *PLONG_PTR;

/* 3555 */
typedef _RTL_BITMAP_RUN *PRTL_BITMAP_RUN;

/* 3556 */
typedef _CSTRING *PCSTRING;

/* 3557 */
typedef unsigned int ULONG_PTR;

/* 3558 */
typedef unsigned int MMRESULT;

/* 3559 */
typedef _FIELD_INFO *PFIELD_INFO;

/* 3560 */
typedef HWND__ *HWND;

/* 3561 */
typedef IDirectXFile **LPLPDIRECTXFILE;

/* 3562 */
typedef _XBEIMAGE_HEADER *PXBEIMAGE_HEADER;

/* 3563 */
typedef const _XMEDIAPACKET *LPCXMEDIAPACKET;

/* 3564 */
typedef _DISK_HISTOGRAM *PDISK_HISTOGRAM;

/* 3565 */
typedef _TOKEN_CONTROL *PTOKEN_CONTROL;

/* 3566 */
typedef _SYSTEM_ALARM_ACE *PSYSTEM_ALARM_ACE;

/* 3567 */
typedef _OHCD_DEVICE_EXTENSION *POHCD_DEVICE_EXTENSION;

/* 3568 */
typedef const VADBUFFEREVENTSINK *REFVADBUFFEREVENTSINK;

/* 3569 */
typedef unsigned int (__stdcall *PWINDBG_STACKTRACE_ROUTINE32)(unsigned int, unsigned int, unsigned int, _EXTSTACKTRACE32 *, unsigned int);

/* 3570 */
typedef _QUAD *PQUAD;

/* 3571 */
typedef _DBGKD_READ_WRITE_MSR *PDBGKD_READ_WRITE_MSR;

/* 3572 */
typedef _FORMAT_PARAMETERS *PFORMAT_PARAMETERS;

/* 3573 */
typedef int BOOL;

/* 3574 */
typedef in_addr *LPIN_ADDR;

/* 3575 */
typedef _MMPFN *PMMPFN;

/* 3576 */
typedef LONGAD *PLONGAD;

/* 3577 */
typedef unsigned int (__stdcall *PWINDBG_DISASM)(unsigned int *, const char *, unsigned int);

/* 3578 */
typedef unsigned int (__stdcall *pfXcCryptService)(unsigned int, void *);

/* 3579 */
typedef _FILE_FS_ATTRIBUTE_INFORMATION *PFILE_FS_ATTRIBUTE_INFORMATION;

/* 3580 */
typedef _DMGD *PDMGD;

/* 3581 */
typedef _RTL_PROCESS_MODULES *PRTL_PROCESS_MODULES;

/* 3582 */
typedef _DSFX_I3DL2REVERB_PARAMS *LPDSFX_I3DL2REVERB_PARAMS;

/* 3583 */
typedef _ImageArchitectureHeader *PIMAGE_ARCHITECTURE_HEADER;

/* 3584 */
typedef _SECURITY_TOKEN_PROXY_DATA *PSECURITY_TOKEN_PROXY_DATA;

/* 3585 */
typedef void (__stdcall *OB_DELETE_METHOD)(void *);

/* 3586 */
typedef _MMPFNREGION *PMMPFNREGION;

/* 3587 */
typedef unsigned int (__stdcall *LPFNWMAXMODATACALLBACK)(void *, unsigned int, unsigned int, void **);

/* 3588 */
typedef tagPOINT *NPPOINT;

/* 3589 */
typedef int *LPBOOL;

/* 3590 */
typedef tagPOINT *LPPOINT;

/* 3591 */
typedef HKL__ *HKL;

/* 3592 */
typedef _X86_PARTIAL_KPRCB *PX86_PARTIAL_KPRCB;

/* 3593 */
typedef _CPPORT *PCPPORT;

/* 3594 */
typedef tagRECT *LPRECT;

/* 3595 */
typedef _RTL_SPLAY_LINKS *PRTL_SPLAY_LINKS;

/* 3596 */
typedef tagRECT *NPRECT;

/* 3597 */
typedef _SEARCHMEMORY *PSEARCHMEMORY;

/* 3598 */
typedef unsigned int (__stdcall *PWINDBG_GET_EXPRESSION32)(const char *);

/* 3599 */
typedef _NOTIFICATION_MEDIA_STATUS *PNOTIFICATION_MEDIA_STATUS;

/* 3600 */
typedef _LDT_INFORMATION *PPROCESS_LDT_INFORMATION;

/* 3601 */
typedef ID3DXBaseMesh *LPD3DXBASEMESH;

/* 3602 */
typedef const char *LPCCH;

/* 3603 */
typedef _DBGKM_LOAD_DLL *PDBGKM_LOAD_DLL;

/* 3604 */
typedef int (__stdcall *PRTLP_EXIT_THREAD)(int);

/* 3605 */
typedef _CDROM_PLAY_AUDIO_MSF *PCDROM_PLAY_AUDIO_MSF;

/* 3606 */
typedef const _DSFX_IIR_PARAMS *LPCDSFX_IIR_PARAMS;

/* 3607 */
typedef unsigned int PFN_COUNT;

/* 3608 */
typedef _DBGUI_APIMSG *PDBGUI_APIMSG;

/* 3609 */
typedef void (__stdcall *PCREATE_THREAD_NOTIFY_ROUTINE)(_ETHREAD *, void *, unsigned __int8);

/* 3610 */
typedef char SCHAR;

/* 3611 */
typedef char *PCHAR;

/* 3612 */
typedef unsigned __int16 WCHAR;

/* 3613 */
typedef unsigned __int16 TCHAR;

/* 3614 */
typedef unsigned __int8 UCHAR;

/* 3615 */
typedef _SENSE_DATA *PSENSE_DATA;

/* 3616 */
typedef unsigned int D3DMULTISAMPLE_TYPE;

/* 3617 */
typedef const type_info *__RTtypeidReturnType;

/* 3618 */
typedef char OCHAR;

/* 3619 */
typedef char CCHAR;

/* 3620 */
typedef _RECTL *LPRECTL;

/* 3621 */
typedef _KEY_NODE_INFORMATION *PKEY_NODE_INFORMATION;

/* 3622 */
typedef _DVD_COPYRIGHT_DESCRIPTOR *PDVD_COPYRIGHT_DESCRIPTOR;

/* 3623 */
typedef _FILE_END_OF_FILE_INFORMATION *PFILE_END_OF_FILE_INFORMATION;

/* 3624 */
typedef unsigned __int8 FCHAR;

/* 3625 */
typedef D3DTexture *PDIRECT3DTEXTURE8;

/* 3626 */
typedef void (__stdcall *PKINTERRUPT_ROUTINE)();

/* 3627 */
typedef _POOL_HEADER *PPOOL_HEADER;

/* 3628 */
typedef _DUMP_POINTERS *PDUMP_POINTERS;

/* 3629 */
typedef void *GLOBALHANDLE;

/* 3630 */
typedef DVD_READ_STRUCTURE *PDVD_READ_STRUCTURE;

/* 3631 */
typedef const unsigned __int16 *LPCWSTR;

/* 3632 */
typedef _KMUTANT *PKMUTANT;

/* 3633 */
typedef _SYSDBG_COMMAND *PSYSDBG_COMMAND;

/* 3634 */
typedef _IDE_CHANNEL_OBJECT *PIDE_CHANNEL_OBJECT;

/* 3635 */
typedef unsigned int (__stdcall *PWINDBG_GET_EXPRESSION)(const char *);

/* 3636 */
typedef _DVD_RPC_KEY *PDVD_RPC_KEY;

/* 3637 */
typedef _IO_RESOURCE_DESCRIPTOR *PIO_RESOURCE_DESCRIPTOR;

/* 3638 */
typedef _MODE_READ_RECOVERY_PAGE *PMODE_READ_RECOVERY_PAGE;

/* 3639 */
typedef _STRING64 *PSTRING64;

/* 3640 */
typedef _MODE_FLEXIBLE_DISK_PAGE *PMODE_FLEXIBLE_DISK_PAGE;

/* 3641 */
typedef _GENERIC_MAPPING *PGENERIC_MAPPING;

/* 3642 */
typedef _Wx86TIB *PWX86TIB;

/* 3643 */
typedef _FPO_DATA *PFPO_DATA;

/* 3644 */
typedef _POOL_LOOKASIDE_LIST *PPOOL_LOOKASIDE_LIST;

/* 3645 */
typedef unsigned __int16 LANGID;

/* 3646 */
typedef char *PSTR;

/* 3647 */
typedef D3DBaseTexture *LPDIRECT3DBASETEXTURE8;

/* 3648 */
typedef HOST_TO_DSP_COMMANDBLOCK *PHOST_TO_DSP_COMMANDBLOCK;

/* 3649 */
typedef _REG_NOTIFY_INFORMATION *PREG_NOTIFY_INFORMATION;

/* 3650 */
typedef DBGKD_INTERNAL_BREAKPOINT *PDBGKD_INTERNAL_BREAKPOINT;

/* 3651 */
typedef IDirectXFile *LPDIRECTXFILE;

/* 3652 */
typedef _DEBUG_PARAMETERS *PDEBUG_PARAMETERS;

/* 3653 */
typedef _DEVICE_POWER_STATE *PDEVICE_POWER_STATE;

/* 3654 */
typedef _MECHANICAL_STATUS *PMECHANICAL_STATUS;

/* 3655 */
typedef _FILE_ATTRIBUTE_TAG_INFORMATION *PFILE_ATTRIBUTE_TAG_INFORMATION;

/* 3656 */
typedef _MEMORYSTATUS *LPMEMORYSTATUS;

/* 3657 */
typedef void (__stdcall *LPWSAOVERLAPPED_COMPLETION_ROUTINE)(unsigned int, unsigned int, _OVERLAPPED *, unsigned int);

/* 3658 */
typedef _DSFX_FLANGE_MONO_PARAMS *LPDSFX_FLANGE_MONO_PARAMS;

/* 3659 */
typedef unsigned int *PKSPIN_LOCK;

/* 3660 */
typedef _IOSPACE64 *PIOSPACE64;

/* 3661 */
typedef D3DXPLANE *LPD3DXPLANE;

/* 3662 */
typedef _RTL_RELATIVE_NAME *PRTL_RELATIVE_NAME;

/* 3663 */
typedef HSTR__ *HSTR;

/* 3664 */
typedef _IMAGE_BOUND_IMPORT_DESCRIPTOR *PIMAGE_BOUND_IMPORT_DESCRIPTOR;

/* 3665 */
typedef _DVD_MANUFACTURER_DESCRIPTOR *PDVD_MANUFACTURER_DESCRIPTOR;

/* 3666 */
typedef const char *PCOSTR;

/* 3667 */
typedef _CDVD_REPORT_AGID_DATA *PCDVD_REPORT_AGID_DATA;

/* 3668 */
typedef unsigned __int16 *LPWSTR;

/* 3669 */
typedef _OBJECT_TYPE_LIST *POBJECT_TYPE_LIST;

/* 3670 */
typedef unsigned int CLONG;

/* 3671 */
typedef unsigned int FLONG;

/* 3672 */
typedef _KEVENT *PKEVENT;

/* 3673 */
typedef _FILE_COMPLETION_INFORMATION *PFILE_COMPLETION_INFORMATION;

/* 3674 */
typedef _IDE_MEDIA_BOARD_EXTENSION *PIDE_MEDIA_BOARD_EXTENSION;

/* 3675 */
typedef void (__stdcall *PWINDBG_GET_SYMBOL)(void *, unsigned __int8 *, unsigned int *);

/* 3676 */
typedef _DVD_COPY_PROTECT_KEY *PDVD_COPY_PROTECT_KEY;

/* 3677 */
typedef _SECURITY_QUALITY_OF_SERVICE *PSECURITY_QUALITY_OF_SERVICE;

/* 3678 */
typedef _PEB_FREE_BLOCK *PPEB_FREE_BLOCK;

/* 3679 */
typedef unsigned __int8 (__fastcall *PPROCESSOR_IDLE_HANDLER)(PROCESSOR_IDLE_TIMES *);

/* 3680 */
typedef unsigned __int64 DBGKD_ULONG3264;

/* 3681 */
typedef int *PLONG;

/* 3682 */
typedef unsigned int ULONG;

/* 3683 */
typedef _PCI_PMC *PPCI_PMC;

/* 3684 */
typedef void (__stdcall *PWINDBG_GET_SYMBOL32)(unsigned int, unsigned __int8 *, unsigned int *);

/* 3685 */
typedef _STRING *POBJECT_STRING;

/* 3686 */
typedef unsigned __int16 *LPTSTR;

/* 3687 */
typedef _POOL_DESCRIPTOR *PPOOL_DESCRIPTOR;

/* 3688 */
typedef _D3DXATTRIBUTERANGE *LPD3DXATTRIBUTERANGE;

/* 3689 */
typedef void (__stdcall *pfXcRC4Crypt)(unsigned __int8 *, unsigned int, unsigned __int8 *);

/* 3690 */
typedef const _DSLFODESC *LPCDSLFODESC;

/* 3691 */
typedef unsigned __int8 (__stdcall *PKDEBUG_ROUTINE)(_KTRAP_FRAME *, _KTRAP_FRAME *, _EXCEPTION_RECORD *, _CONTEXT *, unsigned __int8);

/* 3692 */
typedef int ptrdiff_t;

/* 3693 */
typedef unsigned int (__stdcall *PDRIVER_VERIFIER_THUNK_ROUTINE)(void *);

/* 3694 */
typedef void (__stdcall *PKD_PORT_SEND_PACKET)(unsigned int, _STRING *, _STRING *);

/* 3695 */
typedef int (__stdcall *PIO_COMPLETION_ROUTINE)(_DEVICE_OBJECT *, _IRP *, void *);

/* 3696 */
typedef _DSFX_CHORUS_MONO_STATE *LPDSFX_CHORUS_MONO_STATE;

/* 3697 */
typedef _MODE_RIGID_GEOMETRY_PAGE *PMODE_RIGID_GEOMETRY_PAGE;

/* 3698 */
typedef _IMAGE_LINENUMBER *PIMAGE_LINENUMBER;

/* 3699 */
typedef unsigned __int8 BOOLEAN;

/* 3700 */
typedef _IA64_CONTEXT *PIA64_CONTEXT;

/* 3701 */
typedef _CM_SERIAL_DEVICE_DATA *PCM_SERIAL_DEVICE_DATA;

/* 3702 */
typedef _TOKEN_INFORMATION_CLASS *PTOKEN_INFORMATION_CLASS;

/* 3703 */
typedef D3DXCOLOR *LPD3DXCOLOR;

/* 3704 */
typedef D3DVolume *PDIRECT3DVOLUME8;

/* 3705 */
typedef HMENU__ *HMENU;

/* 3706 */
typedef _KPROCESS *PKPROCESS;

/* 3707 */
typedef _IO_SCSI_CAPABILITIES *PIO_SCSI_CAPABILITIES;

/* 3708 */
typedef _UNICODE_PREFIX_TABLE_ENTRY *PUNICODE_PREFIX_TABLE_ENTRY;

/* 3709 */
struct /*VFT*/ CDirectSoundBufferSettings_vtbl
{
  void (__thiscall *~CRefCount)(CRefCount *this);
  unsigned int (__stdcall *AddRef)(CRefCount *this);
  unsigned int (__stdcall *Release)(CRefCount *this);
};

/* 3710 */
struct /*VFT*/ CMcpxBuffer_vtbl
{
  void (__thiscall *~CRefCount)(CRefCount *this);
  unsigned int (__stdcall *AddRef)(CRefCount *this);
  unsigned int (__stdcall *Release)(CRefCount *this);
  void (__thiscall *ActivateVoice)(CMcpxVoiceClient *this);
  void (__thiscall *DeactivateVoice)(CMcpxVoiceClient *this, int, int);
  int (__thiscall *ServiceVoiceInterrupt)(CMcpxVoiceClient *this);
  void (__thiscall *ServiceDeferredCommand)(CMcpxVoiceClient *this, unsigned int, unsigned int);
};

/* 3711 */
struct /*VFT*/ ID3DXMesh_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *DrawSubset)(ID3DXBaseMesh *this, unsigned int);
  unsigned int (__stdcall *GetNumFaces)(ID3DXBaseMesh *this);
  unsigned int (__stdcall *GetNumVertices)(ID3DXBaseMesh *this);
  unsigned int (__stdcall *GetFVF)(ID3DXBaseMesh *this);
  int (__stdcall *GetDeclaration)(ID3DXBaseMesh *this, unsigned int *);
  unsigned int (__stdcall *GetOptions)(ID3DXBaseMesh *this);
  int (__stdcall *GetDevice)(ID3DXBaseMesh *this, D3DDevice **);
  int (__stdcall *CloneMeshFVF)(ID3DXBaseMesh *this, unsigned int, unsigned int, D3DDevice *, ID3DXMesh **);
  int (__stdcall *CloneMesh)(ID3DXBaseMesh *this, unsigned int, const unsigned int *, D3DDevice *, ID3DXMesh **);
  int (__stdcall *GetVertexBuffer)(ID3DXBaseMesh *this, D3DVertexBuffer **);
  int (__stdcall *GetIndexBuffer)(ID3DXBaseMesh *this, D3DIndexBuffer **);
  int (__stdcall *LockVertexBuffer)(ID3DXBaseMesh *this, unsigned int, unsigned __int8 **);
  int (__stdcall *UnlockVertexBuffer)(ID3DXBaseMesh *this);
  int (__stdcall *LockIndexBuffer)(ID3DXBaseMesh *this, unsigned int, unsigned __int8 **);
  int (__stdcall *UnlockIndexBuffer)(ID3DXBaseMesh *this);
  int (__stdcall *GetAttributeTable)(ID3DXBaseMesh *this, _D3DXATTRIBUTERANGE *, unsigned int *);
  int (__stdcall *LockAttributeBuffer)(ID3DXMesh *this, unsigned int, unsigned int **);
  int (__stdcall *UnlockAttributeBuffer)(ID3DXMesh *this);
  int (__stdcall *ConvertPointRepsToAdjacency)(ID3DXMesh *this, const unsigned int *, unsigned int *);
  int (__stdcall *ConvertAdjacencyToPointReps)(ID3DXMesh *this, const unsigned int *, unsigned int *);
  int (__stdcall *GenerateAdjacency)(ID3DXMesh *this, float, unsigned int *);
  int (__stdcall *Optimize)(ID3DXMesh *this, unsigned int, const unsigned int *, unsigned int *, unsigned int *, ID3DXBuffer **, ID3DXMesh **);
  int (__stdcall *OptimizeInplace)(ID3DXMesh *this, unsigned int, const unsigned int *, unsigned int *, unsigned int *, ID3DXBuffer **);
};

/* 3712 */
typedef _LARGE_INTEGER LARGE_INTEGER;

/* 3713 */
typedef _GUID GUID;

/* 3714 */
typedef struct _SCOPETABLE_ENTRY *PSCOPETABLE_ENTRY;

/* 3715 */
struct _EH3_EXCEPTION_REGISTRATION
{
  struct _EH3_EXCEPTION_REGISTRATION *Next;
  PVOID ExceptionHandler;
  PSCOPETABLE_ENTRY ScopeTable;
  DWORD TryLevel;
};

/* 3716 */
typedef struct _EH3_EXCEPTION_REGISTRATION EH3_EXCEPTION_REGISTRATION;

/* 3717 */
typedef struct _EH3_EXCEPTION_REGISTRATION *PEH3_EXCEPTION_REGISTRATION;

/* 3718 */
struct CPPEH_RECORD
{
  DWORD old_esp;
  EXCEPTION_POINTERS *exc_ptr;
  struct _EH3_EXCEPTION_REGISTRATION registration;
};

/* 3719 */
struct D3DK;

